{
	"compiler": {
		"version": "0.8.23+commit.f704f362"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "UnauthorizedCallContext",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "UpgradeFailed",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "implementation",
						"type": "address"
					}
				],
				"name": "Upgraded",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "proxiableUUID",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newImplementation",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "upgradeToAndCall",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Solady (https://github.com/vectorized/solady/blob/main/src/utils/UUPSUpgradeable.sol)Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/utils/UUPSUpgradeable.sol) Note: - This implementation is intended to be used with ERC1967 proxies. See: `LibClone.deployERC1967` and related functions. - This implementation is NOT compatible with legacy OpenZeppelin proxies which do not store the implementation at `_ERC1967_IMPLEMENTATION_SLOT`.",
			"errors": {
				"UnauthorizedCallContext()": [
					{
						"details": "The call is from an unauthorized call context."
					}
				],
				"UpgradeFailed()": [
					{
						"details": "The upgrade failed."
					}
				]
			},
			"events": {
				"Upgraded(address)": {
					"details": "Emitted when the proxy's implementation is upgraded."
				}
			},
			"kind": "dev",
			"methods": {
				"proxiableUUID()": {
					"details": "Returns the storage slot used by the implementation, as specified in [ERC1822](https://eips.ethereum.org/EIPS/eip-1822). Note: The `notDelegated` modifier prevents accidental upgrades to an implementation that is a proxy contract."
				},
				"upgradeToAndCall(address,bytes)": {
					"details": "Upgrades the proxy's implementation to `newImplementation`. Emits a {Upgraded} event. Note: Passing in empty `data` skips the delegatecall to `newImplementation`."
				}
			},
			"stateVariables": {
				"_ERC1967_IMPLEMENTATION_SLOT": {
					"details": "The ERC-1967 storage slot for the implementation in the proxy. `uint256(keccak256(\"eip1967.proxy.implementation\")) - 1`."
				},
				"_UPGRADED_EVENT_SIGNATURE": {
					"details": "`keccak256(bytes(\"Upgraded(address)\"))`."
				},
				"__self": {
					"details": "For checking if the context is a delegate call."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "UUPS proxy mixin.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/UUPSUpgradeable.sol": "UUPSUpgradeable"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/UUPSUpgradeable.sol": {
			"keccak256": "0x80b163325261e790fe2e07b078709bb1cf7fbc9bdea2bb9c94a18414a342a582",
			"license": "MIT",
			"urls": [
				"bzz-raw://2b014c135b85275e9f47d62dce4689205cbdd4a742c439a8a52ffd26ece6125f",
				"dweb:/ipfs/QmRDyWkadMBdr1TZAF7qvfHCcpT9WEctC3nxREAY3DRUiz"
			]
		}
	},
	"version": 1
}