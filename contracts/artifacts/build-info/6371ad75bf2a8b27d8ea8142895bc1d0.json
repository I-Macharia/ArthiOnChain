{
	"id": "6371ad75bf2a8b27d8ea8142895bc1d0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tokenize.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.23;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract TitleDeedTokenization is ERC721, Ownable {\r\n    uint256 public nextTokenId;\r\n    mapping(uint256 => string) public tokenDocumentHashes;\r\n    address public connectedWallet;\r\n\r\n    constructor(address initialOwner) ERC721(\"TitleDeedToken\", \"TDT\") Ownable(initialOwner) {\r\n        // Initialize the Ownable contract with the initialOwner address\r\n    }\r\n\r\n    function connectWallet(address _walletAddress) public {\r\n        connectedWallet = _walletAddress;\r\n    }\r\n\r\n    // Function to mint a new token for a land title\r\n    function mintToken(address to, string memory documentHash) public onlyOwner {\r\n        uint256 tokenId = nextTokenId;\r\n        nextTokenId++;\r\n\r\n        _mint(to, tokenId);\r\n        tokenDocumentHashes[tokenId] = documentHash;\r\n    }\r\n\r\n        // Function to check if a token exists\r\n    function tokenExists(uint256 tokenId) public view returns (bool) {\r\n        return ERC721.ownerOf(tokenId) != address(0);\r\n    }\r\n\r\n    // Function to get the document hash of a token\r\n    function getDocumentHash(uint256 tokenId) public view returns (string memory) {\r\n        require(tokenExists(tokenId), \"Token does not exist\"); \r\n        return tokenDocumentHashes[tokenId];\r\n    }\r\n\r\n    // Function to burn a token\r\n    function burnToken(uint256 tokenId) public onlyOwner {\r\n        require(tokenExists(tokenId), \"Token does not exist\"); \r\n        _burn(tokenId);\r\n        delete tokenDocumentHashes[tokenId];\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Context} from \"../utils/Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * The initial owner is set to the address provided by the deployer. This can\r\n * later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    /**\r\n     * @dev The caller account is not authorized to perform an operation.\r\n     */\r\n    error OwnableUnauthorizedAccount(address account);\r\n\r\n    /**\r\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\r\n     */\r\n    error OwnableInvalidOwner(address owner);\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\r\n     */\r\n    constructor(address initialOwner) {\r\n        if (initialOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(initialOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        if (owner() != _msgSender()) {\r\n            revert OwnableUnauthorizedAccount(_msgSender());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby disabling any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        if (newOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC721} from \"./IERC721.sol\";\r\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\r\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\r\nimport {Context} from \"../../utils/Context.sol\";\r\nimport {Strings} from \"../../utils/Strings.sol\";\r\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\r\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\r\n\r\n/**\r\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\r\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\r\n * {ERC721Enumerable}.\r\n */\r\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\r\n    using Strings for uint256;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    mapping(uint256 tokenId => address) private _owners;\r\n\r\n    mapping(address owner => uint256) private _balances;\r\n\r\n    mapping(uint256 tokenId => address) private _tokenApprovals;\r\n\r\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\r\n\r\n    /**\r\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC721).interfaceId ||\r\n            interfaceId == type(IERC721Metadata).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner) public view virtual returns (uint256) {\r\n        if (owner == address(0)) {\r\n            revert ERC721InvalidOwner(address(0));\r\n        }\r\n        return _balances[owner];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\r\n        return _requireOwned(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\r\n        _requireOwned(tokenId);\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, can be overridden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) public virtual {\r\n        _approve(to, tokenId, _msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\r\n        _requireOwned(tokenId);\r\n\r\n        return _getApproved(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual {\r\n        _setApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\r\n        if (to == address(0)) {\r\n            revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\r\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\r\n        address previousOwner = _update(to, tokenId, _msgSender());\r\n        if (previousOwner != from) {\r\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\r\n        safeTransferFrom(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\r\n        transferFrom(from, to, tokenId);\r\n        _checkOnERC721Received(from, to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\r\n     *\r\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\r\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\r\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\r\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\r\n     */\r\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\r\n        return _owners[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\r\n     */\r\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\r\n     * particular (ignoring whether it is owned by `owner`).\r\n     *\r\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\r\n     * assumption.\r\n     */\r\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\r\n        return\r\n            spender != address(0) &&\r\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\r\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\r\n     * the `spender` for the specific `tokenId`.\r\n     *\r\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\r\n     * assumption.\r\n     */\r\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\r\n        if (!_isAuthorized(owner, spender, tokenId)) {\r\n            if (owner == address(0)) {\r\n                revert ERC721NonexistentToken(tokenId);\r\n            } else {\r\n                revert ERC721InsufficientApproval(spender, tokenId);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\r\n     *\r\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\r\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\r\n     *\r\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\r\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\r\n     * remain consistent with one another.\r\n     */\r\n    function _increaseBalance(address account, uint128 value) internal virtual {\r\n        unchecked {\r\n            _balances[account] += value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\r\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\r\n     *\r\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\r\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\r\n     */\r\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\r\n        address from = _ownerOf(tokenId);\r\n\r\n        // Perform (optional) operator check\r\n        if (auth != address(0)) {\r\n            _checkAuthorized(from, auth, tokenId);\r\n        }\r\n\r\n        // Execute the update\r\n        if (from != address(0)) {\r\n            // Clear approval. No need to re-authorize or emit the Approval event\r\n            _approve(address(0), tokenId, address(0), false);\r\n\r\n            unchecked {\r\n                _balances[from] -= 1;\r\n            }\r\n        }\r\n\r\n        if (to != address(0)) {\r\n            unchecked {\r\n                _balances[to] += 1;\r\n            }\r\n        }\r\n\r\n        _owners[tokenId] = to;\r\n\r\n        emit Transfer(from, to, tokenId);\r\n\r\n        return from;\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - `to` cannot be the zero address.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _mint(address to, uint256 tokenId) internal {\r\n        if (to == address(0)) {\r\n            revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        address previousOwner = _update(to, tokenId, address(0));\r\n        if (previousOwner != address(0)) {\r\n            revert ERC721InvalidSender(address(0));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId) internal {\r\n        _safeMint(to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\r\n        _mint(to, tokenId);\r\n        _checkOnERC721Received(address(0), to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId) internal {\r\n        address previousOwner = _update(address(0), tokenId, address(0));\r\n        if (previousOwner == address(0)) {\r\n            revert ERC721NonexistentToken(tokenId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _transfer(address from, address to, uint256 tokenId) internal {\r\n        if (to == address(0)) {\r\n            revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        address previousOwner = _update(to, tokenId, address(0));\r\n        if (previousOwner == address(0)) {\r\n            revert ERC721NonexistentToken(tokenId);\r\n        } else if (previousOwner != from) {\r\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\r\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\r\n     *\r\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\r\n     *\r\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\r\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\r\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` cannot be the zero address.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\r\n        _safeTransfer(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\r\n        _transfer(from, to, tokenId);\r\n        _checkOnERC721Received(from, to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\r\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\r\n     */\r\n    function _approve(address to, uint256 tokenId, address auth) internal {\r\n        _approve(to, tokenId, auth, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\r\n     * emitted in the context of transfers.\r\n     */\r\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\r\n        // Avoid reading the owner unless necessary\r\n        if (emitEvent || auth != address(0)) {\r\n            address owner = _requireOwned(tokenId);\r\n\r\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\r\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\r\n                revert ERC721InvalidApprover(auth);\r\n            }\r\n\r\n            if (emitEvent) {\r\n                emit Approval(owner, to, tokenId);\r\n            }\r\n        }\r\n\r\n        _tokenApprovals[tokenId] = to;\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Requirements:\r\n     * - operator can't be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\r\n        if (operator == address(0)) {\r\n            revert ERC721InvalidOperator(operator);\r\n        }\r\n        _operatorApprovals[owner][operator] = approved;\r\n        emit ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\r\n     * Returns the owner.\r\n     *\r\n     * Overrides to ownership logic should be done to {_ownerOf}.\r\n     */\r\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\r\n        address owner = _ownerOf(tokenId);\r\n        if (owner == address(0)) {\r\n            revert ERC721NonexistentToken(tokenId);\r\n        }\r\n        return owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\r\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param data bytes optional data to send along with the call\r\n     */\r\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\r\n        if (to.code.length > 0) {\r\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\r\n                if (retval != IERC721Receiver.onERC721Received.selector) {\r\n                    revert ERC721InvalidReceiver(to);\r\n                }\r\n            } catch (bytes memory reason) {\r\n                if (reason.length == 0) {\r\n                    revert ERC721InvalidReceiver(to);\r\n                } else {\r\n                    /// @solidity memory-safe-assembly\r\n                    assembly {\r\n                        revert(add(32, reason), mload(reason))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard ERC20 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\r\n */\r\ninterface IERC20Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\r\n     * Used in batch transfers.\r\n     * @param idsLength Length of the array of token identifiers\r\n     * @param valuesLength Length of the array of token amounts\r\n     */\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC165} from \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Math} from \"./math/Math.sol\";\r\nimport {SignedMath} from \"./math/SignedMath.sol\";\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\r\n    uint8 private constant ADDRESS_LENGTH = 20;\r\n\r\n    /**\r\n     * @dev The `value` string doesn't fit in the specified `length`.\r\n     */\r\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            uint256 length = Math.log10(value) + 1;\r\n            string memory buffer = new string(length);\r\n            uint256 ptr;\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                ptr := add(buffer, add(32, length))\r\n            }\r\n            while (true) {\r\n                ptr--;\r\n                /// @solidity memory-safe-assembly\r\n                assembly {\r\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\r\n                }\r\n                value /= 10;\r\n                if (value == 0) break;\r\n            }\r\n            return buffer;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toStringSigned(int256 value) internal pure returns (string memory) {\r\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            return toHexString(value, Math.log256(value) + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        uint256 localValue = value;\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\r\n            localValue >>= 4;\r\n        }\r\n        if (localValue != 0) {\r\n            revert StringsInsufficientHexLength(value, length);\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\r\n     * representation.\r\n     */\r\n    function toHexString(address addr) internal pure returns (string memory) {\r\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the two strings are equal.\r\n     */\r\n    function equal(string memory a, string memory b) internal pure returns (bool) {\r\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    function _contextSuffixLength() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC721} from \"../IERC721.sol\";\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Metadata is IERC721 {\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @title ERC721 token receiver interface\r\n * @dev Interface for any contract that wants to support safeTransfers\r\n * from ERC721 asset contracts.\r\n */\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\r\n     * reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\r\n\r\n/**\r\n * @dev Required interface of an ERC721 compliant contract.\r\n */\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\r\n     *   {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\r\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\r\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // must be unchecked in order to support `n = type(int256).min`\r\n            return uint256(n >= 0 ? n : -n);\r\n        }\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    /**\r\n     * @dev Muldiv operation overflow.\r\n     */\r\n    error MathOverflowedMulDiv();\r\n\r\n    enum Rounding {\r\n        Floor, // Toward negative infinity\r\n        Ceil, // Toward positive infinity\r\n        Trunc, // Toward zero\r\n        Expand // Away from zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds towards infinity instead\r\n     * of rounding towards zero.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (b == 0) {\r\n            // Guarantee the same behavior as in a regular Solidity division.\r\n            return a / b;\r\n        }\r\n\r\n        // (a + b - 1) / b can overflow on addition, so we distribute.\r\n        return a == 0 ? 0 : (a - 1) / b + 1;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\r\n     * denominator == 0.\r\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\r\n     * Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\r\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2^256 + prod0.\r\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\r\n                // The surrounding unchecked block does not change this fact.\r\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\r\n            if (denominator <= prod1) {\r\n                revert MathOverflowedMulDiv();\r\n            }\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\r\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            uint256 twos = denominator & (0 - denominator);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\r\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv = 1 mod 2^4.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\r\n            // works in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\r\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        uint256 result = mulDiv(x, y, denominator);\r\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\r\n     * towards zero.\r\n     *\r\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\r\n        //\r\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\r\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\r\n        //\r\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\r\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\r\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\r\n        //\r\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\r\n        uint256 result = 1 << (log2(a) >> 1);\r\n\r\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\r\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\r\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\r\n        // into the expected uint128 result.\r\n        unchecked {\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            return min(result, a / result);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >> 4 > 0) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >> 2 > 0) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value >> 1 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 16;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 8;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 4;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 2;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\r\n     */\r\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\r\n        return uint8(rounding) % 2 == 1;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe889e9f6b8469155c967f403ad7508eaa66af8cad1cb9a003536a8e4f281d348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e32c81c8d84199eda0de40d33bb77c7acbb482e3f545d5cfba8195af0a88e0\",\"dweb:/ipfs/Qmaf1WAinzjYWGNxRzCTmn2QABFWS912HwC8eiD7cyTgis\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xdde6917a300a3e655ca443b76266ce89145a7c9eb6a70298bf8aab4965bc40fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39416f61b555df983b22c85803cbe7606fb7f2004b4dbbd51995c7dc552a7137\",\"dweb:/ipfs/QmUG2ghvGz4iDLrvaUfEjcjn8qbvfcoi5AFpGW9t4cupGc\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 327,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 331,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 337,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":262:3191  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":262:3191  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e1f7aea5cb8381369db5ae1343af9939727d1fb869682274399f36a7d529ce3d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e1f7aea5cb8381369db5ae1343af9939727d1fb869682274399f36a7d529ce3d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xF7 0xAE 0xA5 0xCB DUP4 DUP2 CALLDATASIZE SWAP14 0xB5 0xAE SGT NUMBER 0xAF SWAP10 CODECOPY PUSH19 0x7D1FB869682274399F36A7D529CE3D64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "262:2929:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e1f7aea5cb8381369db5ae1343af9939727d1fb869682274399f36a7d529ce3d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xF7 0xAE 0xA5 0xCB DUP4 DUP2 CALLDATASIZE SWAP14 0xB5 0xAE SGT NUMBER 0xAF SWAP10 CODECOPY PUSH19 0x7D1FB869682274399F36A7D529CE3D64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "262:2929:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e1f7aea5cb8381369db5ae1343af9939727d1fb869682274399f36a7d529ce3d64736f6c634300081a0033",
									".code": [
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/tokenize.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":211:15531  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":211:15531  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c66c78698076659038e9025d858eb2f320066a0769e700f56c33e6e166d8706f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c66c78698076659038e9025d858eb2f320066a0769e700f56c33e6e166d8706f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 PUSH13 0x78698076659038E9025D858EB2 RETURN KECCAK256 MOD PUSH11 0x769E700F56C33E6E166D8 PUSH17 0x6F64736F6C634300081A00330000000000 ",
							"sourceMap": "211:15320:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c66c78698076659038e9025d858eb2f320066a0769e700f56c33e6e166d8706f64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 PUSH13 0x78698076659038E9025D858EB2 RETURN KECCAK256 MOD PUSH11 0x769E700F56C33E6E166D8 PUSH17 0x6F64736F6C634300081A00330000000000 ",
							"sourceMap": "211:15320:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c66c78698076659038e9025d858eb2f320066a0769e700f56c33e6e166d8706f64736f6c634300081a0033",
									".code": [
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/tokenize.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":224:1305  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":224:1305  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201fa11c439835090c93d3b4290c2c8e3648666162829a7b84ea9c8941b221a1ca64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201fa11c439835090c93d3b4290c2c8e3648666162829a7b84ea9c8941b221a1ca64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F LOG1 SHR NUMBER SWAP9 CALLDATALOAD MULMOD 0xC SWAP4 0xD3 0xB4 0x29 0xC 0x2C DUP15 CALLDATASIZE BASEFEE PUSH7 0x6162829A7B84EA SWAP13 DUP10 COINBASE 0xB2 0x21 LOG1 0xCA PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "224:1081:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201fa11c439835090c93d3b4290c2c8e3648666162829a7b84ea9c8941b221a1ca64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F LOG1 SHR NUMBER SWAP9 CALLDATALOAD MULMOD 0xC SWAP4 0xD3 0xB4 0x29 0xC 0x2C DUP15 CALLDATASIZE BASEFEE PUSH7 0x6162829A7B84EA SWAP13 DUP10 COINBASE 0xB2 0x21 LOG1 0xCA PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "224:1081:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201fa11c439835090c93d3b4290c2c8e3648666162829a7b84ea9c8941b221a1ca64736f6c634300081a0033",
									".code": [
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/tokenize.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/tokenize.sol": {
				"TitleDeedTokenization": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burnToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_walletAddress",
									"type": "address"
								}
							],
							"name": "connectWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "connectedWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getDocumentHash",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "documentHash",
									"type": "string"
								}
							],
							"name": "mintToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextTokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenDocumentHashes",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tokenize.sol\":176:1626  contract TitleDeedTokenization is ERC721, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/tokenize.sol\":365:535  constructor(address initialOwner) ERC721(\"TitleDeedToken\", \"TDT\") Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/tokenize.sol\":439:451  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1419:1535  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x5469746c6544656564546f6b656e000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5444540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1494:1499  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1486:1491  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1486:1499  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1520:1527  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1510:1517  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1510:1527  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1419:1535  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1335:1336  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1311:1337  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1311:1323  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1311:1337  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1307:1404  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1389:1390  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1361:1392  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1307:1404  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1446  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1432  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1446  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1262:1454  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/tokenize.sol\":365:535  constructor(address initialOwner) ERC721(\"TitleDeedToken\", \"TDT\") Ownable(initialOwner) {... */\n  pop\n    /* \"contracts/tokenize.sol\":176:1626  contract TitleDeedTokenization is ERC721, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3006:3197  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3080:3096  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3099:3105  _owner */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3080:3105  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3125:3133  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3116:3122  _owner */\n  0x06\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3116:3133  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3180:3188  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3170:3178  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3069:3197  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3006:3197  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_54\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_56\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_57:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_59\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_62\n  tag_21\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":932:1051   */\ntag_61:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_63\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_26\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_27:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_28:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_29:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_30:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_68:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_70\n  tag_29\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1909:1993   */\ntag_69:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_31:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_32:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_33:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_34:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_75\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_33\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2624:2663   */\n  tag_76\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_33\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_35:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_36:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_37:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_80\n    /* \"#utility.yul\":3013:3047   */\n  tag_81\n    /* \"#utility.yul\":3022:3046   */\n  tag_82\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_35\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3013:3047   */\n  tag_36\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2995:3048   */\n  tag_35\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_38:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_39:\n    /* \"#utility.yul\":3251:3290   */\n  tag_85\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_37\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3312:3403   */\n  tag_86\n    /* \"#utility.yul\":3361:3402   */\n  tag_87\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_38\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_34\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_40:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_41:\n    /* \"#utility.yul\":3572:3604   */\n  tag_90\n  tag_40\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3613:3678   */\n  tag_91\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_39\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_42:\n    /* \"#utility.yul\":3750:3870   */\ntag_93:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_96\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_41\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_93)\ntag_95:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_43:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_99\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_31\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4101:4130   */\n  tag_100\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_32\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_101:\n    /* \"#utility.yul\":4328:4408   */\n  tag_102\n    /* \"#utility.yul\":4384:4406   */\n  tag_103\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_32\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_42\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_98:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_44:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_45:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_106\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_44\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_46:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_108\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_45\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_9:\n    /* \"#utility.yul\":5145:5182   */\n  tag_110\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_27\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_112\n  tag_28\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5233:5289   */\ntag_111:\n    /* \"#utility.yul\":5313:5351   */\n  tag_113\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_30\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5398:5465   */\n  tag_114\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_43\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_116\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_117:\n    /* \"#utility.yul\":6339:6406   */\n  tag_118\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_46\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_115)\n    /* \"#utility.yul\":5560:6178   */\ntag_116:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_119\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_31\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_120:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_120)\ntag_122:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_124\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_45\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_123:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_115:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_47:\n    /* \"#utility.yul\":6516:6540   */\n  tag_126\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_24\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_14:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_128\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_47\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/tokenize.sol\":176:1626  contract TitleDeedTokenization is ERC721, Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokenize.sol\":176:1626  contract TitleDeedTokenization is ERC721, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x75794a3c\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd7d0df2a\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x75794a3c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7b47ec1a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x80964805\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8796ec86\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x23b872dd\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3d02d0c9\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x923f9e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1fd8293f\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/tokenize.sol\":999:1127  function tokenExists(uint256 tokenId) public view returns (bool) {... */\n    tag_3:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1607:1912  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2438:2529  function name() public view virtual returns (string memory) {... */\n    tag_5:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3610:3768  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_6:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3429:3544  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/tokenize.sol\":326:356  address public connectedWallet */\n    tag_8:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4279:4867  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_9:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/tokenize.sol\":710:943  function mintToken(address to, string memory documentHash) public onlyOwner {... */\n    tag_10:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4938:5072  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_11:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2251:2371  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_12:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1976:2189  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2368:2471  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/tokenize.sol\":233:259  uint256 public nextTokenId */\n    tag_15:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenize.sol\":1426:1623  function burnToken(uint256 tokenId) public onlyOwner {... */\n    tag_16:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/tokenize.sol\":266:319  mapping(uint256 => string) public tokenDocumentHashes */\n    tag_17:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenize.sol\":1188:1385  function getDocumentHash(uint256 tokenId) public view returns (string memory) {... */\n    tag_18:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1693:1780  function owner() public view virtual returns (address) {... */\n    tag_19:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2598:2693  function symbol() public view virtual returns (string memory) {... */\n    tag_20:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3840:3986  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_21:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n    tag_100:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5143:5354  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_22:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n    tag_104:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2764:3024  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_23:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenize.sol\":543:648  function connectWallet(address _walletAddress) public {... */\n    tag_24:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4057:4212  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_25:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      tag_118\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2626:2846  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n    tag_120:\n      stop\n        /* \"contracts/tokenize.sol\":999:1127  function tokenExists(uint256 tokenId) public view returns (bool) {... */\n    tag_33:\n        /* \"contracts/tokenize.sol\":1058:1062  bool */\n      0x00\n        /* \"contracts/tokenize.sol\":1117:1118  0 */\n      dup1\n        /* \"contracts/tokenize.sol\":1082:1119  ERC721.ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokenize.sol\":1082:1105  ERC721.ownerOf(tokenId) */\n      tag_124\n        /* \"contracts/tokenize.sol\":1097:1104  tokenId */\n      dup4\n        /* \"contracts/tokenize.sol\":1082:1096  ERC721.ownerOf */\n      tag_70\n        /* \"contracts/tokenize.sol\":1082:1105  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/tokenize.sol\":1082:1119  ERC721.ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/tokenize.sol\":1075:1119  return ERC721.ownerOf(tokenId) != address(0) */\n      swap1\n      pop\n        /* \"contracts/tokenize.sol\":999:1127  function tokenExists(uint256 tokenId) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1607:1912  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1709:1713  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1761:1786  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1746:1786  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1746:1757  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1746:1786  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1746:1851  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_126\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1851  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1803:1851  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1803:1814  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1803:1851  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1746:1851  interfaceId == type(IERC721).interfaceId ||... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1746:1904  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_127\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1868:1904  super.supportsInterface(interfaceId) */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1892:1903  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1868:1891  super.supportsInterface */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1868:1904  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1746:1904  interfaceId == type(IERC721).interfaceId ||... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1726:1904  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1607:1912  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2438:2529  function name() public view virtual returns (string memory) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2483:2496  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2516:2521  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2509:2521  return _name */\n      dup1\n      sload\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_133\n      swap1\n      tag_132\n      jump\t// in\n    tag_133:\n      dup1\n      iszero\n      tag_134\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_135\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_134)\n    tag_135:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_136:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_136\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2438:2529  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3610:3768  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3677:3684  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3697:3719  _requireOwned(tokenId) */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3718  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3697:3710  _requireOwned */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3697:3719  _requireOwned(tokenId) */\n      jump\t// in\n    tag_138:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3739:3760  _getApproved(tokenId) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3752:3759  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3739:3751  _getApproved */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3739:3760  _getApproved(tokenId) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3732:3760  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3610:3768  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3429:3544  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3501:3536  _approve(to, tokenId, _msgSender()) */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3510:3512  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3514:3521  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3523:3535  _msgSender() */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3523:3533  _msgSender */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3523:3535  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3501:3509  _approve */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3501:3536  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3429:3544  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenize.sol\":326:356  address public connectedWallet */\n    tag_55:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4279:4867  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4374:4390  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4374:4376  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4374:4390  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4370:4459  if (to == address(0)) {... */\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4444:4445  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4414:4447  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4370:4459  if (to == address(0)) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4680:4701  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4704:4738  _update(to, tokenId, _msgSender()) */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4712:4714  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4716:4723  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4725:4737  _msgSender() */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4725:4735  _msgSender */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4725:4737  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4704:4711  _update */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4704:4738  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4680:4738  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4770:4774  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4753:4774  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4753:4766  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4753:4774  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4749:4860  if (previousOwner != from) {... */\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4819:4823  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4825:4832  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4834:4847  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4798:4848  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4749:4860  if (previousOwner != from) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4359:4867  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4279:4867  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenize.sol\":710:943  function mintToken(address to, string memory documentHash) public onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1579:1590  _checkOwner */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      jump\t// in\n    tag_157:\n        /* \"contracts/tokenize.sol\":797:812  uint256 tokenId */\n      0x00\n        /* \"contracts/tokenize.sol\":815:826  nextTokenId */\n      sload(0x07)\n        /* \"contracts/tokenize.sol\":797:826  uint256 tokenId = nextTokenId */\n      swap1\n      pop\n        /* \"contracts/tokenize.sol\":837:848  nextTokenId */\n      0x07\n      0x00\n        /* \"contracts/tokenize.sol\":837:850  nextTokenId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/tokenize.sol\":863:881  _mint(to, tokenId) */\n      tag_162\n        /* \"contracts/tokenize.sol\":869:871  to */\n      dup4\n        /* \"contracts/tokenize.sol\":873:880  tokenId */\n      dup3\n        /* \"contracts/tokenize.sol\":863:868  _mint */\n      tag_163\n        /* \"contracts/tokenize.sol\":863:881  _mint(to, tokenId) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/tokenize.sol\":923:935  documentHash */\n      dup2\n        /* \"contracts/tokenize.sol\":892:911  tokenDocumentHashes */\n      0x08\n        /* \"contracts/tokenize.sol\":892:920  tokenDocumentHashes[tokenId] */\n      0x00\n        /* \"contracts/tokenize.sol\":912:919  tokenId */\n      dup4\n        /* \"contracts/tokenize.sol\":892:920  tokenDocumentHashes[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokenize.sol\":892:935  tokenDocumentHashes[tokenId] = documentHash */\n      swap1\n      dup2\n      tag_164\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      pop\n        /* \"contracts/tokenize.sol\":786:943  {... */\n      pop\n        /* \"contracts/tokenize.sol\":710:943  function mintToken(address to, string memory documentHash) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4938:5072  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5025:5064  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5042:5046  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5048:5050  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5052:5059  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5025:5064  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5025:5041  safeTransferFrom */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5025:5064  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4938:5072  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2251:2371  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2314:2321  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2341:2363  _requireOwned(tokenId) */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2355:2362  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2341:2354  _requireOwned */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2341:2363  _requireOwned(tokenId) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2334:2363  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2251:2371  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1976:2189  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2039:2046  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2080:2081  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2063:2082  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2063:2068  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2063:2082  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2059:2148  if (owner == address(0)) {... */\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2133:2134  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2106:2136  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2059:2148  if (owner == address(0)) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2165:2174  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2165:2181  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2175:2180  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2165:2181  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2158:2181  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1976:2189  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2368:2471  function renounceOwnership() public virtual onlyOwner {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1579:1590  _checkOwner */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2463  _transferOwnership(address(0)) */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2460:2461  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2451  _transferOwnership */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2463  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2368:2471  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/tokenize.sol\":233:259  uint256 public nextTokenId */\n    tag_81:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/tokenize.sol\":1426:1623  function burnToken(uint256 tokenId) public onlyOwner {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1579:1590  _checkOwner */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      jump\t// in\n    tag_179:\n        /* \"contracts/tokenize.sol\":1498:1518  tokenExists(tokenId) */\n      tag_181\n        /* \"contracts/tokenize.sol\":1510:1517  tokenId */\n      dup2\n        /* \"contracts/tokenize.sol\":1498:1509  tokenExists */\n      tag_33\n        /* \"contracts/tokenize.sol\":1498:1518  tokenExists(tokenId) */\n      jump\t// in\n    tag_181:\n        /* \"contracts/tokenize.sol\":1490:1543  require(tokenExists(tokenId), \"Token does not exist\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"contracts/tokenize.sol\":1555:1569  _burn(tokenId) */\n      tag_185\n        /* \"contracts/tokenize.sol\":1561:1568  tokenId */\n      dup2\n        /* \"contracts/tokenize.sol\":1555:1560  _burn */\n      tag_186\n        /* \"contracts/tokenize.sol\":1555:1569  _burn(tokenId) */\n      jump\t// in\n    tag_185:\n        /* \"contracts/tokenize.sol\":1587:1606  tokenDocumentHashes */\n      0x08\n        /* \"contracts/tokenize.sol\":1587:1615  tokenDocumentHashes[tokenId] */\n      0x00\n        /* \"contracts/tokenize.sol\":1607:1614  tokenId */\n      dup3\n        /* \"contracts/tokenize.sol\":1587:1615  tokenDocumentHashes[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/tokenize.sol\":1580:1615  delete tokenDocumentHashes[tokenId] */\n      tag_187\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"contracts/tokenize.sol\":1426:1623  function burnToken(uint256 tokenId) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/tokenize.sol\":266:319  mapping(uint256 => string) public tokenDocumentHashes */\n    tag_88:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      sload\n      tag_189\n      swap1\n      tag_132\n      jump\t// in\n    tag_189:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_190\n      swap1\n      tag_132\n      jump\t// in\n    tag_190:\n      dup1\n      iszero\n      tag_191\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_192\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_191)\n    tag_192:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_193:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_193\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/tokenize.sol\":1188:1385  function getDocumentHash(uint256 tokenId) public view returns (string memory) {... */\n    tag_92:\n        /* \"contracts/tokenize.sol\":1251:1264  string memory */\n      0x60\n        /* \"contracts/tokenize.sol\":1285:1305  tokenExists(tokenId) */\n      tag_195\n        /* \"contracts/tokenize.sol\":1297:1304  tokenId */\n      dup3\n        /* \"contracts/tokenize.sol\":1285:1296  tokenExists */\n      tag_33\n        /* \"contracts/tokenize.sol\":1285:1305  tokenExists(tokenId) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/tokenize.sol\":1277:1330  require(tokenExists(tokenId), \"Token does not exist\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_184\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"contracts/tokenize.sol\":1349:1368  tokenDocumentHashes */\n      0x08\n        /* \"contracts/tokenize.sol\":1349:1377  tokenDocumentHashes[tokenId] */\n      0x00\n        /* \"contracts/tokenize.sol\":1369:1376  tokenId */\n      dup4\n        /* \"contracts/tokenize.sol\":1349:1377  tokenDocumentHashes[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokenize.sol\":1342:1377  return tokenDocumentHashes[tokenId] */\n      dup1\n      sload\n      tag_198\n      swap1\n      tag_132\n      jump\t// in\n    tag_198:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_199\n      swap1\n      tag_132\n      jump\t// in\n    tag_199:\n      dup1\n      iszero\n      tag_200\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_201\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_200)\n    tag_201:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_202:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_202\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_200:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/tokenize.sol\":1188:1385  function getDocumentHash(uint256 tokenId) public view returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1693:1780  function owner() public view virtual returns (address) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1739:1746  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1766:1772  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1772  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1693:1780  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2598:2693  function symbol() public view virtual returns (string memory) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2645:2658  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2678:2685  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2671:2685  return _symbol */\n      dup1\n      sload\n      tag_205\n      swap1\n      tag_132\n      jump\t// in\n    tag_205:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_206\n      swap1\n      tag_132\n      jump\t// in\n    tag_206:\n      dup1\n      iszero\n      tag_207\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_208\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_207)\n    tag_208:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_209:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_209\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_207:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2598:2693  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3840:3986  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3926:3978  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3945:3957  _msgSender() */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3945:3955  _msgSender */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3945:3957  _msgSender() */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3959:3967  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3969:3977  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3926:3944  _setApprovalForAll */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3926:3978  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3840:3986  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5143:5354  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5257:5288  transferFrom(from, to, tokenId) */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5270:5274  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5276:5278  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5280:5287  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5257:5269  transferFrom */\n      tag_60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5257:5288  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5299:5346  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5322:5326  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5328:5330  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5332:5339  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5341:5345  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5299:5321  _checkOnERC721Received */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5299:5346  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5143:5354  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2764:3024  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2828:2841  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2854:2876  _requireOwned(tokenId) */\n      tag_219\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2868:2875  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2854:2867  _requireOwned */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2854:2876  _requireOwned(tokenId) */\n      jump\t// in\n    tag_219:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2889:2910  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2913:2923  _baseURI() */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2913:2921  _baseURI */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2913:2923  _baseURI() */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2889:2923  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2965:2966  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2947:2954  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2941:2962  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2941:2966  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2941:3016  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_222\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_223)\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2983:2990  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2992:3010  tokenId.toString() */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2992:2999  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2992:3008  tokenId.toString */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2992:3010  tokenId.toString() */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2969:3011  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_226\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2941:3016  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2934:3016  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2764:3024  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/tokenize.sol\":543:648  function connectWallet(address _walletAddress) public {... */\n    tag_114:\n        /* \"contracts/tokenize.sol\":626:640  _walletAddress */\n      dup1\n        /* \"contracts/tokenize.sol\":608:623  connectedWallet */\n      0x09\n      0x00\n        /* \"contracts/tokenize.sol\":608:640  connectedWallet = _walletAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokenize.sol\":543:648  function connectWallet(address _walletAddress) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4057:4212  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4145:4149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4187  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4194  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4188:4193  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4194  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4204  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4195:4203  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4204  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4162:4204  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4057:4212  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2626:2846  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      tag_231\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1579:1590  _checkOwner */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2731:2732  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2711:2733  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2711:2719  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2711:2733  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2707:2800  if (newOwner == address(0)) {... */\n      tag_233\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2785:2786  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2757:2788  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2707:2800  if (newOwner == address(0)) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2810:2838  _transferOwnership(newOwner) */\n      tag_235\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2829:2837  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2810:2828  _transferOwnership */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2810:2838  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2626:2846  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":785:933  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:865  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":900:925  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":885:925  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":885:896  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":885:925  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":878:925  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":785:933  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16585:16832  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16648:16655  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16668:16681  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16684:16701  _ownerOf(tokenId) */\n      tag_238\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16693:16700  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16684:16692  _ownerOf */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16684:16701  _ownerOf(tokenId) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16668:16701  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16733:16734  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16716:16735  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16716:16721  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16716:16735  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16712:16802  if (owner == address(0)) {... */\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16782:16789  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16759:16790  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16712:16802  if (owner == address(0)) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16819:16824  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16812:16824  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16585:16832  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6116:6245  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6186:6193  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6213:6228  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6213:6237  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6229:6236  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6213:6237  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6206:6237  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6116:6245  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":672:770  function _msgSender() internal view virtual returns (address) {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":725:732  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":752:762  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":745:762  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":672:770  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14817:14939  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14898:14931  _approve(to, tokenId, auth, true) */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14907:14909  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14911:14918  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14920:14924  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14926:14930  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14898:14906  _approve */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14898:14931  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14817:14939  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9078:9902  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9164:9171  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9184:9196  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9199:9216  _ownerOf(tokenId) */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9208:9215  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9199:9207  _ownerOf */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9199:9216  _ownerOf(tokenId) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9184:9216  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9295:9296  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9279:9297  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9279:9283  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9279:9297  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9275:9363  if (auth != address(0)) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9314:9351  _checkAuthorized(from, auth, tokenId) */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9331:9335  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9337:9341  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9343:9350  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9314:9330  _checkAuthorized */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9314:9351  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9275:9363  if (auth != address(0)) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9426:9427  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9410:9428  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9410:9414  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9410:9428  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9406:9669  if (from != address(0)) {... */\n      tag_252\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9528:9576  _approve(address(0), tokenId, address(0), false) */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9545:9546  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9549:9556  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9566:9567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9570:9575  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9528:9536  _approve */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9528:9576  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9641:9642  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9631  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9637  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9632:9636  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9637  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9642  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9406:9669  if (from != address(0)) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9699:9700  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9685:9701  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9685:9687  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9685:9701  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9681:9792  if (to != address(0)) {... */\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9764:9765  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9747:9756  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9747:9760  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9757:9759  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9747:9760  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9747:9765  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9681:9792  if (to != address(0)) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9823:9825  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9804:9811  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9804:9820  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9812:9819  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9804:9820  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9804:9825  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9862:9869  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9858:9860  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9843:9870  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9852:9856  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9843:9870  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9890:9894  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9883:9894  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9078:9902  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1858:2024  function _checkOwner() internal view virtual {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1929:1941  _msgSender() */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1929:1939  _msgSender */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1929:1941  _msgSender() */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:1941  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:1925  owner() */\n      tag_257\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:1923  owner */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:1925  owner() */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:1941  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1914:2017  if (owner() != _msgSender()) {... */\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1992:2004  _msgSender() */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1992:2002  _msgSender */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1992:2004  _msgSender() */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1965:2005  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1914:2017  if (owner() != _msgSender()) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1858:2024  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10238:10573  function _mint(address to, uint256 tokenId) internal {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10320:10321  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10306:10322  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10306:10308  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10306:10322  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10302:10391  if (to == address(0)) {... */\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10376:10377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10346:10379  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10302:10391  if (to == address(0)) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10401:10422  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10425:10457  _update(to, tokenId, address(0)) */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10433:10435  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10437:10444  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10454:10455  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10425:10432  _update */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10425:10457  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10401:10457  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10497:10498  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10472:10499  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10472:10485  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10472:10499  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10468:10566  if (previousOwner != address(0)) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10551:10552  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10523:10554  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10468:10566  if (previousOwner != address(0)) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10291:10573  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10238:10573  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3006:3197  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3080:3096  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3099:3105  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3080:3105  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3125:3133  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3116:3122  _owner */\n      0x06\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3116:3133  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3180:3188  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3170:3178  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3069:3197  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3006:3197  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11789:12021  function _burn(uint256 tokenId) internal {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11841:11862  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11865:11905  _update(address(0), tokenId, address(0)) */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11881:11882  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11885:11892  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11902:11903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11865:11872  _update */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11865:11905  _update(address(0), tokenId, address(0)) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11841:11905  address previousOwner = _update(address(0), tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11945:11946  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11920:11947  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11920:11933  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11920:11947  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11916:12014  if (previousOwner == address(0)) {... */\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11994:12001  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11971:12002  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11916:12014  if (previousOwner == address(0)) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11830:12021  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11789:12021  function _burn(uint256 tokenId) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16024:16342  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16152:16153  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16132:16154  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16132:16140  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16132:16154  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16128:16221  if (operator == address(0)) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16200:16208  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16178:16209  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16128:16221  if (operator == address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16269:16277  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16231:16249  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16231:16256  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16250:16255  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16231:16256  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16231:16266  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16257:16265  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16231:16266  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16231:16277  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16315:16323  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16293:16334  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16308:16313  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16293:16334  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16325:16333  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16293:16334  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_275\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16024:16342  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17382:18181  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17516:17517  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17499:17501  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17499:17513  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17499:17517  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17495:18174  if (to.code.length > 0) {... */\n      iszero\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17554:17556  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17538:17574  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17575:17587  _msgSender() */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17575:17585  _msgSender */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17575:17587  _msgSender() */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17589:17593  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17595:17602  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17604:17608  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17538:17609  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_281\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_282\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n      0x01\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17534:18163  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_284\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_289\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_288)\n    tag_289:\n      0x60\n      swap2\n      pop\n    tag_288:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17869:17870  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17852:17858  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17852:17865  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17852:17870  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17848:18148  if (reason.length == 0) {... */\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17924:17926  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17902:17927  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17848:18148  if (reason.length == 0) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":18098:18104  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":18092:18105  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":18083:18089  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":18079:18081  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":18075:18090  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":18068:18106  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17534:18163  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17667:17708  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17657:17708  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17657:17663  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17657:17708  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17653:17785  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17762:17764  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17740:17765  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17653:17785  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17610:17800  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17495:18174  if (to.code.length > 0) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17382:18181  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3273:3367  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3324:3337  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3350:3359  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3273:3367  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":660:1378  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":716:729  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":767:781  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":804:805  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":784:801  Math.log10(value) */\n      tag_298\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:800  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":784:794  Math.log10 */\n      tag_299\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":784:801  Math.log10(value) */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":784:805  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":767:805  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:840  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":854:860  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":843:861  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_300\n      jumpi\n      tag_301\n      tag_302\n      jump\t// in\n    tag_301:\n    tag_300:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_303\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_303:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:861  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":876:887  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1005:1011  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1001:1003  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":997:1012  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":989:995  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":985:1013  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":978:1013  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1042:1332  while (true) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1049:1053  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1042:1332  while (true) {... */\n      iszero\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1074:1079  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1216:1226  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1211:1213  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1204:1209  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1200:1214  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1195:1227  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1190:1193  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1182:1228  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1274:1276  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1265:1276  value /= 10 */\n      dup6\n      dup2\n      tag_306\n      jumpi\n      tag_307\n      tag_308\n      jump\t// in\n    tag_307:\n    tag_306:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1308:1309  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1299:1304  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1299:1309  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1042:1332  while (true) {... */\n      tag_304\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1295:1316  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1042:1332  while (true) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1353:1359  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1346:1359  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":660:1378  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5878:5995  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5944:5951  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5971:5978  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5971:5987  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5979:5986  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5971:5987  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5964:5987  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5878:5995  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15127:15805  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15289:15298  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15289:15320  emitEvent || auth != address(0) */\n      dup1\n      tag_312\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15318:15319  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15302:15320  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15302:15306  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15302:15320  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15289:15320  emitEvent || auth != address(0) */\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15285:15756  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15337:15350  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15353:15375  _requireOwned(tokenId) */\n      tag_314\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15367:15374  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15353:15366  _requireOwned */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15353:15375  _requireOwned(tokenId) */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15337:15375  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15522:15523  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15506:15524  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15506:15510  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15506:15524  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15506:15541  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_315\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15537:15541  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15528:15541  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15528:15533  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15528:15541  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15506:15541  auth != address(0) && owner != auth */\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15506:15575  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_316\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15546:15575  isApprovedForAll(owner, auth) */\n      tag_317\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15563:15568  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15570:15574  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15546:15562  isApprovedForAll */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15546:15575  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15545:15575  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15506:15575  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15502:15646  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15625:15629  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15603:15630  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15502:15646  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15666:15675  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15662:15745  if (emitEvent) {... */\n      iszero\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15721:15728  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15717:15719  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15701:15729  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15710:15715  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15701:15729  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15662:15745  if (emitEvent) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15322:15756  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15285:15756  if (emitEvent || auth != address(0)) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15795:15797  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15768:15783  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15768:15792  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15784:15791  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15768:15792  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15768:15797  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15127:15805  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7285:7661  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7398:7436  _isAuthorized(owner, spender, tokenId) */\n      tag_322\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7412:7417  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7419:7426  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7428:7435  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7398:7411  _isAuthorized */\n      tag_323\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7398:7436  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7393:7654  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7474:7475  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7457:7476  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7457:7462  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7457:7476  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7453:7643  if (owner == address(0)) {... */\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7527:7534  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7504:7535  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_326\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7453:7643  if (owner == address(0)) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7610:7617  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7619:7626  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7583:7627  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_328\n      swap3\n      swap2\n      swap1\n      tag_329\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7393:7654  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7285:7661  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12534:13482  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12587:12594  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12607:12621  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12624:12625  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12607:12625  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12674:12682  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12665:12670  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12665:12682  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12661:12767  if (value >= 10 ** 64) {... */\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12712:12720  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12703:12720  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_332\n      jumpi\n      tag_333\n      tag_308\n      jump\t// in\n    tag_333:\n    tag_332:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12749:12751  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12739:12751  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12661:12767  if (value >= 10 ** 64) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12794:12802  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12785:12790  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12785:12802  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12781:12887  if (value >= 10 ** 32) {... */\n      tag_334\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12832:12840  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12823:12840  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_335\n      jumpi\n      tag_336\n      tag_308\n      jump\t// in\n    tag_336:\n    tag_335:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12869:12871  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12859:12871  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12781:12887  if (value >= 10 ** 32) {... */\n    tag_334:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12914:12922  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12905:12910  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12905:12922  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12901:13007  if (value >= 10 ** 16) {... */\n      tag_337\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12960  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12943:12960  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_338\n      jumpi\n      tag_339\n      tag_308\n      jump\t// in\n    tag_339:\n    tag_338:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12989:12991  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12979:12991  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12901:13007  if (value >= 10 ** 16) {... */\n    tag_337:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13034:13041  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13030  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13041  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13021:13124  if (value >= 10 ** 8) {... */\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13071:13078  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13062:13078  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_341\n      jumpi\n      tag_342\n      tag_308\n      jump\t// in\n    tag_342:\n    tag_341:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13107:13108  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13097:13108  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13021:13124  if (value >= 10 ** 8) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13151:13158  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13142:13147  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13142:13158  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13138:13241  if (value >= 10 ** 4) {... */\n      tag_343\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13188:13195  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13179:13195  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_344\n      jumpi\n      tag_345\n      tag_308\n      jump\t// in\n    tag_345:\n    tag_344:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13224:13225  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13214:13225  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13138:13241  if (value >= 10 ** 4) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13268:13275  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13259:13264  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13259:13275  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13255:13358  if (value >= 10 ** 2) {... */\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13305:13312  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13296:13312  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_347\n      jumpi\n      tag_348\n      tag_308\n      jump\t// in\n    tag_348:\n    tag_347:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13341:13342  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13331:13342  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13255:13358  if (value >= 10 ** 2) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13385:13392  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13376:13381  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13376:13392  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13372:13440  if (value >= 10 ** 1) {... */\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13423:13424  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13413:13424  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13372:13440  if (value >= 10 ** 1) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13468:13474  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13461:13474  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12534:13482  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6565:6841  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6724:6725  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6705:6726  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6705:6712  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6705:6726  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6705:6833  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_351\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6753:6760  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6744:6760  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6744:6749  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6744:6760  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6744:6796  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_352\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6764:6796  isApprovedForAll(owner, spender) */\n      tag_353\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6781:6786  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6788:6795  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6764:6780  isApprovedForAll */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6764:6796  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_353:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6744:6796  owner == spender || isApprovedForAll(owner, spender) */\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6744:6832  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_354\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6825:6832  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6800:6832  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6800:6821  _getApproved(tokenId) */\n      tag_355\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6813:6820  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6800:6812  _getApproved */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6800:6821  _getApproved(tokenId) */\n      jump\t// in\n    tag_355:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6800:6832  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6744:6832  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_354:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6705:6833  spender != address(0) &&... */\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6685:6833  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6565:6841  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_188:\n      pop\n      dup1\n      sload\n      tag_356\n      swap1\n      tag_132\n      jump\t// in\n    tag_356:\n      0x00\n      dup3\n      sstore\n      dup1\n      0x1f\n      lt\n      tag_358\n      jumpi\n      pop\n      jump(tag_357)\n    tag_358:\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_359\n      swap2\n      swap1\n      tag_360\n      jump\t// in\n    tag_359:\n    tag_357:\n      pop\n      jump\t// out\n    tag_360:\n    tag_361:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_362\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_361)\n    tag_362:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_363:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_364:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_365:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_366:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_367:\n        /* \"#utility.yul\":490:514   */\n      tag_429\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_366\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_430\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_430:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_368:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_432\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_367\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_32:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_435\n      tag_364\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":766:885   */\n    tag_434:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_436\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_368\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1115   */\n    tag_369:\n        /* \"#utility.yul\":1059:1066   */\n      0x00\n        /* \"#utility.yul\":1102:1107   */\n      dup2\n        /* \"#utility.yul\":1095:1108   */\n      iszero\n        /* \"#utility.yul\":1088:1109   */\n      iszero\n        /* \"#utility.yul\":1077:1109   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1121:1230   */\n    tag_370:\n        /* \"#utility.yul\":1202:1223   */\n      tag_439\n        /* \"#utility.yul\":1217:1222   */\n      dup2\n        /* \"#utility.yul\":1202:1223   */\n      tag_369\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":1197:1200   */\n      dup3\n        /* \"#utility.yul\":1190:1224   */\n      mstore\n        /* \"#utility.yul\":1121:1230   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1236:1446   */\n    tag_35:\n        /* \"#utility.yul\":1323:1327   */\n      0x00\n        /* \"#utility.yul\":1361:1363   */\n      0x20\n        /* \"#utility.yul\":1350:1359   */\n      dup3\n        /* \"#utility.yul\":1346:1364   */\n      add\n        /* \"#utility.yul\":1338:1364   */\n      swap1\n      pop\n        /* \"#utility.yul\":1374:1439   */\n      tag_441\n        /* \"#utility.yul\":1436:1437   */\n      0x00\n        /* \"#utility.yul\":1425:1434   */\n      dup4\n        /* \"#utility.yul\":1421:1438   */\n      add\n        /* \"#utility.yul\":1412:1418   */\n      dup5\n        /* \"#utility.yul\":1374:1439   */\n      tag_370\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":1236:1446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1452:1601   */\n    tag_371:\n        /* \"#utility.yul\":1488:1495   */\n      0x00\n        /* \"#utility.yul\":1528:1594   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1521:1526   */\n      dup3\n        /* \"#utility.yul\":1517:1595   */\n      and\n        /* \"#utility.yul\":1506:1595   */\n      swap1\n      pop\n        /* \"#utility.yul\":1452:1601   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1607:1727   */\n    tag_372:\n        /* \"#utility.yul\":1679:1702   */\n      tag_444\n        /* \"#utility.yul\":1696:1701   */\n      dup2\n        /* \"#utility.yul\":1679:1702   */\n      tag_371\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":1672:1677   */\n      dup2\n        /* \"#utility.yul\":1669:1703   */\n      eq\n        /* \"#utility.yul\":1659:1721   */\n      tag_445\n      jumpi\n        /* \"#utility.yul\":1717:1718   */\n      0x00\n        /* \"#utility.yul\":1714:1715   */\n      dup1\n        /* \"#utility.yul\":1707:1719   */\n      revert\n        /* \"#utility.yul\":1659:1721   */\n    tag_445:\n        /* \"#utility.yul\":1607:1727   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1733:1870   */\n    tag_373:\n        /* \"#utility.yul\":1778:1783   */\n      0x00\n        /* \"#utility.yul\":1816:1822   */\n      dup2\n        /* \"#utility.yul\":1803:1823   */\n      calldataload\n        /* \"#utility.yul\":1794:1823   */\n      swap1\n      pop\n        /* \"#utility.yul\":1832:1864   */\n      tag_447\n        /* \"#utility.yul\":1858:1863   */\n      dup2\n        /* \"#utility.yul\":1832:1864   */\n      tag_372\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":1733:1870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1876:2203   */\n    tag_38:\n        /* \"#utility.yul\":1934:1940   */\n      0x00\n        /* \"#utility.yul\":1983:1985   */\n      0x20\n        /* \"#utility.yul\":1971:1980   */\n      dup3\n        /* \"#utility.yul\":1962:1969   */\n      dup5\n        /* \"#utility.yul\":1958:1981   */\n      sub\n        /* \"#utility.yul\":1954:1986   */\n      slt\n        /* \"#utility.yul\":1951:2070   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":1989:2068   */\n      tag_450\n      tag_364\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":1951:2070   */\n    tag_449:\n        /* \"#utility.yul\":2109:2110   */\n      0x00\n        /* \"#utility.yul\":2134:2186   */\n      tag_451\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2134:2186   */\n      tag_373\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":2124:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2080:2196   */\n      pop\n        /* \"#utility.yul\":1876:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2308   */\n    tag_374:\n        /* \"#utility.yul\":2261:2267   */\n      0x00\n        /* \"#utility.yul\":2295:2300   */\n      dup2\n        /* \"#utility.yul\":2289:2301   */\n      mload\n        /* \"#utility.yul\":2279:2301   */\n      swap1\n      pop\n        /* \"#utility.yul\":2209:2308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2483   */\n    tag_375:\n        /* \"#utility.yul\":2398:2409   */\n      0x00\n        /* \"#utility.yul\":2432:2438   */\n      dup3\n        /* \"#utility.yul\":2427:2430   */\n      dup3\n        /* \"#utility.yul\":2420:2439   */\n      mstore\n        /* \"#utility.yul\":2472:2476   */\n      0x20\n        /* \"#utility.yul\":2467:2470   */\n      dup3\n        /* \"#utility.yul\":2463:2477   */\n      add\n        /* \"#utility.yul\":2448:2477   */\n      swap1\n      pop\n        /* \"#utility.yul\":2314:2483   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2489:2628   */\n    tag_376:\n        /* \"#utility.yul\":2578:2584   */\n      dup3\n        /* \"#utility.yul\":2573:2576   */\n      dup2\n        /* \"#utility.yul\":2568:2571   */\n      dup4\n        /* \"#utility.yul\":2562:2585   */\n      mcopy\n        /* \"#utility.yul\":2619:2620   */\n      0x00\n        /* \"#utility.yul\":2610:2616   */\n      dup4\n        /* \"#utility.yul\":2605:2608   */\n      dup4\n        /* \"#utility.yul\":2601:2617   */\n      add\n        /* \"#utility.yul\":2594:2621   */\n      mstore\n        /* \"#utility.yul\":2489:2628   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2634:2736   */\n    tag_377:\n        /* \"#utility.yul\":2675:2681   */\n      0x00\n        /* \"#utility.yul\":2726:2728   */\n      0x1f\n        /* \"#utility.yul\":2722:2729   */\n      not\n        /* \"#utility.yul\":2717:2719   */\n      0x1f\n        /* \"#utility.yul\":2710:2715   */\n      dup4\n        /* \"#utility.yul\":2706:2720   */\n      add\n        /* \"#utility.yul\":2702:2730   */\n      and\n        /* \"#utility.yul\":2692:2730   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2742:3119   */\n    tag_378:\n        /* \"#utility.yul\":2830:2833   */\n      0x00\n        /* \"#utility.yul\":2858:2897   */\n      tag_457\n        /* \"#utility.yul\":2891:2896   */\n      dup3\n        /* \"#utility.yul\":2858:2897   */\n      tag_374\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":2913:2984   */\n      tag_458\n        /* \"#utility.yul\":2977:2983   */\n      dup2\n        /* \"#utility.yul\":2972:2975   */\n      dup6\n        /* \"#utility.yul\":2913:2984   */\n      tag_375\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":2906:2984   */\n      swap4\n      pop\n        /* \"#utility.yul\":2993:3058   */\n      tag_459\n        /* \"#utility.yul\":3051:3057   */\n      dup2\n        /* \"#utility.yul\":3046:3049   */\n      dup6\n        /* \"#utility.yul\":3039:3043   */\n      0x20\n        /* \"#utility.yul\":3032:3037   */\n      dup7\n        /* \"#utility.yul\":3028:3044   */\n      add\n        /* \"#utility.yul\":2993:3058   */\n      tag_376\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":3083:3112   */\n      tag_460\n        /* \"#utility.yul\":3105:3111   */\n      dup2\n        /* \"#utility.yul\":3083:3112   */\n      tag_377\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":3078:3081   */\n      dup5\n        /* \"#utility.yul\":3074:3113   */\n      add\n        /* \"#utility.yul\":3067:3113   */\n      swap2\n      pop\n        /* \"#utility.yul\":2834:3119   */\n      pop\n        /* \"#utility.yul\":2742:3119   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3125:3438   */\n    tag_44:\n        /* \"#utility.yul\":3238:3242   */\n      0x00\n        /* \"#utility.yul\":3276:3278   */\n      0x20\n        /* \"#utility.yul\":3265:3274   */\n      dup3\n        /* \"#utility.yul\":3261:3279   */\n      add\n        /* \"#utility.yul\":3253:3279   */\n      swap1\n      pop\n        /* \"#utility.yul\":3325:3334   */\n      dup2\n        /* \"#utility.yul\":3319:3323   */\n      dup2\n        /* \"#utility.yul\":3315:3335   */\n      sub\n        /* \"#utility.yul\":3311:3312   */\n      0x00\n        /* \"#utility.yul\":3300:3309   */\n      dup4\n        /* \"#utility.yul\":3296:3313   */\n      add\n        /* \"#utility.yul\":3289:3336   */\n      mstore\n        /* \"#utility.yul\":3353:3431   */\n      tag_462\n        /* \"#utility.yul\":3426:3430   */\n      dup2\n        /* \"#utility.yul\":3417:3423   */\n      dup5\n        /* \"#utility.yul\":3353:3431   */\n      tag_378\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":3345:3431   */\n      swap1\n      pop\n        /* \"#utility.yul\":3125:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_379:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_380:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_465\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_379\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_381:\n        /* \"#utility.yul\":3765:3789   */\n      tag_467\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_380\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_49:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_469\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_381\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_382:\n        /* \"#utility.yul\":4103:4127   */\n      tag_471\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_380\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_472\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      dup1\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_472:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_383:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_474\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_382\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_52:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      dup1\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_477\n      tag_364\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":4396:4515   */\n    tag_476:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_478\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_383\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_479\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_368\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_59:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      dup1\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_482\n      tag_364\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":4893:5012   */\n    tag_481:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_483\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_383\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_484\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_383\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_485\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_368\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5525   */\n    tag_384:\n        /* \"#utility.yul\":5517:5518   */\n      0x00\n        /* \"#utility.yul\":5514:5515   */\n      dup1\n        /* \"#utility.yul\":5507:5519   */\n      revert\n        /* \"#utility.yul\":5531:5648   */\n    tag_385:\n        /* \"#utility.yul\":5640:5641   */\n      0x00\n        /* \"#utility.yul\":5637:5638   */\n      dup1\n        /* \"#utility.yul\":5630:5642   */\n      revert\n        /* \"#utility.yul\":5654:5834   */\n    tag_302:\n        /* \"#utility.yul\":5702:5779   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5699:5700   */\n      0x00\n        /* \"#utility.yul\":5692:5780   */\n      mstore\n        /* \"#utility.yul\":5799:5803   */\n      0x41\n        /* \"#utility.yul\":5796:5797   */\n      0x04\n        /* \"#utility.yul\":5789:5804   */\n      mstore\n        /* \"#utility.yul\":5823:5827   */\n      0x24\n        /* \"#utility.yul\":5820:5821   */\n      0x00\n        /* \"#utility.yul\":5813:5828   */\n      revert\n        /* \"#utility.yul\":5840:6121   */\n    tag_386:\n        /* \"#utility.yul\":5923:5950   */\n      tag_490\n        /* \"#utility.yul\":5945:5949   */\n      dup3\n        /* \"#utility.yul\":5923:5950   */\n      tag_377\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":5915:5921   */\n      dup2\n        /* \"#utility.yul\":5911:5951   */\n      add\n        /* \"#utility.yul\":6053:6059   */\n      dup2\n        /* \"#utility.yul\":6041:6051   */\n      dup2\n        /* \"#utility.yul\":6038:6060   */\n      lt\n        /* \"#utility.yul\":6017:6035   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6005:6015   */\n      dup3\n        /* \"#utility.yul\":6002:6036   */\n      gt\n        /* \"#utility.yul\":5999:6061   */\n      or\n        /* \"#utility.yul\":5996:6084   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":6064:6082   */\n      tag_492\n      tag_302\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":5996:6084   */\n    tag_491:\n        /* \"#utility.yul\":6104:6114   */\n      dup1\n        /* \"#utility.yul\":6100:6102   */\n      0x40\n        /* \"#utility.yul\":6093:6115   */\n      mstore\n        /* \"#utility.yul\":5883:6121   */\n      pop\n        /* \"#utility.yul\":5840:6121   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6127:6256   */\n    tag_387:\n        /* \"#utility.yul\":6161:6167   */\n      0x00\n        /* \"#utility.yul\":6188:6208   */\n      tag_494\n      tag_363\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":6178:6208   */\n      swap1\n      pop\n        /* \"#utility.yul\":6217:6250   */\n      tag_495\n        /* \"#utility.yul\":6245:6249   */\n      dup3\n        /* \"#utility.yul\":6237:6243   */\n      dup3\n        /* \"#utility.yul\":6217:6250   */\n      tag_386\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":6127:6256   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6262:6570   */\n    tag_388:\n        /* \"#utility.yul\":6324:6328   */\n      0x00\n        /* \"#utility.yul\":6414:6432   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6406:6412   */\n      dup3\n        /* \"#utility.yul\":6403:6433   */\n      gt\n        /* \"#utility.yul\":6400:6456   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":6436:6454   */\n      tag_498\n      tag_302\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":6400:6456   */\n    tag_497:\n        /* \"#utility.yul\":6474:6503   */\n      tag_499\n        /* \"#utility.yul\":6496:6502   */\n      dup3\n        /* \"#utility.yul\":6474:6503   */\n      tag_377\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":6466:6503   */\n      swap1\n      pop\n        /* \"#utility.yul\":6558:6562   */\n      0x20\n        /* \"#utility.yul\":6552:6556   */\n      dup2\n        /* \"#utility.yul\":6548:6563   */\n      add\n        /* \"#utility.yul\":6540:6563   */\n      swap1\n      pop\n        /* \"#utility.yul\":6262:6570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6576:6724   */\n    tag_389:\n        /* \"#utility.yul\":6674:6680   */\n      dup3\n        /* \"#utility.yul\":6669:6672   */\n      dup2\n        /* \"#utility.yul\":6664:6667   */\n      dup4\n        /* \"#utility.yul\":6651:6681   */\n      calldatacopy\n        /* \"#utility.yul\":6715:6716   */\n      0x00\n        /* \"#utility.yul\":6706:6712   */\n      dup4\n        /* \"#utility.yul\":6701:6704   */\n      dup4\n        /* \"#utility.yul\":6697:6713   */\n      add\n        /* \"#utility.yul\":6690:6717   */\n      mstore\n        /* \"#utility.yul\":6576:6724   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6730:7155   */\n    tag_390:\n        /* \"#utility.yul\":6808:6813   */\n      0x00\n        /* \"#utility.yul\":6833:6899   */\n      tag_502\n        /* \"#utility.yul\":6849:6898   */\n      tag_503\n        /* \"#utility.yul\":6891:6897   */\n      dup5\n        /* \"#utility.yul\":6849:6898   */\n      tag_388\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":6833:6899   */\n      tag_387\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":6824:6899   */\n      swap1\n      pop\n        /* \"#utility.yul\":6922:6928   */\n      dup3\n        /* \"#utility.yul\":6915:6920   */\n      dup2\n        /* \"#utility.yul\":6908:6929   */\n      mstore\n        /* \"#utility.yul\":6960:6964   */\n      0x20\n        /* \"#utility.yul\":6953:6958   */\n      dup2\n        /* \"#utility.yul\":6949:6965   */\n      add\n        /* \"#utility.yul\":6998:7001   */\n      dup5\n        /* \"#utility.yul\":6989:6995   */\n      dup5\n        /* \"#utility.yul\":6984:6987   */\n      dup5\n        /* \"#utility.yul\":6980:6996   */\n      add\n        /* \"#utility.yul\":6977:7002   */\n      gt\n        /* \"#utility.yul\":6974:7086   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":7005:7084   */\n      tag_505\n      tag_385\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":6974:7086   */\n    tag_504:\n        /* \"#utility.yul\":7095:7149   */\n      tag_506\n        /* \"#utility.yul\":7142:7148   */\n      dup5\n        /* \"#utility.yul\":7137:7140   */\n      dup3\n        /* \"#utility.yul\":7132:7135   */\n      dup6\n        /* \"#utility.yul\":7095:7149   */\n      tag_389\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":6814:7155   */\n      pop\n        /* \"#utility.yul\":6730:7155   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7175:7515   */\n    tag_391:\n        /* \"#utility.yul\":7231:7236   */\n      0x00\n        /* \"#utility.yul\":7280:7283   */\n      dup3\n        /* \"#utility.yul\":7273:7277   */\n      0x1f\n        /* \"#utility.yul\":7265:7271   */\n      dup4\n        /* \"#utility.yul\":7261:7278   */\n      add\n        /* \"#utility.yul\":7257:7284   */\n      slt\n        /* \"#utility.yul\":7247:7369   */\n      tag_508\n      jumpi\n        /* \"#utility.yul\":7288:7367   */\n      tag_509\n      tag_384\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":7247:7369   */\n    tag_508:\n        /* \"#utility.yul\":7405:7411   */\n      dup2\n        /* \"#utility.yul\":7392:7412   */\n      calldataload\n        /* \"#utility.yul\":7430:7509   */\n      tag_510\n        /* \"#utility.yul\":7505:7508   */\n      dup5\n        /* \"#utility.yul\":7497:7503   */\n      dup3\n        /* \"#utility.yul\":7490:7494   */\n      0x20\n        /* \"#utility.yul\":7482:7488   */\n      dup7\n        /* \"#utility.yul\":7478:7495   */\n      add\n        /* \"#utility.yul\":7430:7509   */\n      tag_390\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":7421:7509   */\n      swap2\n      pop\n        /* \"#utility.yul\":7237:7515   */\n      pop\n        /* \"#utility.yul\":7175:7515   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7521:8175   */\n    tag_63:\n        /* \"#utility.yul\":7599:7605   */\n      0x00\n        /* \"#utility.yul\":7607:7613   */\n      dup1\n        /* \"#utility.yul\":7656:7658   */\n      0x40\n        /* \"#utility.yul\":7644:7653   */\n      dup4\n        /* \"#utility.yul\":7635:7642   */\n      dup6\n        /* \"#utility.yul\":7631:7654   */\n      sub\n        /* \"#utility.yul\":7627:7659   */\n      slt\n        /* \"#utility.yul\":7624:7743   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":7662:7741   */\n      tag_513\n      tag_364\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":7624:7743   */\n    tag_512:\n        /* \"#utility.yul\":7782:7783   */\n      0x00\n        /* \"#utility.yul\":7807:7860   */\n      tag_514\n        /* \"#utility.yul\":7852:7859   */\n      dup6\n        /* \"#utility.yul\":7843:7849   */\n      dup3\n        /* \"#utility.yul\":7832:7841   */\n      dup7\n        /* \"#utility.yul\":7828:7850   */\n      add\n        /* \"#utility.yul\":7807:7860   */\n      tag_383\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":7797:7860   */\n      swap3\n      pop\n        /* \"#utility.yul\":7753:7870   */\n      pop\n        /* \"#utility.yul\":7937:7939   */\n      0x20\n        /* \"#utility.yul\":7926:7935   */\n      dup4\n        /* \"#utility.yul\":7922:7940   */\n      add\n        /* \"#utility.yul\":7909:7941   */\n      calldataload\n        /* \"#utility.yul\":7968:7986   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7960:7966   */\n      dup2\n        /* \"#utility.yul\":7957:7987   */\n      gt\n        /* \"#utility.yul\":7954:8071   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":7990:8069   */\n      tag_516\n      tag_365\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":7954:8071   */\n    tag_515:\n        /* \"#utility.yul\":8095:8158   */\n      tag_517\n        /* \"#utility.yul\":8150:8157   */\n      dup6\n        /* \"#utility.yul\":8141:8147   */\n      dup3\n        /* \"#utility.yul\":8130:8139   */\n      dup7\n        /* \"#utility.yul\":8126:8148   */\n      add\n        /* \"#utility.yul\":8095:8158   */\n      tag_391\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":8085:8158   */\n      swap2\n      pop\n        /* \"#utility.yul\":7880:8168   */\n      pop\n        /* \"#utility.yul\":7521:8175   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8181:8510   */\n    tag_74:\n        /* \"#utility.yul\":8240:8246   */\n      0x00\n        /* \"#utility.yul\":8289:8291   */\n      0x20\n        /* \"#utility.yul\":8277:8286   */\n      dup3\n        /* \"#utility.yul\":8268:8275   */\n      dup5\n        /* \"#utility.yul\":8264:8287   */\n      sub\n        /* \"#utility.yul\":8260:8292   */\n      slt\n        /* \"#utility.yul\":8257:8376   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":8295:8374   */\n      tag_520\n      tag_364\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":8257:8376   */\n    tag_519:\n        /* \"#utility.yul\":8415:8416   */\n      0x00\n        /* \"#utility.yul\":8440:8493   */\n      tag_521\n        /* \"#utility.yul\":8485:8492   */\n      dup5\n        /* \"#utility.yul\":8476:8482   */\n      dup3\n        /* \"#utility.yul\":8465:8474   */\n      dup6\n        /* \"#utility.yul\":8461:8483   */\n      add\n        /* \"#utility.yul\":8440:8493   */\n      tag_383\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":8430:8493   */\n      swap2\n      pop\n        /* \"#utility.yul\":8386:8503   */\n      pop\n        /* \"#utility.yul\":8181:8510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8516:8634   */\n    tag_392:\n        /* \"#utility.yul\":8603:8627   */\n      tag_523\n        /* \"#utility.yul\":8621:8626   */\n      dup2\n        /* \"#utility.yul\":8603:8627   */\n      tag_366\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":8598:8601   */\n      dup3\n        /* \"#utility.yul\":8591:8628   */\n      mstore\n        /* \"#utility.yul\":8516:8634   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8640:8862   */\n    tag_77:\n        /* \"#utility.yul\":8733:8737   */\n      0x00\n        /* \"#utility.yul\":8771:8773   */\n      0x20\n        /* \"#utility.yul\":8760:8769   */\n      dup3\n        /* \"#utility.yul\":8756:8774   */\n      add\n        /* \"#utility.yul\":8748:8774   */\n      swap1\n      pop\n        /* \"#utility.yul\":8784:8855   */\n      tag_525\n        /* \"#utility.yul\":8852:8853   */\n      0x00\n        /* \"#utility.yul\":8841:8850   */\n      dup4\n        /* \"#utility.yul\":8837:8854   */\n      add\n        /* \"#utility.yul\":8828:8834   */\n      dup5\n        /* \"#utility.yul\":8784:8855   */\n      tag_392\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":8640:8862   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8868:8984   */\n    tag_393:\n        /* \"#utility.yul\":8938:8959   */\n      tag_527\n        /* \"#utility.yul\":8953:8958   */\n      dup2\n        /* \"#utility.yul\":8938:8959   */\n      tag_369\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":8931:8936   */\n      dup2\n        /* \"#utility.yul\":8928:8960   */\n      eq\n        /* \"#utility.yul\":8918:8978   */\n      tag_528\n      jumpi\n        /* \"#utility.yul\":8974:8975   */\n      0x00\n        /* \"#utility.yul\":8971:8972   */\n      dup1\n        /* \"#utility.yul\":8964:8976   */\n      revert\n        /* \"#utility.yul\":8918:8978   */\n    tag_528:\n        /* \"#utility.yul\":8868:8984   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8990:9123   */\n    tag_394:\n        /* \"#utility.yul\":9033:9038   */\n      0x00\n        /* \"#utility.yul\":9071:9077   */\n      dup2\n        /* \"#utility.yul\":9058:9078   */\n      calldataload\n        /* \"#utility.yul\":9049:9078   */\n      swap1\n      pop\n        /* \"#utility.yul\":9087:9117   */\n      tag_530\n        /* \"#utility.yul\":9111:9116   */\n      dup2\n        /* \"#utility.yul\":9087:9117   */\n      tag_393\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":8990:9123   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9129:9597   */\n    tag_102:\n        /* \"#utility.yul\":9194:9200   */\n      0x00\n        /* \"#utility.yul\":9202:9208   */\n      dup1\n        /* \"#utility.yul\":9251:9253   */\n      0x40\n        /* \"#utility.yul\":9239:9248   */\n      dup4\n        /* \"#utility.yul\":9230:9237   */\n      dup6\n        /* \"#utility.yul\":9226:9249   */\n      sub\n        /* \"#utility.yul\":9222:9254   */\n      slt\n        /* \"#utility.yul\":9219:9338   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":9257:9336   */\n      tag_533\n      tag_364\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":9219:9338   */\n    tag_532:\n        /* \"#utility.yul\":9377:9378   */\n      0x00\n        /* \"#utility.yul\":9402:9455   */\n      tag_534\n        /* \"#utility.yul\":9447:9454   */\n      dup6\n        /* \"#utility.yul\":9438:9444   */\n      dup3\n        /* \"#utility.yul\":9427:9436   */\n      dup7\n        /* \"#utility.yul\":9423:9445   */\n      add\n        /* \"#utility.yul\":9402:9455   */\n      tag_383\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":9392:9455   */\n      swap3\n      pop\n        /* \"#utility.yul\":9348:9465   */\n      pop\n        /* \"#utility.yul\":9504:9506   */\n      0x20\n        /* \"#utility.yul\":9530:9580   */\n      tag_535\n        /* \"#utility.yul\":9572:9579   */\n      dup6\n        /* \"#utility.yul\":9563:9569   */\n      dup3\n        /* \"#utility.yul\":9552:9561   */\n      dup7\n        /* \"#utility.yul\":9548:9570   */\n      add\n        /* \"#utility.yul\":9530:9580   */\n      tag_394\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":9520:9580   */\n      swap2\n      pop\n        /* \"#utility.yul\":9475:9590   */\n      pop\n        /* \"#utility.yul\":9129:9597   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9603:9910   */\n    tag_395:\n        /* \"#utility.yul\":9664:9668   */\n      0x00\n        /* \"#utility.yul\":9754:9772   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9746:9752   */\n      dup3\n        /* \"#utility.yul\":9743:9773   */\n      gt\n        /* \"#utility.yul\":9740:9796   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":9776:9794   */\n      tag_538\n      tag_302\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":9740:9796   */\n    tag_537:\n        /* \"#utility.yul\":9814:9843   */\n      tag_539\n        /* \"#utility.yul\":9836:9842   */\n      dup3\n        /* \"#utility.yul\":9814:9843   */\n      tag_377\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":9806:9843   */\n      swap1\n      pop\n        /* \"#utility.yul\":9898:9902   */\n      0x20\n        /* \"#utility.yul\":9892:9896   */\n      dup2\n        /* \"#utility.yul\":9888:9903   */\n      add\n        /* \"#utility.yul\":9880:9903   */\n      swap1\n      pop\n        /* \"#utility.yul\":9603:9910   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9916:10339   */\n    tag_396:\n        /* \"#utility.yul\":9993:9998   */\n      0x00\n        /* \"#utility.yul\":10018:10083   */\n      tag_541\n        /* \"#utility.yul\":10034:10082   */\n      tag_542\n        /* \"#utility.yul\":10075:10081   */\n      dup5\n        /* \"#utility.yul\":10034:10082   */\n      tag_395\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":10018:10083   */\n      tag_387\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":10009:10083   */\n      swap1\n      pop\n        /* \"#utility.yul\":10106:10112   */\n      dup3\n        /* \"#utility.yul\":10099:10104   */\n      dup2\n        /* \"#utility.yul\":10092:10113   */\n      mstore\n        /* \"#utility.yul\":10144:10148   */\n      0x20\n        /* \"#utility.yul\":10137:10142   */\n      dup2\n        /* \"#utility.yul\":10133:10149   */\n      add\n        /* \"#utility.yul\":10182:10185   */\n      dup5\n        /* \"#utility.yul\":10173:10179   */\n      dup5\n        /* \"#utility.yul\":10168:10171   */\n      dup5\n        /* \"#utility.yul\":10164:10180   */\n      add\n        /* \"#utility.yul\":10161:10186   */\n      gt\n        /* \"#utility.yul\":10158:10270   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":10189:10268   */\n      tag_544\n      tag_385\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":10158:10270   */\n    tag_543:\n        /* \"#utility.yul\":10279:10333   */\n      tag_545\n        /* \"#utility.yul\":10326:10332   */\n      dup5\n        /* \"#utility.yul\":10321:10324   */\n      dup3\n        /* \"#utility.yul\":10316:10319   */\n      dup6\n        /* \"#utility.yul\":10279:10333   */\n      tag_389\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":9999:10339   */\n      pop\n        /* \"#utility.yul\":9916:10339   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10358:10696   */\n    tag_397:\n        /* \"#utility.yul\":10413:10418   */\n      0x00\n        /* \"#utility.yul\":10462:10465   */\n      dup3\n        /* \"#utility.yul\":10455:10459   */\n      0x1f\n        /* \"#utility.yul\":10447:10453   */\n      dup4\n        /* \"#utility.yul\":10443:10460   */\n      add\n        /* \"#utility.yul\":10439:10466   */\n      slt\n        /* \"#utility.yul\":10429:10551   */\n      tag_547\n      jumpi\n        /* \"#utility.yul\":10470:10549   */\n      tag_548\n      tag_384\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":10429:10551   */\n    tag_547:\n        /* \"#utility.yul\":10587:10593   */\n      dup2\n        /* \"#utility.yul\":10574:10594   */\n      calldataload\n        /* \"#utility.yul\":10612:10690   */\n      tag_549\n        /* \"#utility.yul\":10686:10689   */\n      dup5\n        /* \"#utility.yul\":10678:10684   */\n      dup3\n        /* \"#utility.yul\":10671:10675   */\n      0x20\n        /* \"#utility.yul\":10663:10669   */\n      dup7\n        /* \"#utility.yul\":10659:10676   */\n      add\n        /* \"#utility.yul\":10612:10690   */\n      tag_396\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":10603:10690   */\n      swap2\n      pop\n        /* \"#utility.yul\":10419:10696   */\n      pop\n        /* \"#utility.yul\":10358:10696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10702:11645   */\n    tag_106:\n        /* \"#utility.yul\":10797:10803   */\n      0x00\n        /* \"#utility.yul\":10805:10811   */\n      dup1\n        /* \"#utility.yul\":10813:10819   */\n      0x00\n        /* \"#utility.yul\":10821:10827   */\n      dup1\n        /* \"#utility.yul\":10870:10873   */\n      0x80\n        /* \"#utility.yul\":10858:10867   */\n      dup6\n        /* \"#utility.yul\":10849:10856   */\n      dup8\n        /* \"#utility.yul\":10845:10868   */\n      sub\n        /* \"#utility.yul\":10841:10874   */\n      slt\n        /* \"#utility.yul\":10838:10958   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":10877:10956   */\n      tag_552\n      tag_364\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":10838:10958   */\n    tag_551:\n        /* \"#utility.yul\":10997:10998   */\n      0x00\n        /* \"#utility.yul\":11022:11075   */\n      tag_553\n        /* \"#utility.yul\":11067:11074   */\n      dup8\n        /* \"#utility.yul\":11058:11064   */\n      dup3\n        /* \"#utility.yul\":11047:11056   */\n      dup9\n        /* \"#utility.yul\":11043:11065   */\n      add\n        /* \"#utility.yul\":11022:11075   */\n      tag_383\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":11012:11075   */\n      swap5\n      pop\n        /* \"#utility.yul\":10968:11085   */\n      pop\n        /* \"#utility.yul\":11124:11126   */\n      0x20\n        /* \"#utility.yul\":11150:11203   */\n      tag_554\n        /* \"#utility.yul\":11195:11202   */\n      dup8\n        /* \"#utility.yul\":11186:11192   */\n      dup3\n        /* \"#utility.yul\":11175:11184   */\n      dup9\n        /* \"#utility.yul\":11171:11193   */\n      add\n        /* \"#utility.yul\":11150:11203   */\n      tag_383\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":11140:11203   */\n      swap4\n      pop\n        /* \"#utility.yul\":11095:11213   */\n      pop\n        /* \"#utility.yul\":11252:11254   */\n      0x40\n        /* \"#utility.yul\":11278:11331   */\n      tag_555\n        /* \"#utility.yul\":11323:11330   */\n      dup8\n        /* \"#utility.yul\":11314:11320   */\n      dup3\n        /* \"#utility.yul\":11303:11312   */\n      dup9\n        /* \"#utility.yul\":11299:11321   */\n      add\n        /* \"#utility.yul\":11278:11331   */\n      tag_368\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":11268:11331   */\n      swap3\n      pop\n        /* \"#utility.yul\":11223:11341   */\n      pop\n        /* \"#utility.yul\":11408:11410   */\n      0x60\n        /* \"#utility.yul\":11397:11406   */\n      dup6\n        /* \"#utility.yul\":11393:11411   */\n      add\n        /* \"#utility.yul\":11380:11412   */\n      calldataload\n        /* \"#utility.yul\":11439:11457   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11431:11437   */\n      dup2\n        /* \"#utility.yul\":11428:11458   */\n      gt\n        /* \"#utility.yul\":11425:11542   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":11461:11540   */\n      tag_557\n      tag_365\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":11425:11542   */\n    tag_556:\n        /* \"#utility.yul\":11566:11628   */\n      tag_558\n        /* \"#utility.yul\":11620:11627   */\n      dup8\n        /* \"#utility.yul\":11611:11617   */\n      dup3\n        /* \"#utility.yul\":11600:11609   */\n      dup9\n        /* \"#utility.yul\":11596:11618   */\n      add\n        /* \"#utility.yul\":11566:11628   */\n      tag_397\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":11556:11628   */\n      swap2\n      pop\n        /* \"#utility.yul\":11351:11638   */\n      pop\n        /* \"#utility.yul\":10702:11645   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11651:12125   */\n    tag_117:\n        /* \"#utility.yul\":11719:11725   */\n      0x00\n        /* \"#utility.yul\":11727:11733   */\n      dup1\n        /* \"#utility.yul\":11776:11778   */\n      0x40\n        /* \"#utility.yul\":11764:11773   */\n      dup4\n        /* \"#utility.yul\":11755:11762   */\n      dup6\n        /* \"#utility.yul\":11751:11774   */\n      sub\n        /* \"#utility.yul\":11747:11779   */\n      slt\n        /* \"#utility.yul\":11744:11863   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":11782:11861   */\n      tag_561\n      tag_364\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":11744:11863   */\n    tag_560:\n        /* \"#utility.yul\":11902:11903   */\n      0x00\n        /* \"#utility.yul\":11927:11980   */\n      tag_562\n        /* \"#utility.yul\":11972:11979   */\n      dup6\n        /* \"#utility.yul\":11963:11969   */\n      dup3\n        /* \"#utility.yul\":11952:11961   */\n      dup7\n        /* \"#utility.yul\":11948:11970   */\n      add\n        /* \"#utility.yul\":11927:11980   */\n      tag_383\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":11917:11980   */\n      swap3\n      pop\n        /* \"#utility.yul\":11873:11990   */\n      pop\n        /* \"#utility.yul\":12029:12031   */\n      0x20\n        /* \"#utility.yul\":12055:12108   */\n      tag_563\n        /* \"#utility.yul\":12100:12107   */\n      dup6\n        /* \"#utility.yul\":12091:12097   */\n      dup3\n        /* \"#utility.yul\":12080:12089   */\n      dup7\n        /* \"#utility.yul\":12076:12098   */\n      add\n        /* \"#utility.yul\":12055:12108   */\n      tag_383\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":12045:12108   */\n      swap2\n      pop\n        /* \"#utility.yul\":12000:12118   */\n      pop\n        /* \"#utility.yul\":11651:12125   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12131:12311   */\n    tag_398:\n        /* \"#utility.yul\":12179:12256   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12176:12177   */\n      0x00\n        /* \"#utility.yul\":12169:12257   */\n      mstore\n        /* \"#utility.yul\":12276:12280   */\n      0x22\n        /* \"#utility.yul\":12273:12274   */\n      0x04\n        /* \"#utility.yul\":12266:12281   */\n      mstore\n        /* \"#utility.yul\":12300:12304   */\n      0x24\n        /* \"#utility.yul\":12297:12298   */\n      0x00\n        /* \"#utility.yul\":12290:12305   */\n      revert\n        /* \"#utility.yul\":12317:12637   */\n    tag_132:\n        /* \"#utility.yul\":12361:12367   */\n      0x00\n        /* \"#utility.yul\":12398:12399   */\n      0x02\n        /* \"#utility.yul\":12392:12396   */\n      dup3\n        /* \"#utility.yul\":12388:12400   */\n      div\n        /* \"#utility.yul\":12378:12400   */\n      swap1\n      pop\n        /* \"#utility.yul\":12445:12446   */\n      0x01\n        /* \"#utility.yul\":12439:12443   */\n      dup3\n        /* \"#utility.yul\":12435:12447   */\n      and\n        /* \"#utility.yul\":12466:12484   */\n      dup1\n        /* \"#utility.yul\":12456:12537   */\n      tag_566\n      jumpi\n        /* \"#utility.yul\":12522:12526   */\n      0x7f\n        /* \"#utility.yul\":12514:12520   */\n      dup3\n        /* \"#utility.yul\":12510:12527   */\n      and\n        /* \"#utility.yul\":12500:12527   */\n      swap2\n      pop\n        /* \"#utility.yul\":12456:12537   */\n    tag_566:\n        /* \"#utility.yul\":12584:12586   */\n      0x20\n        /* \"#utility.yul\":12576:12582   */\n      dup3\n        /* \"#utility.yul\":12573:12587   */\n      lt\n        /* \"#utility.yul\":12553:12571   */\n      dup2\n        /* \"#utility.yul\":12550:12588   */\n      sub\n        /* \"#utility.yul\":12547:12631   */\n      tag_567\n      jumpi\n        /* \"#utility.yul\":12603:12621   */\n      tag_568\n      tag_398\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":12547:12631   */\n    tag_567:\n        /* \"#utility.yul\":12368:12637   */\n      pop\n        /* \"#utility.yul\":12317:12637   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12643:13085   */\n    tag_155:\n        /* \"#utility.yul\":12792:12796   */\n      0x00\n        /* \"#utility.yul\":12830:12832   */\n      0x60\n        /* \"#utility.yul\":12819:12828   */\n      dup3\n        /* \"#utility.yul\":12815:12833   */\n      add\n        /* \"#utility.yul\":12807:12833   */\n      swap1\n      pop\n        /* \"#utility.yul\":12843:12914   */\n      tag_570\n        /* \"#utility.yul\":12911:12912   */\n      0x00\n        /* \"#utility.yul\":12900:12909   */\n      dup4\n        /* \"#utility.yul\":12896:12913   */\n      add\n        /* \"#utility.yul\":12887:12893   */\n      dup7\n        /* \"#utility.yul\":12843:12914   */\n      tag_381\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":12924:12996   */\n      tag_571\n        /* \"#utility.yul\":12992:12994   */\n      0x20\n        /* \"#utility.yul\":12981:12990   */\n      dup4\n        /* \"#utility.yul\":12977:12995   */\n      add\n        /* \"#utility.yul\":12968:12974   */\n      dup6\n        /* \"#utility.yul\":12924:12996   */\n      tag_392\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":13006:13078   */\n      tag_572\n        /* \"#utility.yul\":13074:13076   */\n      0x40\n        /* \"#utility.yul\":13063:13072   */\n      dup4\n        /* \"#utility.yul\":13059:13077   */\n      add\n        /* \"#utility.yul\":13050:13056   */\n      dup5\n        /* \"#utility.yul\":13006:13078   */\n      tag_381\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":12643:13085   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13091:13271   */\n    tag_399:\n        /* \"#utility.yul\":13139:13216   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13136:13137   */\n      0x00\n        /* \"#utility.yul\":13129:13217   */\n      mstore\n        /* \"#utility.yul\":13236:13240   */\n      0x11\n        /* \"#utility.yul\":13233:13234   */\n      0x04\n        /* \"#utility.yul\":13226:13241   */\n      mstore\n        /* \"#utility.yul\":13260:13264   */\n      0x24\n        /* \"#utility.yul\":13257:13258   */\n      0x00\n        /* \"#utility.yul\":13250:13265   */\n      revert\n        /* \"#utility.yul\":13277:13510   */\n    tag_161:\n        /* \"#utility.yul\":13316:13319   */\n      0x00\n        /* \"#utility.yul\":13339:13363   */\n      tag_575\n        /* \"#utility.yul\":13357:13362   */\n      dup3\n        /* \"#utility.yul\":13339:13363   */\n      tag_366\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":13330:13363   */\n      swap2\n      pop\n        /* \"#utility.yul\":13385:13451   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13378:13383   */\n      dup3\n        /* \"#utility.yul\":13375:13452   */\n      sub\n        /* \"#utility.yul\":13372:13475   */\n      tag_576\n      jumpi\n        /* \"#utility.yul\":13455:13473   */\n      tag_577\n      tag_399\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":13372:13475   */\n    tag_576:\n        /* \"#utility.yul\":13502:13503   */\n      0x01\n        /* \"#utility.yul\":13495:13500   */\n      dup3\n        /* \"#utility.yul\":13491:13504   */\n      add\n        /* \"#utility.yul\":13484:13504   */\n      swap1\n      pop\n        /* \"#utility.yul\":13277:13510   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13516:13657   */\n    tag_400:\n        /* \"#utility.yul\":13565:13569   */\n      0x00\n        /* \"#utility.yul\":13588:13591   */\n      dup2\n        /* \"#utility.yul\":13580:13591   */\n      swap1\n      pop\n        /* \"#utility.yul\":13611:13614   */\n      dup2\n        /* \"#utility.yul\":13608:13609   */\n      0x00\n        /* \"#utility.yul\":13601:13615   */\n      mstore\n        /* \"#utility.yul\":13645:13649   */\n      0x20\n        /* \"#utility.yul\":13642:13643   */\n      0x00\n        /* \"#utility.yul\":13632:13650   */\n      keccak256\n        /* \"#utility.yul\":13624:13650   */\n      swap1\n      pop\n        /* \"#utility.yul\":13516:13657   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13663:13756   */\n    tag_401:\n        /* \"#utility.yul\":13700:13706   */\n      0x00\n        /* \"#utility.yul\":13747:13749   */\n      0x20\n        /* \"#utility.yul\":13742:13744   */\n      0x1f\n        /* \"#utility.yul\":13735:13740   */\n      dup4\n        /* \"#utility.yul\":13731:13745   */\n      add\n        /* \"#utility.yul\":13727:13750   */\n      div\n        /* \"#utility.yul\":13717:13750   */\n      swap1\n      pop\n        /* \"#utility.yul\":13663:13756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13762:13869   */\n    tag_402:\n        /* \"#utility.yul\":13806:13814   */\n      0x00\n        /* \"#utility.yul\":13856:13861   */\n      dup3\n        /* \"#utility.yul\":13850:13854   */\n      dup3\n        /* \"#utility.yul\":13846:13862   */\n      shl\n        /* \"#utility.yul\":13825:13862   */\n      swap1\n      pop\n        /* \"#utility.yul\":13762:13869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13875:14268   */\n    tag_403:\n        /* \"#utility.yul\":13944:13950   */\n      0x00\n        /* \"#utility.yul\":13994:13995   */\n      0x08\n        /* \"#utility.yul\":13982:13992   */\n      dup4\n        /* \"#utility.yul\":13978:13996   */\n      mul\n        /* \"#utility.yul\":14017:14114   */\n      tag_582\n        /* \"#utility.yul\":14047:14113   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14036:14045   */\n      dup3\n        /* \"#utility.yul\":14017:14114   */\n      tag_402\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":14135:14174   */\n      tag_583\n        /* \"#utility.yul\":14165:14173   */\n      dup7\n        /* \"#utility.yul\":14154:14163   */\n      dup4\n        /* \"#utility.yul\":14135:14174   */\n      tag_402\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":14123:14174   */\n      swap6\n      pop\n        /* \"#utility.yul\":14207:14211   */\n      dup1\n        /* \"#utility.yul\":14203:14212   */\n      not\n        /* \"#utility.yul\":14196:14201   */\n      dup5\n        /* \"#utility.yul\":14192:14213   */\n      and\n        /* \"#utility.yul\":14183:14213   */\n      swap4\n      pop\n        /* \"#utility.yul\":14256:14260   */\n      dup1\n        /* \"#utility.yul\":14246:14254   */\n      dup7\n        /* \"#utility.yul\":14242:14261   */\n      and\n        /* \"#utility.yul\":14235:14240   */\n      dup5\n        /* \"#utility.yul\":14232:14262   */\n      or\n        /* \"#utility.yul\":14222:14262   */\n      swap3\n      pop\n        /* \"#utility.yul\":13951:14268   */\n      pop\n      pop\n        /* \"#utility.yul\":13875:14268   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14274:14334   */\n    tag_404:\n        /* \"#utility.yul\":14302:14305   */\n      0x00\n        /* \"#utility.yul\":14323:14328   */\n      dup2\n        /* \"#utility.yul\":14316:14328   */\n      swap1\n      pop\n        /* \"#utility.yul\":14274:14334   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14340:14482   */\n    tag_405:\n        /* \"#utility.yul\":14390:14399   */\n      0x00\n        /* \"#utility.yul\":14423:14476   */\n      tag_586\n        /* \"#utility.yul\":14441:14475   */\n      tag_587\n        /* \"#utility.yul\":14450:14474   */\n      tag_588\n        /* \"#utility.yul\":14468:14473   */\n      dup5\n        /* \"#utility.yul\":14450:14474   */\n      tag_366\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":14441:14475   */\n      tag_404\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":14423:14476   */\n      tag_366\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":14410:14476   */\n      swap1\n      pop\n        /* \"#utility.yul\":14340:14482   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14488:14563   */\n    tag_406:\n        /* \"#utility.yul\":14531:14534   */\n      0x00\n        /* \"#utility.yul\":14552:14557   */\n      dup2\n        /* \"#utility.yul\":14545:14557   */\n      swap1\n      pop\n        /* \"#utility.yul\":14488:14563   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14569:14838   */\n    tag_407:\n        /* \"#utility.yul\":14679:14718   */\n      tag_591\n        /* \"#utility.yul\":14710:14717   */\n      dup4\n        /* \"#utility.yul\":14679:14718   */\n      tag_405\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":14740:14831   */\n      tag_592\n        /* \"#utility.yul\":14789:14830   */\n      tag_593\n        /* \"#utility.yul\":14813:14829   */\n      dup3\n        /* \"#utility.yul\":14789:14830   */\n      tag_406\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":14781:14787   */\n      dup5\n        /* \"#utility.yul\":14774:14778   */\n      dup5\n        /* \"#utility.yul\":14768:14779   */\n      sload\n        /* \"#utility.yul\":14740:14831   */\n      tag_403\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":14734:14738   */\n      dup3\n        /* \"#utility.yul\":14727:14832   */\n      sstore\n        /* \"#utility.yul\":14645:14838   */\n      pop\n        /* \"#utility.yul\":14569:14838   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14844:14917   */\n    tag_408:\n        /* \"#utility.yul\":14889:14892   */\n      0x00\n        /* \"#utility.yul\":14844:14917   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14923:15112   */\n    tag_409:\n        /* \"#utility.yul\":15000:15032   */\n      tag_596\n      tag_408\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":15041:15106   */\n      tag_597\n        /* \"#utility.yul\":15099:15105   */\n      dup2\n        /* \"#utility.yul\":15091:15097   */\n      dup5\n        /* \"#utility.yul\":15085:15089   */\n      dup5\n        /* \"#utility.yul\":15041:15106   */\n      tag_407\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":14976:15112   */\n      pop\n        /* \"#utility.yul\":14923:15112   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15118:15304   */\n    tag_410:\n        /* \"#utility.yul\":15178:15298   */\n    tag_599:\n        /* \"#utility.yul\":15195:15198   */\n      dup2\n        /* \"#utility.yul\":15188:15193   */\n      dup2\n        /* \"#utility.yul\":15185:15199   */\n      lt\n        /* \"#utility.yul\":15178:15298   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":15249:15288   */\n      tag_602\n        /* \"#utility.yul\":15286:15287   */\n      0x00\n        /* \"#utility.yul\":15279:15284   */\n      dup3\n        /* \"#utility.yul\":15249:15288   */\n      tag_409\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":15222:15223   */\n      0x01\n        /* \"#utility.yul\":15215:15220   */\n      dup2\n        /* \"#utility.yul\":15211:15224   */\n      add\n        /* \"#utility.yul\":15202:15224   */\n      swap1\n      pop\n        /* \"#utility.yul\":15178:15298   */\n      jump(tag_599)\n    tag_601:\n        /* \"#utility.yul\":15118:15304   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15310:15853   */\n    tag_411:\n        /* \"#utility.yul\":15411:15413   */\n      0x1f\n        /* \"#utility.yul\":15406:15409   */\n      dup3\n        /* \"#utility.yul\":15403:15414   */\n      gt\n        /* \"#utility.yul\":15400:15846   */\n      iszero\n      tag_604\n      jumpi\n        /* \"#utility.yul\":15445:15483   */\n      tag_605\n        /* \"#utility.yul\":15477:15482   */\n      dup2\n        /* \"#utility.yul\":15445:15483   */\n      tag_400\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":15529:15558   */\n      tag_606\n        /* \"#utility.yul\":15547:15557   */\n      dup5\n        /* \"#utility.yul\":15529:15558   */\n      tag_401\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":15519:15527   */\n      dup2\n        /* \"#utility.yul\":15515:15559   */\n      add\n        /* \"#utility.yul\":15712:15714   */\n      0x20\n        /* \"#utility.yul\":15700:15710   */\n      dup6\n        /* \"#utility.yul\":15697:15715   */\n      lt\n        /* \"#utility.yul\":15694:15743   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":15733:15741   */\n      dup2\n        /* \"#utility.yul\":15718:15741   */\n      swap1\n      pop\n        /* \"#utility.yul\":15694:15743   */\n    tag_607:\n        /* \"#utility.yul\":15756:15836   */\n      tag_608\n        /* \"#utility.yul\":15812:15834   */\n      tag_609\n        /* \"#utility.yul\":15830:15833   */\n      dup6\n        /* \"#utility.yul\":15812:15834   */\n      tag_401\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":15802:15810   */\n      dup4\n        /* \"#utility.yul\":15798:15835   */\n      add\n        /* \"#utility.yul\":15785:15796   */\n      dup3\n        /* \"#utility.yul\":15756:15836   */\n      tag_410\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":15415:15846   */\n      pop\n      pop\n        /* \"#utility.yul\":15400:15846   */\n    tag_604:\n        /* \"#utility.yul\":15310:15853   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15859:15976   */\n    tag_412:\n        /* \"#utility.yul\":15913:15921   */\n      0x00\n        /* \"#utility.yul\":15963:15968   */\n      dup3\n        /* \"#utility.yul\":15957:15961   */\n      dup3\n        /* \"#utility.yul\":15953:15969   */\n      shr\n        /* \"#utility.yul\":15932:15969   */\n      swap1\n      pop\n        /* \"#utility.yul\":15859:15976   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15982:16151   */\n    tag_413:\n        /* \"#utility.yul\":16026:16032   */\n      0x00\n        /* \"#utility.yul\":16059:16110   */\n      tag_612\n        /* \"#utility.yul\":16107:16108   */\n      0x00\n        /* \"#utility.yul\":16103:16109   */\n      not\n        /* \"#utility.yul\":16095:16100   */\n      dup5\n        /* \"#utility.yul\":16092:16093   */\n      0x08\n        /* \"#utility.yul\":16088:16101   */\n      mul\n        /* \"#utility.yul\":16059:16110   */\n      tag_412\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":16055:16111   */\n      not\n        /* \"#utility.yul\":16140:16144   */\n      dup1\n        /* \"#utility.yul\":16134:16138   */\n      dup4\n        /* \"#utility.yul\":16130:16145   */\n      and\n        /* \"#utility.yul\":16120:16145   */\n      swap2\n      pop\n        /* \"#utility.yul\":16033:16151   */\n      pop\n        /* \"#utility.yul\":15982:16151   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16156:16451   */\n    tag_414:\n        /* \"#utility.yul\":16232:16236   */\n      0x00\n        /* \"#utility.yul\":16378:16407   */\n      tag_614\n        /* \"#utility.yul\":16403:16406   */\n      dup4\n        /* \"#utility.yul\":16397:16401   */\n      dup4\n        /* \"#utility.yul\":16378:16407   */\n      tag_413\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":16370:16407   */\n      swap2\n      pop\n        /* \"#utility.yul\":16440:16443   */\n      dup3\n        /* \"#utility.yul\":16437:16438   */\n      0x02\n        /* \"#utility.yul\":16433:16444   */\n      mul\n        /* \"#utility.yul\":16427:16431   */\n      dup3\n        /* \"#utility.yul\":16424:16445   */\n      or\n        /* \"#utility.yul\":16416:16445   */\n      swap1\n      pop\n        /* \"#utility.yul\":16156:16451   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16456:17851   */\n    tag_165:\n        /* \"#utility.yul\":16573:16610   */\n      tag_616\n        /* \"#utility.yul\":16606:16609   */\n      dup3\n        /* \"#utility.yul\":16573:16610   */\n      tag_374\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":16675:16693   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16667:16673   */\n      dup2\n        /* \"#utility.yul\":16664:16694   */\n      gt\n        /* \"#utility.yul\":16661:16717   */\n      iszero\n      tag_617\n      jumpi\n        /* \"#utility.yul\":16697:16715   */\n      tag_618\n      tag_302\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":16661:16717   */\n    tag_617:\n        /* \"#utility.yul\":16741:16779   */\n      tag_619\n        /* \"#utility.yul\":16773:16777   */\n      dup3\n        /* \"#utility.yul\":16767:16778   */\n      sload\n        /* \"#utility.yul\":16741:16779   */\n      tag_132\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":16826:16893   */\n      tag_620\n        /* \"#utility.yul\":16886:16892   */\n      dup3\n        /* \"#utility.yul\":16878:16884   */\n      dup3\n        /* \"#utility.yul\":16872:16876   */\n      dup6\n        /* \"#utility.yul\":16826:16893   */\n      tag_411\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":16920:16921   */\n      0x00\n        /* \"#utility.yul\":16944:16948   */\n      0x20\n        /* \"#utility.yul\":16931:16948   */\n      swap1\n      pop\n        /* \"#utility.yul\":16976:16978   */\n      0x1f\n        /* \"#utility.yul\":16968:16974   */\n      dup4\n        /* \"#utility.yul\":16965:16979   */\n      gt\n        /* \"#utility.yul\":16993:16994   */\n      0x01\n        /* \"#utility.yul\":16988:17606   */\n      dup2\n      eq\n      tag_622\n      jumpi\n        /* \"#utility.yul\":17650:17651   */\n      0x00\n        /* \"#utility.yul\":17667:17673   */\n      dup5\n        /* \"#utility.yul\":17664:17741   */\n      iszero\n      tag_623\n      jumpi\n        /* \"#utility.yul\":17716:17725   */\n      dup3\n        /* \"#utility.yul\":17711:17714   */\n      dup8\n        /* \"#utility.yul\":17707:17726   */\n      add\n        /* \"#utility.yul\":17701:17727   */\n      mload\n        /* \"#utility.yul\":17692:17727   */\n      swap1\n      pop\n        /* \"#utility.yul\":17664:17741   */\n    tag_623:\n        /* \"#utility.yul\":17767:17834   */\n      tag_624\n        /* \"#utility.yul\":17827:17833   */\n      dup6\n        /* \"#utility.yul\":17820:17825   */\n      dup3\n        /* \"#utility.yul\":17767:17834   */\n      tag_414\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":17761:17765   */\n      dup7\n        /* \"#utility.yul\":17754:17835   */\n      sstore\n        /* \"#utility.yul\":17623:17845   */\n      pop\n        /* \"#utility.yul\":16958:17845   */\n      jump(tag_621)\n        /* \"#utility.yul\":16988:17606   */\n    tag_622:\n        /* \"#utility.yul\":17040:17044   */\n      0x1f\n        /* \"#utility.yul\":17036:17045   */\n      not\n        /* \"#utility.yul\":17028:17034   */\n      dup5\n        /* \"#utility.yul\":17024:17046   */\n      and\n        /* \"#utility.yul\":17074:17111   */\n      tag_625\n        /* \"#utility.yul\":17106:17110   */\n      dup7\n        /* \"#utility.yul\":17074:17111   */\n      tag_400\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":17133:17134   */\n      0x00\n        /* \"#utility.yul\":17147:17355   */\n    tag_626:\n        /* \"#utility.yul\":17161:17168   */\n      dup3\n        /* \"#utility.yul\":17158:17159   */\n      dup2\n        /* \"#utility.yul\":17155:17169   */\n      lt\n        /* \"#utility.yul\":17147:17355   */\n      iszero\n      tag_628\n      jumpi\n        /* \"#utility.yul\":17240:17249   */\n      dup5\n        /* \"#utility.yul\":17235:17238   */\n      dup10\n        /* \"#utility.yul\":17231:17250   */\n      add\n        /* \"#utility.yul\":17225:17251   */\n      mload\n        /* \"#utility.yul\":17217:17223   */\n      dup3\n        /* \"#utility.yul\":17210:17252   */\n      sstore\n        /* \"#utility.yul\":17291:17292   */\n      0x01\n        /* \"#utility.yul\":17283:17289   */\n      dup3\n        /* \"#utility.yul\":17279:17293   */\n      add\n        /* \"#utility.yul\":17269:17293   */\n      swap2\n      pop\n        /* \"#utility.yul\":17338:17340   */\n      0x20\n        /* \"#utility.yul\":17327:17336   */\n      dup6\n        /* \"#utility.yul\":17323:17341   */\n      add\n        /* \"#utility.yul\":17310:17341   */\n      swap5\n      pop\n        /* \"#utility.yul\":17184:17188   */\n      0x20\n        /* \"#utility.yul\":17181:17182   */\n      dup2\n        /* \"#utility.yul\":17177:17189   */\n      add\n        /* \"#utility.yul\":17172:17189   */\n      swap1\n      pop\n        /* \"#utility.yul\":17147:17355   */\n      jump(tag_626)\n    tag_628:\n        /* \"#utility.yul\":17383:17389   */\n      dup7\n        /* \"#utility.yul\":17374:17381   */\n      dup4\n        /* \"#utility.yul\":17371:17390   */\n      lt\n        /* \"#utility.yul\":17368:17547   */\n      iszero\n      tag_629\n      jumpi\n        /* \"#utility.yul\":17441:17450   */\n      dup5\n        /* \"#utility.yul\":17436:17439   */\n      dup10\n        /* \"#utility.yul\":17432:17451   */\n      add\n        /* \"#utility.yul\":17426:17452   */\n      mload\n        /* \"#utility.yul\":17484:17532   */\n      tag_630\n        /* \"#utility.yul\":17526:17530   */\n      0x1f\n        /* \"#utility.yul\":17518:17524   */\n      dup10\n        /* \"#utility.yul\":17514:17531   */\n      and\n        /* \"#utility.yul\":17503:17512   */\n      dup3\n        /* \"#utility.yul\":17484:17532   */\n      tag_413\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":17476:17482   */\n      dup4\n        /* \"#utility.yul\":17469:17533   */\n      sstore\n        /* \"#utility.yul\":17391:17547   */\n      pop\n        /* \"#utility.yul\":17368:17547   */\n    tag_629:\n        /* \"#utility.yul\":17593:17594   */\n      0x01\n        /* \"#utility.yul\":17589:17590   */\n      0x02\n        /* \"#utility.yul\":17581:17587   */\n      dup9\n        /* \"#utility.yul\":17577:17591   */\n      mul\n        /* \"#utility.yul\":17573:17595   */\n      add\n        /* \"#utility.yul\":17567:17571   */\n      dup9\n        /* \"#utility.yul\":17560:17596   */\n      sstore\n        /* \"#utility.yul\":16995:17606   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16958:17845   */\n    tag_621:\n      pop\n        /* \"#utility.yul\":16548:17851   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16456:17851   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17857:18027   */\n    tag_415:\n        /* \"#utility.yul\":17997:18019   */\n      0x546f6b656e20646f6573206e6f74206578697374000000000000000000000000\n        /* \"#utility.yul\":17993:17994   */\n      0x00\n        /* \"#utility.yul\":17985:17991   */\n      dup3\n        /* \"#utility.yul\":17981:17995   */\n      add\n        /* \"#utility.yul\":17974:18020   */\n      mstore\n        /* \"#utility.yul\":17857:18027   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18033:18399   */\n    tag_416:\n        /* \"#utility.yul\":18175:18178   */\n      0x00\n        /* \"#utility.yul\":18196:18263   */\n      tag_633\n        /* \"#utility.yul\":18260:18262   */\n      0x14\n        /* \"#utility.yul\":18255:18258   */\n      dup4\n        /* \"#utility.yul\":18196:18263   */\n      tag_375\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":18189:18263   */\n      swap2\n      pop\n        /* \"#utility.yul\":18272:18365   */\n      tag_634\n        /* \"#utility.yul\":18361:18364   */\n      dup3\n        /* \"#utility.yul\":18272:18365   */\n      tag_415\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":18390:18392   */\n      0x20\n        /* \"#utility.yul\":18385:18388   */\n      dup3\n        /* \"#utility.yul\":18381:18393   */\n      add\n        /* \"#utility.yul\":18374:18393   */\n      swap1\n      pop\n        /* \"#utility.yul\":18033:18399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18405:18824   */\n    tag_184:\n        /* \"#utility.yul\":18571:18575   */\n      0x00\n        /* \"#utility.yul\":18609:18611   */\n      0x20\n        /* \"#utility.yul\":18598:18607   */\n      dup3\n        /* \"#utility.yul\":18594:18612   */\n      add\n        /* \"#utility.yul\":18586:18612   */\n      swap1\n      pop\n        /* \"#utility.yul\":18658:18667   */\n      dup2\n        /* \"#utility.yul\":18652:18656   */\n      dup2\n        /* \"#utility.yul\":18648:18668   */\n      sub\n        /* \"#utility.yul\":18644:18645   */\n      0x00\n        /* \"#utility.yul\":18633:18642   */\n      dup4\n        /* \"#utility.yul\":18629:18646   */\n      add\n        /* \"#utility.yul\":18622:18669   */\n      mstore\n        /* \"#utility.yul\":18686:18817   */\n      tag_636\n        /* \"#utility.yul\":18812:18816   */\n      dup2\n        /* \"#utility.yul\":18686:18817   */\n      tag_416\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":18678:18817   */\n      swap1\n      pop\n        /* \"#utility.yul\":18405:18824   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18830:18978   */\n    tag_417:\n        /* \"#utility.yul\":18932:18943   */\n      0x00\n        /* \"#utility.yul\":18969:18972   */\n      dup2\n        /* \"#utility.yul\":18954:18972   */\n      swap1\n      pop\n        /* \"#utility.yul\":18830:18978   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18984:19374   */\n    tag_418:\n        /* \"#utility.yul\":19090:19093   */\n      0x00\n        /* \"#utility.yul\":19118:19157   */\n      tag_639\n        /* \"#utility.yul\":19151:19156   */\n      dup3\n        /* \"#utility.yul\":19118:19157   */\n      tag_374\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":19173:19262   */\n      tag_640\n        /* \"#utility.yul\":19255:19261   */\n      dup2\n        /* \"#utility.yul\":19250:19253   */\n      dup6\n        /* \"#utility.yul\":19173:19262   */\n      tag_417\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":19166:19262   */\n      swap4\n      pop\n        /* \"#utility.yul\":19271:19336   */\n      tag_641\n        /* \"#utility.yul\":19329:19335   */\n      dup2\n        /* \"#utility.yul\":19324:19327   */\n      dup6\n        /* \"#utility.yul\":19317:19321   */\n      0x20\n        /* \"#utility.yul\":19310:19315   */\n      dup7\n        /* \"#utility.yul\":19306:19322   */\n      add\n        /* \"#utility.yul\":19271:19336   */\n      tag_376\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":19361:19367   */\n      dup1\n        /* \"#utility.yul\":19356:19359   */\n      dup5\n        /* \"#utility.yul\":19352:19368   */\n      add\n        /* \"#utility.yul\":19345:19368   */\n      swap2\n      pop\n        /* \"#utility.yul\":19094:19374   */\n      pop\n        /* \"#utility.yul\":18984:19374   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19380:19815   */\n    tag_227:\n        /* \"#utility.yul\":19560:19563   */\n      0x00\n        /* \"#utility.yul\":19582:19677   */\n      tag_643\n        /* \"#utility.yul\":19673:19676   */\n      dup3\n        /* \"#utility.yul\":19664:19670   */\n      dup6\n        /* \"#utility.yul\":19582:19677   */\n      tag_418\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":19575:19677   */\n      swap2\n      pop\n        /* \"#utility.yul\":19694:19789   */\n      tag_644\n        /* \"#utility.yul\":19785:19788   */\n      dup3\n        /* \"#utility.yul\":19776:19782   */\n      dup5\n        /* \"#utility.yul\":19694:19789   */\n      tag_418\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":19687:19789   */\n      swap2\n      pop\n        /* \"#utility.yul\":19806:19809   */\n      dup2\n        /* \"#utility.yul\":19799:19809   */\n      swap1\n      pop\n        /* \"#utility.yul\":19380:19815   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19821:19919   */\n    tag_419:\n        /* \"#utility.yul\":19872:19878   */\n      0x00\n        /* \"#utility.yul\":19906:19911   */\n      dup2\n        /* \"#utility.yul\":19900:19912   */\n      mload\n        /* \"#utility.yul\":19890:19912   */\n      swap1\n      pop\n        /* \"#utility.yul\":19821:19919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19925:20093   */\n    tag_420:\n        /* \"#utility.yul\":20008:20019   */\n      0x00\n        /* \"#utility.yul\":20042:20048   */\n      dup3\n        /* \"#utility.yul\":20037:20040   */\n      dup3\n        /* \"#utility.yul\":20030:20049   */\n      mstore\n        /* \"#utility.yul\":20082:20086   */\n      0x20\n        /* \"#utility.yul\":20077:20080   */\n      dup3\n        /* \"#utility.yul\":20073:20087   */\n      add\n        /* \"#utility.yul\":20058:20087   */\n      swap1\n      pop\n        /* \"#utility.yul\":19925:20093   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20099:20472   */\n    tag_421:\n        /* \"#utility.yul\":20185:20188   */\n      0x00\n        /* \"#utility.yul\":20213:20251   */\n      tag_648\n        /* \"#utility.yul\":20245:20250   */\n      dup3\n        /* \"#utility.yul\":20213:20251   */\n      tag_419\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":20267:20337   */\n      tag_649\n        /* \"#utility.yul\":20330:20336   */\n      dup2\n        /* \"#utility.yul\":20325:20328   */\n      dup6\n        /* \"#utility.yul\":20267:20337   */\n      tag_420\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":20260:20337   */\n      swap4\n      pop\n        /* \"#utility.yul\":20346:20411   */\n      tag_650\n        /* \"#utility.yul\":20404:20410   */\n      dup2\n        /* \"#utility.yul\":20399:20402   */\n      dup6\n        /* \"#utility.yul\":20392:20396   */\n      0x20\n        /* \"#utility.yul\":20385:20390   */\n      dup7\n        /* \"#utility.yul\":20381:20397   */\n      add\n        /* \"#utility.yul\":20346:20411   */\n      tag_376\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":20436:20465   */\n      tag_651\n        /* \"#utility.yul\":20458:20464   */\n      dup2\n        /* \"#utility.yul\":20436:20465   */\n      tag_377\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":20431:20434   */\n      dup5\n        /* \"#utility.yul\":20427:20466   */\n      add\n        /* \"#utility.yul\":20420:20466   */\n      swap2\n      pop\n        /* \"#utility.yul\":20189:20472   */\n      pop\n        /* \"#utility.yul\":20099:20472   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20478:21118   */\n    tag_280:\n        /* \"#utility.yul\":20673:20677   */\n      0x00\n        /* \"#utility.yul\":20711:20714   */\n      0x80\n        /* \"#utility.yul\":20700:20709   */\n      dup3\n        /* \"#utility.yul\":20696:20715   */\n      add\n        /* \"#utility.yul\":20688:20715   */\n      swap1\n      pop\n        /* \"#utility.yul\":20725:20796   */\n      tag_653\n        /* \"#utility.yul\":20793:20794   */\n      0x00\n        /* \"#utility.yul\":20782:20791   */\n      dup4\n        /* \"#utility.yul\":20778:20795   */\n      add\n        /* \"#utility.yul\":20769:20775   */\n      dup8\n        /* \"#utility.yul\":20725:20796   */\n      tag_381\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":20806:20878   */\n      tag_654\n        /* \"#utility.yul\":20874:20876   */\n      0x20\n        /* \"#utility.yul\":20863:20872   */\n      dup4\n        /* \"#utility.yul\":20859:20877   */\n      add\n        /* \"#utility.yul\":20850:20856   */\n      dup7\n        /* \"#utility.yul\":20806:20878   */\n      tag_381\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":20888:20960   */\n      tag_655\n        /* \"#utility.yul\":20956:20958   */\n      0x40\n        /* \"#utility.yul\":20945:20954   */\n      dup4\n        /* \"#utility.yul\":20941:20959   */\n      add\n        /* \"#utility.yul\":20932:20938   */\n      dup6\n        /* \"#utility.yul\":20888:20960   */\n      tag_392\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":21007:21016   */\n      dup2\n        /* \"#utility.yul\":21001:21005   */\n      dup2\n        /* \"#utility.yul\":20997:21017   */\n      sub\n        /* \"#utility.yul\":20992:20994   */\n      0x60\n        /* \"#utility.yul\":20981:20990   */\n      dup4\n        /* \"#utility.yul\":20977:20995   */\n      add\n        /* \"#utility.yul\":20970:21018   */\n      mstore\n        /* \"#utility.yul\":21035:21111   */\n      tag_656\n        /* \"#utility.yul\":21106:21110   */\n      dup2\n        /* \"#utility.yul\":21097:21103   */\n      dup5\n        /* \"#utility.yul\":21035:21111   */\n      tag_421\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":21027:21111   */\n      swap1\n      pop\n        /* \"#utility.yul\":20478:21118   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21124:21265   */\n    tag_422:\n        /* \"#utility.yul\":21180:21185   */\n      0x00\n        /* \"#utility.yul\":21211:21217   */\n      dup2\n        /* \"#utility.yul\":21205:21218   */\n      mload\n        /* \"#utility.yul\":21196:21218   */\n      swap1\n      pop\n        /* \"#utility.yul\":21227:21259   */\n      tag_658\n        /* \"#utility.yul\":21253:21258   */\n      dup2\n        /* \"#utility.yul\":21227:21259   */\n      tag_372\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":21124:21265   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21271:21620   */\n    tag_283:\n        /* \"#utility.yul\":21340:21346   */\n      0x00\n        /* \"#utility.yul\":21389:21391   */\n      0x20\n        /* \"#utility.yul\":21377:21386   */\n      dup3\n        /* \"#utility.yul\":21368:21375   */\n      dup5\n        /* \"#utility.yul\":21364:21387   */\n      sub\n        /* \"#utility.yul\":21360:21392   */\n      slt\n        /* \"#utility.yul\":21357:21476   */\n      iszero\n      tag_660\n      jumpi\n        /* \"#utility.yul\":21395:21474   */\n      tag_661\n      tag_364\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":21357:21476   */\n    tag_660:\n        /* \"#utility.yul\":21515:21516   */\n      0x00\n        /* \"#utility.yul\":21540:21603   */\n      tag_662\n        /* \"#utility.yul\":21595:21602   */\n      dup5\n        /* \"#utility.yul\":21586:21592   */\n      dup3\n        /* \"#utility.yul\":21575:21584   */\n      dup6\n        /* \"#utility.yul\":21571:21593   */\n      add\n        /* \"#utility.yul\":21540:21603   */\n      tag_422\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":21530:21603   */\n      swap2\n      pop\n        /* \"#utility.yul\":21486:21613   */\n      pop\n        /* \"#utility.yul\":21271:21620   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21626:21806   */\n    tag_308:\n        /* \"#utility.yul\":21674:21751   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21671:21672   */\n      0x00\n        /* \"#utility.yul\":21664:21752   */\n      mstore\n        /* \"#utility.yul\":21771:21775   */\n      0x12\n        /* \"#utility.yul\":21768:21769   */\n      0x04\n        /* \"#utility.yul\":21761:21776   */\n      mstore\n        /* \"#utility.yul\":21795:21799   */\n      0x24\n        /* \"#utility.yul\":21792:21793   */\n      0x00\n        /* \"#utility.yul\":21785:21800   */\n      revert\n        /* \"#utility.yul\":21812:22144   */\n    tag_329:\n        /* \"#utility.yul\":21933:21937   */\n      0x00\n        /* \"#utility.yul\":21971:21973   */\n      0x40\n        /* \"#utility.yul\":21960:21969   */\n      dup3\n        /* \"#utility.yul\":21956:21974   */\n      add\n        /* \"#utility.yul\":21948:21974   */\n      swap1\n      pop\n        /* \"#utility.yul\":21984:22055   */\n      tag_665\n        /* \"#utility.yul\":22052:22053   */\n      0x00\n        /* \"#utility.yul\":22041:22050   */\n      dup4\n        /* \"#utility.yul\":22037:22054   */\n      add\n        /* \"#utility.yul\":22028:22034   */\n      dup6\n        /* \"#utility.yul\":21984:22055   */\n      tag_381\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":22065:22137   */\n      tag_666\n        /* \"#utility.yul\":22133:22135   */\n      0x20\n        /* \"#utility.yul\":22122:22131   */\n      dup4\n        /* \"#utility.yul\":22118:22136   */\n      add\n        /* \"#utility.yul\":22109:22115   */\n      dup5\n        /* \"#utility.yul\":22065:22137   */\n      tag_392\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":21812:22144   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f5586614243f435031b88e189209f3dc3ac66d0e3b3f1f292690787d80cb7ccf64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2965": {
									"entryPoint": null,
									"id": 2965,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_354": {
									"entryPoint": null,
									"id": 354,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 325,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1090,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 520,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 850,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 991,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6778:13",
										"nodeType": "YulBlock",
										"src": "0:6778:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "922:274:13",
													"nodeType": "YulBlock",
													"src": "922:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:13",
																"nodeType": "YulBlock",
																"src": "968:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:13"
																			},
																			"nativeSrc": "970:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:13"
																		},
																		"nativeSrc": "970:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:13"
																		},
																		"nativeSrc": "939:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:13",
																		"nodeType": "YulLiteral",
																		"src": "964:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:13"
																},
																"nativeSrc": "935:32:13",
																"nodeType": "YulFunctionCall",
																"src": "935:32:13"
															},
															"nativeSrc": "932:119:13",
															"nodeType": "YulIf",
															"src": "932:119:13"
														},
														{
															"nativeSrc": "1061:128:13",
															"nodeType": "YulBlock",
															"src": "1061:128:13",
															"statements": [
																{
																	"nativeSrc": "1076:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:13"
																				},
																				"nativeSrc": "1147:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:13"
																		},
																		"nativeSrc": "1115:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:13",
														"nodeType": "YulTypedName",
														"src": "892:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:13",
														"nodeType": "YulTypedName",
														"src": "903:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:13",
														"nodeType": "YulTypedName",
														"src": "915:6:13",
														"type": ""
													}
												],
												"src": "845:351:13"
											},
											{
												"body": {
													"nativeSrc": "1261:40:13",
													"nodeType": "YulBlock",
													"src": "1261:40:13",
													"statements": [
														{
															"nativeSrc": "1272:22:13",
															"nodeType": "YulAssignment",
															"src": "1272:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:13"
																},
																"nativeSrc": "1282:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:13",
														"nodeType": "YulTypedName",
														"src": "1244:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:13",
														"nodeType": "YulTypedName",
														"src": "1254:6:13",
														"type": ""
													}
												],
												"src": "1202:99:13"
											},
											{
												"body": {
													"nativeSrc": "1335:152:13",
													"nodeType": "YulBlock",
													"src": "1335:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:13",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:13"
																},
																"nativeSrc": "1345:88:13",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:13"
															},
															"nativeSrc": "1345:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:13"
																},
																"nativeSrc": "1442:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:13"
															},
															"nativeSrc": "1442:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:13"
																},
																"nativeSrc": "1466:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:13"
															},
															"nativeSrc": "1466:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:13"
											},
											{
												"body": {
													"nativeSrc": "1521:152:13",
													"nodeType": "YulBlock",
													"src": "1521:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:13",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:13"
																},
																"nativeSrc": "1531:88:13",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:13"
															},
															"nativeSrc": "1531:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:13"
																},
																"nativeSrc": "1628:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:13"
															},
															"nativeSrc": "1628:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:13"
																},
																"nativeSrc": "1652:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:13"
															},
															"nativeSrc": "1652:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:13"
											},
											{
												"body": {
													"nativeSrc": "1730:269:13",
													"nodeType": "YulBlock",
													"src": "1730:269:13",
													"statements": [
														{
															"nativeSrc": "1740:22:13",
															"nodeType": "YulAssignment",
															"src": "1740:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:13"
																},
																"nativeSrc": "1750:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:13"
																}
															]
														},
														{
															"nativeSrc": "1771:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:13"
																},
																"nativeSrc": "1797:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:13",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:13",
																"nodeType": "YulBlock",
																"src": "1848:51:13",
																"statements": [
																	{
																		"nativeSrc": "1862:27:13",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:13",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:13"
																			},
																			"nativeSrc": "1872:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:13"
																},
																"nativeSrc": "1821:26:13",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:13"
															},
															"nativeSrc": "1818:81:13",
															"nodeType": "YulIf",
															"src": "1818:81:13"
														},
														{
															"body": {
																"nativeSrc": "1951:42:13",
																"nodeType": "YulBlock",
																"src": "1951:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:13"
																			},
																			"nativeSrc": "1965:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:13"
																		},
																		"nativeSrc": "1965:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:13"
																		},
																		"nativeSrc": "1935:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:13"
																},
																"nativeSrc": "1912:38:13",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:13"
															},
															"nativeSrc": "1909:84:13",
															"nodeType": "YulIf",
															"src": "1909:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:13",
														"nodeType": "YulTypedName",
														"src": "1714:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:13",
														"nodeType": "YulTypedName",
														"src": "1723:6:13",
														"type": ""
													}
												],
												"src": "1679:320:13"
											},
											{
												"body": {
													"nativeSrc": "2059:87:13",
													"nodeType": "YulBlock",
													"src": "2059:87:13",
													"statements": [
														{
															"nativeSrc": "2069:11:13",
															"nodeType": "YulAssignment",
															"src": "2069:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:13",
																"nodeType": "YulIdentifier",
																"src": "2077:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:13"
																},
																"nativeSrc": "2090:14:13",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:13"
															},
															"nativeSrc": "2090:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:13"
														},
														{
															"nativeSrc": "2113:26:13",
															"nodeType": "YulAssignment",
															"src": "2113:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:13"
																},
																"nativeSrc": "2121:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:13",
														"nodeType": "YulTypedName",
														"src": "2046:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:13",
														"nodeType": "YulTypedName",
														"src": "2054:4:13",
														"type": ""
													}
												],
												"src": "2005:141:13"
											},
											{
												"body": {
													"nativeSrc": "2196:49:13",
													"nodeType": "YulBlock",
													"src": "2196:49:13",
													"statements": [
														{
															"nativeSrc": "2206:33:13",
															"nodeType": "YulAssignment",
															"src": "2206:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:13"
																		},
																		"nativeSrc": "2220:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:13"
																},
																"nativeSrc": "2216:23:13",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:13",
														"nodeType": "YulTypedName",
														"src": "2179:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:13",
														"nodeType": "YulTypedName",
														"src": "2189:6:13",
														"type": ""
													}
												],
												"src": "2152:93:13"
											},
											{
												"body": {
													"nativeSrc": "2304:54:13",
													"nodeType": "YulBlock",
													"src": "2304:54:13",
													"statements": [
														{
															"nativeSrc": "2314:37:13",
															"nodeType": "YulAssignment",
															"src": "2314:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:13"
																},
																"nativeSrc": "2335:16:13",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:13",
														"nodeType": "YulTypedName",
														"src": "2279:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:13",
														"nodeType": "YulTypedName",
														"src": "2285:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:13",
														"nodeType": "YulTypedName",
														"src": "2295:8:13",
														"type": ""
													}
												],
												"src": "2251:107:13"
											},
											{
												"body": {
													"nativeSrc": "2440:317:13",
													"nodeType": "YulBlock",
													"src": "2440:317:13",
													"statements": [
														{
															"nativeSrc": "2450:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:13"
																},
																"nativeSrc": "2467:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:13",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:13",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:13"
																},
																"nativeSrc": "2506:97:13",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:13",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:13",
															"nodeType": "YulAssignment",
															"src": "2612:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:13"
																},
																"nativeSrc": "2624:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:13"
																}
															]
														},
														{
															"nativeSrc": "2672:30:13",
															"nodeType": "YulAssignment",
															"src": "2672:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:13"
																		},
																		"nativeSrc": "2692:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:13"
																},
																"nativeSrc": "2681:21:13",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:13"
																}
															]
														},
														{
															"nativeSrc": "2711:40:13",
															"nodeType": "YulAssignment",
															"src": "2711:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:13"
																		},
																		"nativeSrc": "2731:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:13"
																},
																"nativeSrc": "2721:30:13",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:13",
														"nodeType": "YulTypedName",
														"src": "2401:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:13",
														"nodeType": "YulTypedName",
														"src": "2408:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:13",
														"nodeType": "YulTypedName",
														"src": "2420:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:13",
														"nodeType": "YulTypedName",
														"src": "2433:6:13",
														"type": ""
													}
												],
												"src": "2364:393:13"
											},
											{
												"body": {
													"nativeSrc": "2808:32:13",
													"nodeType": "YulBlock",
													"src": "2808:32:13",
													"statements": [
														{
															"nativeSrc": "2818:16:13",
															"nodeType": "YulAssignment",
															"src": "2818:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:13",
																"nodeType": "YulIdentifier",
																"src": "2829:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:13",
														"nodeType": "YulTypedName",
														"src": "2790:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:13",
														"nodeType": "YulTypedName",
														"src": "2800:7:13",
														"type": ""
													}
												],
												"src": "2763:77:13"
											},
											{
												"body": {
													"nativeSrc": "2878:28:13",
													"nodeType": "YulBlock",
													"src": "2878:28:13",
													"statements": [
														{
															"nativeSrc": "2888:12:13",
															"nodeType": "YulAssignment",
															"src": "2888:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:13",
																"nodeType": "YulIdentifier",
																"src": "2895:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:13",
														"nodeType": "YulTypedName",
														"src": "2864:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:13",
														"nodeType": "YulTypedName",
														"src": "2874:3:13",
														"type": ""
													}
												],
												"src": "2846:60:13"
											},
											{
												"body": {
													"nativeSrc": "2972:82:13",
													"nodeType": "YulBlock",
													"src": "2972:82:13",
													"statements": [
														{
															"nativeSrc": "2982:66:13",
															"nodeType": "YulAssignment",
															"src": "2982:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:13"
																				},
																				"nativeSrc": "3022:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:13"
																		},
																		"nativeSrc": "3013:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:13"
																},
																"nativeSrc": "2995:53:13",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:13",
														"nodeType": "YulTypedName",
														"src": "2952:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:13",
														"nodeType": "YulTypedName",
														"src": "2962:9:13",
														"type": ""
													}
												],
												"src": "2912:142:13"
											},
											{
												"body": {
													"nativeSrc": "3107:28:13",
													"nodeType": "YulBlock",
													"src": "3107:28:13",
													"statements": [
														{
															"nativeSrc": "3117:12:13",
															"nodeType": "YulAssignment",
															"src": "3117:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:13",
																"nodeType": "YulIdentifier",
																"src": "3124:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:13",
														"nodeType": "YulTypedName",
														"src": "3093:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:13",
														"nodeType": "YulTypedName",
														"src": "3103:3:13",
														"type": ""
													}
												],
												"src": "3060:75:13"
											},
											{
												"body": {
													"nativeSrc": "3217:193:13",
													"nodeType": "YulBlock",
													"src": "3217:193:13",
													"statements": [
														{
															"nativeSrc": "3227:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:13"
																},
																"nativeSrc": "3251:39:13",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:13",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:13"
																				},
																				"nativeSrc": "3340:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:13"
																				},
																				"nativeSrc": "3361:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:13"
																		},
																		"nativeSrc": "3312:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:13"
																},
																"nativeSrc": "3299:105:13",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:13"
															},
															"nativeSrc": "3299:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:13",
														"nodeType": "YulTypedName",
														"src": "3194:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:13",
														"nodeType": "YulTypedName",
														"src": "3200:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:13",
														"nodeType": "YulTypedName",
														"src": "3208:7:13",
														"type": ""
													}
												],
												"src": "3141:269:13"
											},
											{
												"body": {
													"nativeSrc": "3465:24:13",
													"nodeType": "YulBlock",
													"src": "3465:24:13",
													"statements": [
														{
															"nativeSrc": "3475:8:13",
															"nodeType": "YulAssignment",
															"src": "3475:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:13",
																"nodeType": "YulLiteral",
																"src": "3482:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:13",
														"nodeType": "YulTypedName",
														"src": "3461:3:13",
														"type": ""
													}
												],
												"src": "3416:73:13"
											},
											{
												"body": {
													"nativeSrc": "3548:136:13",
													"nodeType": "YulBlock",
													"src": "3548:136:13",
													"statements": [
														{
															"nativeSrc": "3558:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:13"
																},
																"nativeSrc": "3572:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:13"
																},
																"nativeSrc": "3613:65:13",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:13"
															},
															"nativeSrc": "3613:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:13",
														"nodeType": "YulTypedName",
														"src": "3534:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:13",
														"nodeType": "YulTypedName",
														"src": "3540:6:13",
														"type": ""
													}
												],
												"src": "3495:189:13"
											},
											{
												"body": {
													"nativeSrc": "3740:136:13",
													"nodeType": "YulBlock",
													"src": "3740:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:13",
																"nodeType": "YulBlock",
																"src": "3807:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:13"
																			},
																			"nativeSrc": "3821:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:13"
																		},
																		"nativeSrc": "3821:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:13"
																},
																"nativeSrc": "3757:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:13"
															},
															"nativeSrc": "3750:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:13",
																"nodeType": "YulBlock",
																"src": "3772:26:13",
																"statements": [
																	{
																		"nativeSrc": "3774:22:13",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:13"
																			},
																			"nativeSrc": "3783:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:13",
																"nodeType": "YulBlock",
																"src": "3754:2:13",
																"statements": []
															},
															"src": "3750:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:13",
														"nodeType": "YulTypedName",
														"src": "3728:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:13",
														"nodeType": "YulTypedName",
														"src": "3735:3:13",
														"type": ""
													}
												],
												"src": "3690:186:13"
											},
											{
												"body": {
													"nativeSrc": "3961:464:13",
													"nodeType": "YulBlock",
													"src": "3961:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:13",
																"nodeType": "YulBlock",
																"src": "3987:431:13",
																"statements": [
																	{
																		"nativeSrc": "4001:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:13"
																			},
																			"nativeSrc": "4017:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:13",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:13"
																					},
																					"nativeSrc": "4101:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:13"
																			},
																			"nativeSrc": "4087:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:13",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:13",
																			"nodeType": "YulBlock",
																			"src": "4288:27:13",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:13",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:13",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:13"
																			},
																			"nativeSrc": "4269:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:13"
																		},
																		"nativeSrc": "4266:49:13",
																		"nodeType": "YulIf",
																		"src": "4266:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:13"
																							},
																							"nativeSrc": "4384:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:13"
																					},
																					"nativeSrc": "4370:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:13"
																			},
																			"nativeSrc": "4328:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:13"
																		},
																		"nativeSrc": "4328:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:13"
																},
																"nativeSrc": "3975:11:13",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:13"
															},
															"nativeSrc": "3972:446:13",
															"nodeType": "YulIf",
															"src": "3972:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:13",
														"nodeType": "YulTypedName",
														"src": "3937:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:13",
														"nodeType": "YulTypedName",
														"src": "3944:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:13",
														"nodeType": "YulTypedName",
														"src": "3949:10:13",
														"type": ""
													}
												],
												"src": "3882:543:13"
											},
											{
												"body": {
													"nativeSrc": "4494:54:13",
													"nodeType": "YulBlock",
													"src": "4494:54:13",
													"statements": [
														{
															"nativeSrc": "4504:37:13",
															"nodeType": "YulAssignment",
															"src": "4504:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:13"
																},
																"nativeSrc": "4525:16:13",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:13",
														"nodeType": "YulTypedName",
														"src": "4469:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:13",
														"nodeType": "YulTypedName",
														"src": "4475:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:13",
														"nodeType": "YulTypedName",
														"src": "4485:8:13",
														"type": ""
													}
												],
												"src": "4431:117:13"
											},
											{
												"body": {
													"nativeSrc": "4605:118:13",
													"nodeType": "YulBlock",
													"src": "4605:118:13",
													"statements": [
														{
															"nativeSrc": "4615:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:13"
																				},
																				"nativeSrc": "4660:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:13"
																				},
																				"nativeSrc": "4675:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:13"
																		},
																		"nativeSrc": "4631:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:13"
																},
																"nativeSrc": "4627:56:13",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:13",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:13",
															"nodeType": "YulAssignment",
															"src": "4692:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:13"
																},
																"nativeSrc": "4702:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:13",
														"nodeType": "YulTypedName",
														"src": "4582:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:13",
														"nodeType": "YulTypedName",
														"src": "4588:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:13",
														"nodeType": "YulTypedName",
														"src": "4598:6:13",
														"type": ""
													}
												],
												"src": "4554:169:13"
											},
											{
												"body": {
													"nativeSrc": "4809:214:13",
													"nodeType": "YulBlock",
													"src": "4809:214:13",
													"statements": [
														{
															"nativeSrc": "4942:37:13",
															"nodeType": "YulAssignment",
															"src": "4942:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:13"
																},
																"nativeSrc": "4950:29:13",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:13"
																}
															]
														},
														{
															"nativeSrc": "4988:29:13",
															"nodeType": "YulAssignment",
															"src": "4988:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:13"
																		},
																		"nativeSrc": "5005:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:13"
																},
																"nativeSrc": "4996:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:13",
														"nodeType": "YulTypedName",
														"src": "4790:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:13",
														"nodeType": "YulTypedName",
														"src": "4796:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:13",
														"nodeType": "YulTypedName",
														"src": "4804:4:13",
														"type": ""
													}
												],
												"src": "4728:295:13"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:13",
													"nodeType": "YulBlock",
													"src": "5120:1303:13",
													"statements": [
														{
															"nativeSrc": "5131:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:13"
																},
																"nativeSrc": "5145:37:13",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:13",
																"nodeType": "YulBlock",
																"src": "5267:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:13"
																			},
																			"nativeSrc": "5269:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:13"
																		},
																		"nativeSrc": "5269:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:13",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:13"
																},
																"nativeSrc": "5236:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:13"
															},
															"nativeSrc": "5233:56:13",
															"nodeType": "YulIf",
															"src": "5233:56:13"
														},
														{
															"nativeSrc": "5299:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:13"
																		},
																		"nativeSrc": "5339:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:13"
																},
																"nativeSrc": "5313:38:13",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:13"
																},
																"nativeSrc": "5398:67:13",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:13"
															},
															"nativeSrc": "5398:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:13"
														},
														{
															"nativeSrc": "5475:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:13",
																"nodeType": "YulLiteral",
																"src": "5492:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:13",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:13",
															"nodeType": "YulAssignment",
															"src": "5503:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:13",
																"nodeType": "YulLiteral",
																"src": "5516:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:13",
																		"nodeType": "YulBlock",
																		"src": "5567:611:13",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:13",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:13"
																							},
																							"nativeSrc": "5608:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:13"
																					},
																					"nativeSrc": "5596:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:13",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:13"
																					},
																					"nativeSrc": "5646:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:13",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:13",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:13",
																					"nodeType": "YulBlock",
																					"src": "5764:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:13"
																												},
																												"nativeSrc": "5803:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:13"
																										},
																										"nativeSrc": "5797:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:13"
																								},
																								"nativeSrc": "5782:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:13"
																							},
																							"nativeSrc": "5782:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:13"
																						},
																						{
																							"nativeSrc": "5841:24:13",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:13",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:13"
																								},
																								"nativeSrc": "5851:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:13",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:13",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:13"
																								},
																								"nativeSrc": "5895:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:13"
																					},
																					"nativeSrc": "5727:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:13"
																				},
																				"nativeSrc": "5719:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:13",
																					"nodeType": "YulBlock",
																					"src": "5742:21:13",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:13",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:13",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:13"
																								},
																								"nativeSrc": "5749:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:13",
																					"nodeType": "YulBlock",
																					"src": "5723:3:13",
																					"statements": []
																				},
																				"src": "5719:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:13",
																					"nodeType": "YulBlock",
																					"src": "5963:156:13",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:13"
																										},
																										"nativeSrc": "6004:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:13"
																								},
																								"nativeSrc": "5998:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:13",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:13",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:13"
																												},
																												"nativeSrc": "6086:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:13"
																										},
																										"nativeSrc": "6056:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:13"
																								},
																								"nativeSrc": "6041:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:13"
																							},
																							"nativeSrc": "6041:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:13"
																					},
																					"nativeSrc": "5943:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:13"
																				},
																				"nativeSrc": "5940:179:13",
																				"nodeType": "YulIf",
																				"src": "5940:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:13",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:13"
																									},
																									"nativeSrc": "6149:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:13",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:13"
																							},
																							"nativeSrc": "6145:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:13"
																					},
																					"nativeSrc": "6132:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:13"
																				},
																				"nativeSrc": "6132:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:13"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:13",
																	"nodeType": "YulCase",
																	"src": "5560:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:13",
																		"nodeType": "YulBlock",
																		"src": "6195:222:13",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:13",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:13",
																					"nodeType": "YulBlock",
																					"src": "6246:67:13",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:13",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:13"
																										},
																										"nativeSrc": "6279:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:13"
																								},
																								"nativeSrc": "6273:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:13"
																				},
																				"nativeSrc": "6236:77:13",
																				"nodeType": "YulIf",
																				"src": "6236:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:13"
																							},
																							"nativeSrc": "6339:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:13"
																					},
																					"nativeSrc": "6326:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:13"
																				},
																				"nativeSrc": "6326:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:13"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:13",
																	"nodeType": "YulCase",
																	"src": "6187:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:13"
																},
																"nativeSrc": "5537:14:13",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:13"
															},
															"nativeSrc": "5530:887:13",
															"nodeType": "YulSwitch",
															"src": "5530:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:13",
														"nodeType": "YulTypedName",
														"src": "5109:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:13",
														"nodeType": "YulTypedName",
														"src": "5115:3:13",
														"type": ""
													}
												],
												"src": "5028:1395:13"
											},
											{
												"body": {
													"nativeSrc": "6494:53:13",
													"nodeType": "YulBlock",
													"src": "6494:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:13"
																		},
																		"nativeSrc": "6516:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:13"
																},
																"nativeSrc": "6504:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:13"
															},
															"nativeSrc": "6504:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:13",
														"nodeType": "YulTypedName",
														"src": "6482:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:13",
														"nodeType": "YulTypedName",
														"src": "6489:3:13",
														"type": ""
													}
												],
												"src": "6429:118:13"
											},
											{
												"body": {
													"nativeSrc": "6651:124:13",
													"nodeType": "YulBlock",
													"src": "6651:124:13",
													"statements": [
														{
															"nativeSrc": "6661:26:13",
															"nodeType": "YulAssignment",
															"src": "6661:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:13"
																},
																"nativeSrc": "6669:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:13"
																		},
																		"nativeSrc": "6750:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:13"
																},
																"nativeSrc": "6697:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:13"
															},
															"nativeSrc": "6697:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:13",
														"nodeType": "YulTypedName",
														"src": "6623:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:13",
														"nodeType": "YulTypedName",
														"src": "6635:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:13",
														"nodeType": "YulTypedName",
														"src": "6646:4:13",
														"type": ""
													}
												],
												"src": "6553:222:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051612e92380380612e9283398181016040528101906100319190610266565b806040518060400160405280600e81526020017f5469746c6544656564546f6b656e0000000000000000000000000000000000008152506040518060400160405280600381526020017f5444540000000000000000000000000000000000000000000000000000000000815250815f90816100ac91906104cb565b5080600190816100bc91906104cb565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361012f575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012691906105a9565b60405180910390fd5b61013e8161014560201b60201c565b50506105c2565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102358261020c565b9050919050565b6102458161022b565b811461024f575f80fd5b50565b5f815190506102608161023c565b92915050565b5f6020828403121561027b5761027a610208565b5b5f61028884828501610252565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061030c57607f821691505b60208210810361031f5761031e6102c8565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610346565b61038b8683610346565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6103cf6103ca6103c5846103a3565b6103ac565b6103a3565b9050919050565b5f819050919050565b6103e8836103b5565b6103fc6103f4826103d6565b848454610352565b825550505050565b5f90565b610410610404565b61041b8184846103df565b505050565b5b8181101561043e576104335f82610408565b600181019050610421565b5050565b601f8211156104835761045481610325565b61045d84610337565b8101602085101561046c578190505b61048061047885610337565b830182610420565b50505b505050565b5f82821c905092915050565b5f6104a35f1984600802610488565b1980831691505092915050565b5f6104bb8383610494565b9150826002028217905092915050565b6104d482610291565b67ffffffffffffffff8111156104ed576104ec61029b565b5b6104f782546102f5565b610502828285610442565b5f60209050601f831160018114610533575f8415610521578287015190505b61052b85826104b0565b865550610592565b601f19841661054186610325565b5f5b8281101561056857848901518255600182019150602085019450602081019050610543565b868310156105855784890151610581601f891682610494565b8355505b6001600288020188555050505b505050505050565b6105a38161022b565b82525050565b5f6020820190506105bc5f83018461059a565b92915050565b6128c3806105cf5f395ff3fe608060405234801561000f575f80fd5b5060043610610155575f3560e01c806375794a3c116100c1578063a22cb4651161007a578063a22cb465146103d5578063b88d4fde146103f1578063c87b56dd1461040d578063d7d0df2a1461043d578063e985e9c514610459578063f2fde38b1461048957610155565b806375794a3c146102ff5780637b47ec1a1461031d57806380964805146103395780638796ec86146103695780638da5cb5b1461039957806395d89b41146103b757610155565b806323b872dd1161011357806323b872dd146102415780633d02d0c91461025d57806342842e0e146102795780636352211e1461029557806370a08231146102c5578063715018a6146102f557610155565b8062923f9e1461015957806301ffc9a71461018957806306fdde03146101b9578063081812fc146101d7578063095ea7b3146102075780631fd8293f14610223575b5f80fd5b610173600480360381019061016e9190611d0c565b6104a5565b6040516101809190611d51565b60405180910390f35b6101a3600480360381019061019e9190611dbf565b6104e5565b6040516101b09190611d51565b60405180910390f35b6101c16105c6565b6040516101ce9190611e5a565b60405180910390f35b6101f160048036038101906101ec9190611d0c565b610655565b6040516101fe9190611eb9565b60405180910390f35b610221600480360381019061021c9190611efc565b610670565b005b61022b610686565b6040516102389190611eb9565b60405180910390f35b61025b60048036038101906102569190611f3a565b6106ab565b005b610277600480360381019061027291906120b6565b6107aa565b005b610293600480360381019061028e9190611f3a565b6107fd565b005b6102af60048036038101906102aa9190611d0c565b61081c565b6040516102bc9190611eb9565b60405180910390f35b6102df60048036038101906102da9190612110565b61082d565b6040516102ec919061214a565b60405180910390f35b6102fd6108e3565b005b6103076108f6565b604051610314919061214a565b60405180910390f35b61033760048036038101906103329190611d0c565b6108fc565b005b610353600480360381019061034e9190611d0c565b610974565b6040516103609190611e5a565b60405180910390f35b610383600480360381019061037e9190611d0c565b610a0f565b6040516103909190611e5a565b60405180910390f35b6103a1610af8565b6040516103ae9190611eb9565b60405180910390f35b6103bf610b20565b6040516103cc9190611e5a565b60405180910390f35b6103ef60048036038101906103ea919061218d565b610bb0565b005b61040b60048036038101906104069190612269565b610bc6565b005b61042760048036038101906104229190611d0c565b610be3565b6040516104349190611e5a565b60405180910390f35b61045760048036038101906104529190612110565b610c49565b005b610473600480360381019061046e91906122e9565b610c8c565b6040516104809190611d51565b60405180910390f35b6104a3600480360381019061049e9190612110565b610d1a565b005b5f8073ffffffffffffffffffffffffffffffffffffffff166104c68361081c565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105af57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806105bf57506105be82610d9e565b5b9050919050565b60605f80546105d490612354565b80601f016020809104026020016040519081016040528092919081815260200182805461060090612354565b801561064b5780601f106106225761010080835404028352916020019161064b565b820191905f5260205f20905b81548152906001019060200180831161062e57829003601f168201915b5050505050905090565b5f61065f82610e07565b5061066982610e8d565b9050919050565b610682828261067d610ec6565b610ecd565b5050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361071b575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016107129190611eb9565b60405180910390fd5b5f61072e8383610729610ec6565b610edf565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107a4578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161079b93929190612384565b60405180910390fd5b50505050565b6107b26110ea565b5f600754905060075f8154809291906107ca906123e6565b91905055506107d98382611171565b8160085f8381526020019081526020015f2090816107f791906125ca565b50505050565b61081783838360405180602001604052805f815250610bc6565b505050565b5f61082682610e07565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361089e575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016108959190611eb9565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6108eb6110ea565b6108f45f611264565b565b60075481565b6109046110ea565b61090d816104a5565b61094c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610943906126e3565b60405180910390fd5b61095581611327565b60085f8281526020019081526020015f205f6109719190611c70565b50565b6008602052805f5260405f205f91509050805461099090612354565b80601f01602080910402602001604051908101604052809291908181526020018280546109bc90612354565b8015610a075780601f106109de57610100808354040283529160200191610a07565b820191905f5260205f20905b8154815290600101906020018083116109ea57829003601f168201915b505050505081565b6060610a1a826104a5565b610a59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a50906126e3565b60405180910390fd5b60085f8381526020019081526020015f208054610a7590612354565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa190612354565b8015610aec5780601f10610ac357610100808354040283529160200191610aec565b820191905f5260205f20905b815481529060010190602001808311610acf57829003601f168201915b50505050509050919050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060018054610b2f90612354565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5b90612354565b8015610ba65780601f10610b7d57610100808354040283529160200191610ba6565b820191905f5260205f20905b815481529060010190602001808311610b8957829003601f168201915b5050505050905090565b610bc2610bbb610ec6565b83836113a9565b5050565b610bd18484846106ab565b610bdd84848484611512565b50505050565b6060610bee82610e07565b505f610bf86116c4565b90505f815111610c165760405180602001604052805f815250610c41565b80610c20846116da565b604051602001610c3192919061273b565b6040516020818303038152906040525b915050919050565b8060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610d226110ea565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d92575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d899190611eb9565b60405180910390fd5b610d9b81611264565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610e12836117a4565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e8457826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610e7b919061214a565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610eda83838360016117dd565b505050565b5f80610eea846117a4565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610f2b57610f2a81848661199c565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610fb657610f6a5f855f806117dd565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461103557600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6110f2610ec6565b73ffffffffffffffffffffffffffffffffffffffff16611110610af8565b73ffffffffffffffffffffffffffffffffffffffff161461116f57611133610ec6565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111669190611eb9565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111e1575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111d89190611eb9565b60405180910390fd5b5f6111ed83835f610edf565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461125f575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016112569190611eb9565b60405180910390fd5b505050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6113335f835f610edf565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036113a557816040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161139c919061214a565b60405180910390fd5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361141957816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016114109190611eb9565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516115059190611d51565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156116be578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611555610ec6565b8685856040518563ffffffff1660e01b815260040161157794939291906127b0565b6020604051808303815f875af19250505080156115b257506040513d601f19601f820116820180604052508101906115af919061280e565b60015b611633573d805f81146115e0576040519150601f19603f3d011682016040523d82523d5f602084013e6115e5565b606091505b505f81510361162b57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016116229190611eb9565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146116bc57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016116b39190611eb9565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f60016116e884611a5f565b0190505f8167ffffffffffffffff81111561170657611705611f92565b5b6040519080825280601f01601f1916602001820160405280156117385781602001600182028036833780820191505090505b5090505f82602001820190505b600115611799578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161178e5761178d612839565b5b0494505f8503611745575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061181557505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611947575f61182484610e07565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561188e57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156118a1575061189f8184610c8c565b155b156118e357826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016118da9190611eb9565b60405180910390fd5b811561194557838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6119a7838383611bb0565b611a5a575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a1b57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611a12919061214a565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611a51929190612866565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611abb577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611ab157611ab0612839565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611af8576d04ee2d6d415b85acef81000000008381611aee57611aed612839565b5b0492506020810190505b662386f26fc100008310611b2757662386f26fc100008381611b1d57611b1c612839565b5b0492506010810190505b6305f5e1008310611b50576305f5e1008381611b4657611b45612839565b5b0492506008810190505b6127108310611b75576127108381611b6b57611b6a612839565b5b0492506004810190505b60648310611b985760648381611b8e57611b8d612839565b5b0492506002810190505b600a8310611ba7576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611c6757508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611c285750611c278484610c8c565b5b80611c6657508273ffffffffffffffffffffffffffffffffffffffff16611c4e83610e8d565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b508054611c7c90612354565b5f825580601f10611c8d5750611caa565b601f0160209004905f5260205f2090810190611ca99190611cad565b5b50565b5b80821115611cc4575f815f905550600101611cae565b5090565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b611ceb81611cd9565b8114611cf5575f80fd5b50565b5f81359050611d0681611ce2565b92915050565b5f60208284031215611d2157611d20611cd1565b5b5f611d2e84828501611cf8565b91505092915050565b5f8115159050919050565b611d4b81611d37565b82525050565b5f602082019050611d645f830184611d42565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611d9e81611d6a565b8114611da8575f80fd5b50565b5f81359050611db981611d95565b92915050565b5f60208284031215611dd457611dd3611cd1565b5b5f611de184828501611dab565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611e2c82611dea565b611e368185611df4565b9350611e46818560208601611e04565b611e4f81611e12565b840191505092915050565b5f6020820190508181035f830152611e728184611e22565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ea382611e7a565b9050919050565b611eb381611e99565b82525050565b5f602082019050611ecc5f830184611eaa565b92915050565b611edb81611e99565b8114611ee5575f80fd5b50565b5f81359050611ef681611ed2565b92915050565b5f8060408385031215611f1257611f11611cd1565b5b5f611f1f85828601611ee8565b9250506020611f3085828601611cf8565b9150509250929050565b5f805f60608486031215611f5157611f50611cd1565b5b5f611f5e86828701611ee8565b9350506020611f6f86828701611ee8565b9250506040611f8086828701611cf8565b9150509250925092565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611fc882611e12565b810181811067ffffffffffffffff82111715611fe757611fe6611f92565b5b80604052505050565b5f611ff9611cc8565b90506120058282611fbf565b919050565b5f67ffffffffffffffff82111561202457612023611f92565b5b61202d82611e12565b9050602081019050919050565b828183375f83830152505050565b5f61205a6120558461200a565b611ff0565b90508281526020810184848401111561207657612075611f8e565b5b61208184828561203a565b509392505050565b5f82601f83011261209d5761209c611f8a565b5b81356120ad848260208601612048565b91505092915050565b5f80604083850312156120cc576120cb611cd1565b5b5f6120d985828601611ee8565b925050602083013567ffffffffffffffff8111156120fa576120f9611cd5565b5b61210685828601612089565b9150509250929050565b5f6020828403121561212557612124611cd1565b5b5f61213284828501611ee8565b91505092915050565b61214481611cd9565b82525050565b5f60208201905061215d5f83018461213b565b92915050565b61216c81611d37565b8114612176575f80fd5b50565b5f8135905061218781612163565b92915050565b5f80604083850312156121a3576121a2611cd1565b5b5f6121b085828601611ee8565b92505060206121c185828601612179565b9150509250929050565b5f67ffffffffffffffff8211156121e5576121e4611f92565b5b6121ee82611e12565b9050602081019050919050565b5f61220d612208846121cb565b611ff0565b90508281526020810184848401111561222957612228611f8e565b5b61223484828561203a565b509392505050565b5f82601f8301126122505761224f611f8a565b5b81356122608482602086016121fb565b91505092915050565b5f805f806080858703121561228157612280611cd1565b5b5f61228e87828801611ee8565b945050602061229f87828801611ee8565b93505060406122b087828801611cf8565b925050606085013567ffffffffffffffff8111156122d1576122d0611cd5565b5b6122dd8782880161223c565b91505092959194509250565b5f80604083850312156122ff576122fe611cd1565b5b5f61230c85828601611ee8565b925050602061231d85828601611ee8565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061236b57607f821691505b60208210810361237e5761237d612327565b5b50919050565b5f6060820190506123975f830186611eaa565b6123a4602083018561213b565b6123b16040830184611eaa565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6123f082611cd9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612422576124216123b9565b5b600182019050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026124897fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261244e565b612493868361244e565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6124ce6124c96124c484611cd9565b6124ab565b611cd9565b9050919050565b5f819050919050565b6124e7836124b4565b6124fb6124f3826124d5565b84845461245a565b825550505050565b5f90565b61250f612503565b61251a8184846124de565b505050565b5b8181101561253d576125325f82612507565b600181019050612520565b5050565b601f821115612582576125538161242d565b61255c8461243f565b8101602085101561256b578190505b61257f6125778561243f565b83018261251f565b50505b505050565b5f82821c905092915050565b5f6125a25f1984600802612587565b1980831691505092915050565b5f6125ba8383612593565b9150826002028217905092915050565b6125d382611dea565b67ffffffffffffffff8111156125ec576125eb611f92565b5b6125f68254612354565b612601828285612541565b5f60209050601f831160018114612632575f8415612620578287015190505b61262a85826125af565b865550612691565b601f1984166126408661242d565b5f5b8281101561266757848901518255600182019150602085019450602081019050612642565b868310156126845784890151612680601f891682612593565b8355505b6001600288020188555050505b505050505050565b7f546f6b656e20646f6573206e6f742065786973740000000000000000000000005f82015250565b5f6126cd601483611df4565b91506126d882612699565b602082019050919050565b5f6020820190508181035f8301526126fa816126c1565b9050919050565b5f81905092915050565b5f61271582611dea565b61271f8185612701565b935061272f818560208601611e04565b80840191505092915050565b5f612746828561270b565b9150612752828461270b565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6127828261275e565b61278c8185612768565b935061279c818560208601611e04565b6127a581611e12565b840191505092915050565b5f6080820190506127c35f830187611eaa565b6127d06020830186611eaa565b6127dd604083018561213b565b81810360608301526127ef8184612778565b905095945050505050565b5f8151905061280881611d95565b92915050565b5f6020828403121561282357612822611cd1565b5b5f612830848285016127fa565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506128795f830185611eaa565b612886602083018461213b565b939250505056fea2646970667358221220f5586614243f435031b88e189209f3dc3ac66d0e3b3f1f292690787d80cb7ccf64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2E92 CODESIZE SUB DUP1 PUSH2 0x2E92 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x266 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5469746C6544656564546F6B656E000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5444540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x4CB JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x4CB JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13E DUP2 PUSH2 0x145 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x5C2 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x235 DUP3 PUSH2 0x20C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x245 DUP2 PUSH2 0x22B JUMP JUMPDEST DUP2 EQ PUSH2 0x24F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x260 DUP2 PUSH2 0x23C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27B JUMPI PUSH2 0x27A PUSH2 0x208 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x288 DUP5 DUP3 DUP6 ADD PUSH2 0x252 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x30C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x31F JUMPI PUSH2 0x31E PUSH2 0x2C8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x381 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x346 JUMP JUMPDEST PUSH2 0x38B DUP7 DUP4 PUSH2 0x346 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3CF PUSH2 0x3CA PUSH2 0x3C5 DUP5 PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E8 DUP4 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x3FC PUSH2 0x3F4 DUP3 PUSH2 0x3D6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x352 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x410 PUSH2 0x404 JUMP JUMPDEST PUSH2 0x41B DUP2 DUP5 DUP5 PUSH2 0x3DF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x43E JUMPI PUSH2 0x433 PUSH0 DUP3 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x421 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x483 JUMPI PUSH2 0x454 DUP2 PUSH2 0x325 JUMP JUMPDEST PUSH2 0x45D DUP5 PUSH2 0x337 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x46C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x480 PUSH2 0x478 DUP6 PUSH2 0x337 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x420 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A3 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x488 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4BB DUP4 DUP4 PUSH2 0x494 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4D4 DUP3 PUSH2 0x291 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4ED JUMPI PUSH2 0x4EC PUSH2 0x29B JUMP JUMPDEST JUMPDEST PUSH2 0x4F7 DUP3 SLOAD PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0x502 DUP3 DUP3 DUP6 PUSH2 0x442 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x533 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x521 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x52B DUP6 DUP3 PUSH2 0x4B0 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x592 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x541 DUP7 PUSH2 0x325 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x568 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x543 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x585 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x581 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x494 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5A3 DUP2 PUSH2 0x22B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5BC PUSH0 DUP4 ADD DUP5 PUSH2 0x59A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28C3 DUP1 PUSH2 0x5CF PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x155 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75794A3C GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0xD7D0DF2A EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x489 JUMPI PUSH2 0x155 JUMP JUMPDEST DUP1 PUSH4 0x75794A3C EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x7B47EC1A EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x80964805 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x8796EC86 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3B7 JUMPI PUSH2 0x155 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x3D02D0C9 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2F5 JUMPI PUSH2 0x155 JUMP JUMPDEST DUP1 PUSH3 0x923F9E EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x1FD8293F EQ PUSH2 0x223 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x1D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1DBF JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x1D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH2 0x5C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x1E5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x670 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22B PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x20B6 JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0x82D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x214A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0x8E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x307 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x214A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x337 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x8FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x353 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x974 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1E5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x1E5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A1 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BF PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x1E5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH2 0xBB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x2269 JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x427 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x1E5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x457 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0xC49 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x473 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x1D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0xD1A JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4C6 DUP4 PUSH2 0x81C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x5AF JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x5BF JUMPI POP PUSH2 0x5BE DUP3 PUSH2 0xD9E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x5D4 SWAP1 PUSH2 0x2354 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x600 SWAP1 PUSH2 0x2354 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x64B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x622 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x64B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x62E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x65F DUP3 PUSH2 0xE07 JUMP JUMPDEST POP PUSH2 0x669 DUP3 PUSH2 0xE8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x682 DUP3 DUP3 PUSH2 0x67D PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0xECD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x71B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x712 SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x72E DUP4 DUP4 PUSH2 0x729 PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0xEDF JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A4 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7B2 PUSH2 0x10EA JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x7CA SWAP1 PUSH2 0x23E6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x7D9 DUP4 DUP3 PUSH2 0x1171 JUMP JUMPDEST DUP2 PUSH1 0x8 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x7F7 SWAP2 SWAP1 PUSH2 0x25CA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x817 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xBC6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x826 DUP3 PUSH2 0xE07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x895 SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EB PUSH2 0x10EA JUMP JUMPDEST PUSH2 0x8F4 PUSH0 PUSH2 0x1264 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x904 PUSH2 0x10EA JUMP JUMPDEST PUSH2 0x90D DUP2 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x94C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x943 SWAP1 PUSH2 0x26E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x955 DUP2 PUSH2 0x1327 JUMP JUMPDEST PUSH1 0x8 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x971 SWAP2 SWAP1 PUSH2 0x1C70 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x990 SWAP1 PUSH2 0x2354 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9BC SWAP1 PUSH2 0x2354 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA07 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9DE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA07 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9EA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA1A DUP3 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0xA59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA50 SWAP1 PUSH2 0x26E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xA75 SWAP1 PUSH2 0x2354 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAA1 SWAP1 PUSH2 0x2354 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAEC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAC3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAEC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xACF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xB2F SWAP1 PUSH2 0x2354 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB5B SWAP1 PUSH2 0x2354 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBA6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB7D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBA6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB89 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBC2 PUSH2 0xBBB PUSH2 0xEC6 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x13A9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBD1 DUP5 DUP5 DUP5 PUSH2 0x6AB JUMP JUMPDEST PUSH2 0xBDD DUP5 DUP5 DUP5 DUP5 PUSH2 0x1512 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBEE DUP3 PUSH2 0xE07 JUMP JUMPDEST POP PUSH0 PUSH2 0xBF8 PUSH2 0x16C4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xC16 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xC41 JUMP JUMPDEST DUP1 PUSH2 0xC20 DUP5 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC31 SWAP3 SWAP2 SWAP1 PUSH2 0x273B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD22 PUSH2 0x10EA JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD92 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD89 SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD9B DUP2 PUSH2 0x1264 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE12 DUP4 PUSH2 0x17A4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE84 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7B SWAP2 SWAP1 PUSH2 0x214A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEDA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x17DD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xEEA DUP5 PUSH2 0x17A4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF2B JUMPI PUSH2 0xF2A DUP2 DUP5 DUP7 PUSH2 0x199C JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFB6 JUMPI PUSH2 0xF6A PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1035 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x10F2 PUSH2 0xEC6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1110 PUSH2 0xAF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x116F JUMPI PUSH2 0x1133 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1166 SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11E1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D8 SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x11ED DUP4 DUP4 PUSH0 PUSH2 0xEDF JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x125F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1256 SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1333 PUSH0 DUP4 PUSH0 PUSH2 0xEDF JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13A5 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139C SWAP2 SWAP1 PUSH2 0x214A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1419 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1410 SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1505 SWAP2 SWAP1 PUSH2 0x1D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x16BE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1555 PUSH2 0xEC6 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1577 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27B0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15B2 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15AF SWAP2 SWAP1 PUSH2 0x280E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1633 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x15E0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15E5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x162B JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1622 SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x16BC JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B3 SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x16E8 DUP5 PUSH2 0x1A5F JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1706 JUMPI PUSH2 0x1705 PUSH2 0x1F92 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1738 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1799 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x178E JUMPI PUSH2 0x178D PUSH2 0x2839 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1745 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1815 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1947 JUMPI PUSH0 PUSH2 0x1824 DUP5 PUSH2 0xE07 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x188E JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x18A1 JUMPI POP PUSH2 0x189F DUP2 DUP5 PUSH2 0xC8C JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x18E3 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18DA SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1945 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x19A7 DUP4 DUP4 DUP4 PUSH2 0x1BB0 JUMP JUMPDEST PUSH2 0x1A5A JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A1B JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A12 SWAP2 SWAP1 PUSH2 0x214A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A51 SWAP3 SWAP2 SWAP1 PUSH2 0x2866 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1ABB JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1AB1 JUMPI PUSH2 0x1AB0 PUSH2 0x2839 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1AF8 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1AEE JUMPI PUSH2 0x1AED PUSH2 0x2839 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1B27 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1B1D JUMPI PUSH2 0x1B1C PUSH2 0x2839 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1B50 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1B46 JUMPI PUSH2 0x1B45 PUSH2 0x2839 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1B75 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1B6B JUMPI PUSH2 0x1B6A PUSH2 0x2839 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1B98 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1B8E JUMPI PUSH2 0x1B8D PUSH2 0x2839 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1BA7 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1C67 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1C28 JUMPI POP PUSH2 0x1C27 DUP5 DUP5 PUSH2 0xC8C JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1C66 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C4E DUP4 PUSH2 0xE8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x1C7C SWAP1 PUSH2 0x2354 JUMP JUMPDEST PUSH0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1C8D JUMPI POP PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1CA9 SWAP2 SWAP1 PUSH2 0x1CAD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1CC4 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1CAE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CEB DUP2 PUSH2 0x1CD9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D06 DUP2 PUSH2 0x1CE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D21 JUMPI PUSH2 0x1D20 PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D2E DUP5 DUP3 DUP6 ADD PUSH2 0x1CF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D4B DUP2 PUSH2 0x1D37 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D64 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D42 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D9E DUP2 PUSH2 0x1D6A JUMP JUMPDEST DUP2 EQ PUSH2 0x1DA8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DB9 DUP2 PUSH2 0x1D95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DD4 JUMPI PUSH2 0x1DD3 PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE1 DUP5 DUP3 DUP6 ADD PUSH2 0x1DAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E2C DUP3 PUSH2 0x1DEA JUMP JUMPDEST PUSH2 0x1E36 DUP2 DUP6 PUSH2 0x1DF4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E46 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E04 JUMP JUMPDEST PUSH2 0x1E4F DUP2 PUSH2 0x1E12 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E72 DUP2 DUP5 PUSH2 0x1E22 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA3 DUP3 PUSH2 0x1E7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EB3 DUP2 PUSH2 0x1E99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ECC PUSH0 DUP4 ADD DUP5 PUSH2 0x1EAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EDB DUP2 PUSH2 0x1E99 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EE5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EF6 DUP2 PUSH2 0x1ED2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F12 JUMPI PUSH2 0x1F11 PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F1F DUP6 DUP3 DUP7 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F30 DUP6 DUP3 DUP7 ADD PUSH2 0x1CF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F51 JUMPI PUSH2 0x1F50 PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F5E DUP7 DUP3 DUP8 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F6F DUP7 DUP3 DUP8 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F80 DUP7 DUP3 DUP8 ADD PUSH2 0x1CF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1FC8 DUP3 PUSH2 0x1E12 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FE7 JUMPI PUSH2 0x1FE6 PUSH2 0x1F92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF9 PUSH2 0x1CC8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2005 DUP3 DUP3 PUSH2 0x1FBF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2024 JUMPI PUSH2 0x2023 PUSH2 0x1F92 JUMP JUMPDEST JUMPDEST PUSH2 0x202D DUP3 PUSH2 0x1E12 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x205A PUSH2 0x2055 DUP5 PUSH2 0x200A JUMP JUMPDEST PUSH2 0x1FF0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2076 JUMPI PUSH2 0x2075 PUSH2 0x1F8E JUMP JUMPDEST JUMPDEST PUSH2 0x2081 DUP5 DUP3 DUP6 PUSH2 0x203A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x209D JUMPI PUSH2 0x209C PUSH2 0x1F8A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20AD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2048 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20CC JUMPI PUSH2 0x20CB PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20D9 DUP6 DUP3 DUP7 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20FA JUMPI PUSH2 0x20F9 PUSH2 0x1CD5 JUMP JUMPDEST JUMPDEST PUSH2 0x2106 DUP6 DUP3 DUP7 ADD PUSH2 0x2089 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2125 JUMPI PUSH2 0x2124 PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2132 DUP5 DUP3 DUP6 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2144 DUP2 PUSH2 0x1CD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x215D PUSH0 DUP4 ADD DUP5 PUSH2 0x213B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x216C DUP2 PUSH2 0x1D37 JUMP JUMPDEST DUP2 EQ PUSH2 0x2176 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2187 DUP2 PUSH2 0x2163 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21A3 JUMPI PUSH2 0x21A2 PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21B0 DUP6 DUP3 DUP7 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21C1 DUP6 DUP3 DUP7 ADD PUSH2 0x2179 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21E5 JUMPI PUSH2 0x21E4 PUSH2 0x1F92 JUMP JUMPDEST JUMPDEST PUSH2 0x21EE DUP3 PUSH2 0x1E12 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x220D PUSH2 0x2208 DUP5 PUSH2 0x21CB JUMP JUMPDEST PUSH2 0x1FF0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2229 JUMPI PUSH2 0x2228 PUSH2 0x1F8E JUMP JUMPDEST JUMPDEST PUSH2 0x2234 DUP5 DUP3 DUP6 PUSH2 0x203A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2250 JUMPI PUSH2 0x224F PUSH2 0x1F8A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2260 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2281 JUMPI PUSH2 0x2280 PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x228E DUP8 DUP3 DUP9 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x229F DUP8 DUP3 DUP9 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x22B0 DUP8 DUP3 DUP9 ADD PUSH2 0x1CF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22D1 JUMPI PUSH2 0x22D0 PUSH2 0x1CD5 JUMP JUMPDEST JUMPDEST PUSH2 0x22DD DUP8 DUP3 DUP9 ADD PUSH2 0x223C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22FF JUMPI PUSH2 0x22FE PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x230C DUP6 DUP3 DUP7 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x231D DUP6 DUP3 DUP7 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x236B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x237E JUMPI PUSH2 0x237D PUSH2 0x2327 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2397 PUSH0 DUP4 ADD DUP7 PUSH2 0x1EAA JUMP JUMPDEST PUSH2 0x23A4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x213B JUMP JUMPDEST PUSH2 0x23B1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1EAA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x23F0 DUP3 PUSH2 0x1CD9 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2422 JUMPI PUSH2 0x2421 PUSH2 0x23B9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2489 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x244E JUMP JUMPDEST PUSH2 0x2493 DUP7 DUP4 PUSH2 0x244E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24CE PUSH2 0x24C9 PUSH2 0x24C4 DUP5 PUSH2 0x1CD9 JUMP JUMPDEST PUSH2 0x24AB JUMP JUMPDEST PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24E7 DUP4 PUSH2 0x24B4 JUMP JUMPDEST PUSH2 0x24FB PUSH2 0x24F3 DUP3 PUSH2 0x24D5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x245A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x250F PUSH2 0x2503 JUMP JUMPDEST PUSH2 0x251A DUP2 DUP5 DUP5 PUSH2 0x24DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x253D JUMPI PUSH2 0x2532 PUSH0 DUP3 PUSH2 0x2507 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2520 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2582 JUMPI PUSH2 0x2553 DUP2 PUSH2 0x242D JUMP JUMPDEST PUSH2 0x255C DUP5 PUSH2 0x243F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x256B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x257F PUSH2 0x2577 DUP6 PUSH2 0x243F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x251F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25A2 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2587 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25BA DUP4 DUP4 PUSH2 0x2593 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25D3 DUP3 PUSH2 0x1DEA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25EC JUMPI PUSH2 0x25EB PUSH2 0x1F92 JUMP JUMPDEST JUMPDEST PUSH2 0x25F6 DUP3 SLOAD PUSH2 0x2354 JUMP JUMPDEST PUSH2 0x2601 DUP3 DUP3 DUP6 PUSH2 0x2541 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2632 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2620 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x262A DUP6 DUP3 PUSH2 0x25AF JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2691 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2640 DUP7 PUSH2 0x242D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2667 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2642 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2684 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2680 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2593 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20646F6573206E6F74206578697374000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26CD PUSH1 0x14 DUP4 PUSH2 0x1DF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x26D8 DUP3 PUSH2 0x2699 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26FA DUP2 PUSH2 0x26C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2715 DUP3 PUSH2 0x1DEA JUMP JUMPDEST PUSH2 0x271F DUP2 DUP6 PUSH2 0x2701 JUMP JUMPDEST SWAP4 POP PUSH2 0x272F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E04 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2746 DUP3 DUP6 PUSH2 0x270B JUMP JUMPDEST SWAP2 POP PUSH2 0x2752 DUP3 DUP5 PUSH2 0x270B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2782 DUP3 PUSH2 0x275E JUMP JUMPDEST PUSH2 0x278C DUP2 DUP6 PUSH2 0x2768 JUMP JUMPDEST SWAP4 POP PUSH2 0x279C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E04 JUMP JUMPDEST PUSH2 0x27A5 DUP2 PUSH2 0x1E12 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x27C3 PUSH0 DUP4 ADD DUP8 PUSH2 0x1EAA JUMP JUMPDEST PUSH2 0x27D0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1EAA JUMP JUMPDEST PUSH2 0x27DD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x213B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x27EF DUP2 DUP5 PUSH2 0x2778 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2808 DUP2 PUSH2 0x1D95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2823 JUMPI PUSH2 0x2822 PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2830 DUP5 DUP3 DUP6 ADD PUSH2 0x27FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2879 PUSH0 DUP4 ADD DUP6 PUSH2 0x1EAA JUMP JUMPDEST PUSH2 0x2886 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x213B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PC PUSH7 0x14243F435031B8 DUP15 XOR SWAP3 MULMOD RETURN 0xDC GASPRICE 0xC6 PUSH14 0xE3B3F1F292690787D80CB7CCF64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "176:1450:12:-:0;;;365:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;439:12;1419:116:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1494:5;1486;:13;;;;;;:::i;:::-;;1520:7;1510;:17;;;;;;:::i;:::-;;1419:116;;1335:1:0;1311:26;;:12;:26;;;1307:97;;1389:1;1361:31;;;;;;;;;;;:::i;:::-;;;;;;;;1307:97;1414:32;1433:12;1414:18;;;:32;;:::i;:::-;1262:192;365:170:12;176:1450;;3006:191:0;3080:16;3099:6;;;;;;;;;;;3080:25;;3125:8;3116:6;;:17;;;;;;;;;;;;;;;;;;3180:8;3149:40;;3170:8;3149:40;;;;;;;;;;;;3069:128;3006:191;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;176:1450:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1096": {
									"entryPoint": 3789,
									"id": 1096,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1162": {
									"entryPoint": 6109,
									"id": 1162,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_489": {
									"entryPoint": 5828,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_burn_974": {
									"entryPoint": 4903,
									"id": 974,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkAuthorized_744": {
									"entryPoint": 6556,
									"id": 744,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1292": {
									"entryPoint": 5394,
									"id": 1292,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4330,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_671": {
									"entryPoint": 3725,
									"id": 671,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_707": {
									"entryPoint": 7088,
									"id": 707,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_900": {
									"entryPoint": 4465,
									"id": 900,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1468": {
									"entryPoint": 3782,
									"id": 1468,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_658": {
									"entryPoint": 6052,
									"id": 658,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1228": {
									"entryPoint": 3591,
									"id": 1228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1199": {
									"entryPoint": 5033,
									"id": 1199,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4708,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_850": {
									"entryPoint": 3807,
									"id": 850,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_505": {
									"entryPoint": 1648,
									"id": 505,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_413": {
									"entryPoint": 2093,
									"id": 413,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnToken_3064": {
									"entryPoint": 2300,
									"id": 3064,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@connectWallet_2975": {
									"entryPoint": 3145,
									"id": 2975,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@connectedWallet_2952": {
									"entryPoint": 1670,
									"id": 2952,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getApproved_522": {
									"entryPoint": 1621,
									"id": 522,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getDocumentHash_3040": {
									"entryPoint": 2575,
									"id": 3040,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_555": {
									"entryPoint": 3212,
									"id": 555,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2651": {
									"entryPoint": 6751,
									"id": 2651,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintToken_3003": {
									"entryPoint": 1962,
									"id": 3003,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_435": {
									"entryPoint": 1478,
									"id": 435,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nextTokenId_2946": {
									"entryPoint": 2294,
									"id": 2946,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOf_426": {
									"entryPoint": 2076,
									"id": 426,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2808,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2275,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_619": {
									"entryPoint": 2045,
									"id": 619,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_645": {
									"entryPoint": 3014,
									"id": 645,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_538": {
									"entryPoint": 2992,
									"id": 538,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1764": {
									"entryPoint": 3486,
									"id": 1764,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_385": {
									"entryPoint": 1253,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_444": {
									"entryPoint": 2848,
									"id": 444,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1554": {
									"entryPoint": 5850,
									"id": 1554,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenDocumentHashes_2950": {
									"entryPoint": 2420,
									"id": 2950,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenExists_3021": {
									"entryPoint": 1189,
									"id": 3021,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_480": {
									"entryPoint": 3043,
									"id": 480,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_601": {
									"entryPoint": 1707,
									"id": 601,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3354,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 8699,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8264,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 10234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 8764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 8374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10043,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10160,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10342,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 9092,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7368,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 9537,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 9503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8250,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7684,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 9647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 9619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9145,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10297,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8999,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8082,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8074,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8078,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7381,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7377,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 9607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 9479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726": {
									"entryPoint": 9881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9306,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9438,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 9475,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:22147:13",
										"nodeType": "YulBlock",
										"src": "0:22147:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:32:13",
													"nodeType": "YulBlock",
													"src": "379:32:13",
													"statements": [
														{
															"nativeSrc": "389:16:13",
															"nodeType": "YulAssignment",
															"src": "389:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:13",
																"nodeType": "YulIdentifier",
																"src": "400:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:77:13"
											},
											{
												"body": {
													"nativeSrc": "460:79:13",
													"nodeType": "YulBlock",
													"src": "460:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:13",
																"nodeType": "YulBlock",
																"src": "517:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:13",
																					"nodeType": "YulLiteral",
																					"src": "526:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:13",
																					"nodeType": "YulLiteral",
																					"src": "529:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:13"
																			},
																			"nativeSrc": "519:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:13"
																		},
																		"nativeSrc": "519:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:13"
																				},
																				"nativeSrc": "490:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:13"
																		},
																		"nativeSrc": "480:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:13"
																},
																"nativeSrc": "473:43:13",
																"nodeType": "YulFunctionCall",
																"src": "473:43:13"
															},
															"nativeSrc": "470:63:13",
															"nodeType": "YulIf",
															"src": "470:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:13",
														"nodeType": "YulTypedName",
														"src": "453:5:13",
														"type": ""
													}
												],
												"src": "417:122:13"
											},
											{
												"body": {
													"nativeSrc": "597:87:13",
													"nodeType": "YulBlock",
													"src": "597:87:13",
													"statements": [
														{
															"nativeSrc": "607:29:13",
															"nodeType": "YulAssignment",
															"src": "607:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:13"
																},
																"nativeSrc": "616:20:13",
																"nodeType": "YulFunctionCall",
																"src": "616:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:13"
																},
																"nativeSrc": "645:33:13",
																"nodeType": "YulFunctionCall",
																"src": "645:33:13"
															},
															"nativeSrc": "645:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:13",
														"nodeType": "YulTypedName",
														"src": "575:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:13",
														"nodeType": "YulTypedName",
														"src": "583:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:13",
														"nodeType": "YulTypedName",
														"src": "591:5:13",
														"type": ""
													}
												],
												"src": "545:139:13"
											},
											{
												"body": {
													"nativeSrc": "756:263:13",
													"nodeType": "YulBlock",
													"src": "756:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:13",
																"nodeType": "YulBlock",
																"src": "802:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:13"
																			},
																			"nativeSrc": "804:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:13"
																		},
																		"nativeSrc": "804:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:13"
																		},
																		"nativeSrc": "773:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:13",
																		"nodeType": "YulLiteral",
																		"src": "798:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:13"
																},
																"nativeSrc": "769:32:13",
																"nodeType": "YulFunctionCall",
																"src": "769:32:13"
															},
															"nativeSrc": "766:119:13",
															"nodeType": "YulIf",
															"src": "766:119:13"
														},
														{
															"nativeSrc": "895:117:13",
															"nodeType": "YulBlock",
															"src": "895:117:13",
															"statements": [
																{
																	"nativeSrc": "910:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:13",
																		"nodeType": "YulLiteral",
																		"src": "924:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:13",
																			"nodeType": "YulTypedName",
																			"src": "914:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:13",
																	"nodeType": "YulAssignment",
																	"src": "939:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:13"
																				},
																				"nativeSrc": "970:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:13"
																		},
																		"nativeSrc": "949:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:13",
														"nodeType": "YulTypedName",
														"src": "726:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:13",
														"nodeType": "YulTypedName",
														"src": "737:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:13",
														"nodeType": "YulTypedName",
														"src": "749:6:13",
														"type": ""
													}
												],
												"src": "690:329:13"
											},
											{
												"body": {
													"nativeSrc": "1067:48:13",
													"nodeType": "YulBlock",
													"src": "1067:48:13",
													"statements": [
														{
															"nativeSrc": "1077:32:13",
															"nodeType": "YulAssignment",
															"src": "1077:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1102:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1102:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1095:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1095:6:13"
																		},
																		"nativeSrc": "1095:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1095:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1088:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1088:6:13"
																},
																"nativeSrc": "1088:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1088:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1077:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1077:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1025:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1049:5:13",
														"nodeType": "YulTypedName",
														"src": "1049:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1059:7:13",
														"nodeType": "YulTypedName",
														"src": "1059:7:13",
														"type": ""
													}
												],
												"src": "1025:90:13"
											},
											{
												"body": {
													"nativeSrc": "1180:50:13",
													"nodeType": "YulBlock",
													"src": "1180:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1197:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1197:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1217:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1217:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1202:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "1202:14:13"
																		},
																		"nativeSrc": "1202:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1202:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1190:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1190:6:13"
																},
																"nativeSrc": "1190:34:13",
																"nodeType": "YulFunctionCall",
																"src": "1190:34:13"
															},
															"nativeSrc": "1190:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "1190:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1121:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1168:5:13",
														"nodeType": "YulTypedName",
														"src": "1168:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1175:3:13",
														"nodeType": "YulTypedName",
														"src": "1175:3:13",
														"type": ""
													}
												],
												"src": "1121:109:13"
											},
											{
												"body": {
													"nativeSrc": "1328:118:13",
													"nodeType": "YulBlock",
													"src": "1328:118:13",
													"statements": [
														{
															"nativeSrc": "1338:26:13",
															"nodeType": "YulAssignment",
															"src": "1338:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1350:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1350:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1361:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1361:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1346:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:13"
																},
																"nativeSrc": "1346:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1346:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1338:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1338:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1412:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1412:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1425:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1425:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1436:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1436:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1421:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1421:3:13"
																		},
																		"nativeSrc": "1421:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1421:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1374:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "1374:37:13"
																},
																"nativeSrc": "1374:65:13",
																"nodeType": "YulFunctionCall",
																"src": "1374:65:13"
															},
															"nativeSrc": "1374:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "1374:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1236:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1300:9:13",
														"nodeType": "YulTypedName",
														"src": "1300:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1312:6:13",
														"nodeType": "YulTypedName",
														"src": "1312:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1323:4:13",
														"nodeType": "YulTypedName",
														"src": "1323:4:13",
														"type": ""
													}
												],
												"src": "1236:210:13"
											},
											{
												"body": {
													"nativeSrc": "1496:105:13",
													"nodeType": "YulBlock",
													"src": "1496:105:13",
													"statements": [
														{
															"nativeSrc": "1506:89:13",
															"nodeType": "YulAssignment",
															"src": "1506:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1521:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1521:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1528:66:13",
																		"nodeType": "YulLiteral",
																		"src": "1528:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1517:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1517:3:13"
																},
																"nativeSrc": "1517:78:13",
																"nodeType": "YulFunctionCall",
																"src": "1517:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1506:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1506:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "1452:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1478:5:13",
														"nodeType": "YulTypedName",
														"src": "1478:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1488:7:13",
														"nodeType": "YulTypedName",
														"src": "1488:7:13",
														"type": ""
													}
												],
												"src": "1452:149:13"
											},
											{
												"body": {
													"nativeSrc": "1649:78:13",
													"nodeType": "YulBlock",
													"src": "1649:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1705:16:13",
																"nodeType": "YulBlock",
																"src": "1705:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1714:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1714:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1717:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1717:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1707:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1707:6:13"
																			},
																			"nativeSrc": "1707:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1707:12:13"
																		},
																		"nativeSrc": "1707:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1707:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1672:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1672:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1696:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1696:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "1679:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "1679:16:13"
																				},
																				"nativeSrc": "1679:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1679:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1669:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1669:2:13"
																		},
																		"nativeSrc": "1669:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1669:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1662:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1662:6:13"
																},
																"nativeSrc": "1662:42:13",
																"nodeType": "YulFunctionCall",
																"src": "1662:42:13"
															},
															"nativeSrc": "1659:62:13",
															"nodeType": "YulIf",
															"src": "1659:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "1607:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1642:5:13",
														"nodeType": "YulTypedName",
														"src": "1642:5:13",
														"type": ""
													}
												],
												"src": "1607:120:13"
											},
											{
												"body": {
													"nativeSrc": "1784:86:13",
													"nodeType": "YulBlock",
													"src": "1784:86:13",
													"statements": [
														{
															"nativeSrc": "1794:29:13",
															"nodeType": "YulAssignment",
															"src": "1794:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1816:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1816:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1803:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1803:12:13"
																},
																"nativeSrc": "1803:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1803:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1794:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1794:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1858:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1858:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "1832:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "1832:25:13"
																},
																"nativeSrc": "1832:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1832:32:13"
															},
															"nativeSrc": "1832:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "1832:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "1733:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1762:6:13",
														"nodeType": "YulTypedName",
														"src": "1762:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1770:3:13",
														"nodeType": "YulTypedName",
														"src": "1770:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1778:5:13",
														"nodeType": "YulTypedName",
														"src": "1778:5:13",
														"type": ""
													}
												],
												"src": "1733:137:13"
											},
											{
												"body": {
													"nativeSrc": "1941:262:13",
													"nodeType": "YulBlock",
													"src": "1941:262:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1987:83:13",
																"nodeType": "YulBlock",
																"src": "1987:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1989:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1989:77:13"
																			},
																			"nativeSrc": "1989:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1989:79:13"
																		},
																		"nativeSrc": "1989:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1989:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1962:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1962:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1971:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1971:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1958:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1958:3:13"
																		},
																		"nativeSrc": "1958:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1958:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1983:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1983:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1954:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1954:3:13"
																},
																"nativeSrc": "1954:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1954:32:13"
															},
															"nativeSrc": "1951:119:13",
															"nodeType": "YulIf",
															"src": "1951:119:13"
														},
														{
															"nativeSrc": "2080:116:13",
															"nodeType": "YulBlock",
															"src": "2080:116:13",
															"statements": [
																{
																	"nativeSrc": "2095:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2095:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2109:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2109:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2099:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2099:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2124:62:13",
																	"nodeType": "YulAssignment",
																	"src": "2124:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:13"
																				},
																				"nativeSrc": "2154:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "2134:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "2134:19:13"
																		},
																		"nativeSrc": "2134:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2134:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2124:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2124:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "1876:327:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1911:9:13",
														"nodeType": "YulTypedName",
														"src": "1911:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1922:7:13",
														"nodeType": "YulTypedName",
														"src": "1922:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1934:6:13",
														"nodeType": "YulTypedName",
														"src": "1934:6:13",
														"type": ""
													}
												],
												"src": "1876:327:13"
											},
											{
												"body": {
													"nativeSrc": "2268:40:13",
													"nodeType": "YulBlock",
													"src": "2268:40:13",
													"statements": [
														{
															"nativeSrc": "2279:22:13",
															"nodeType": "YulAssignment",
															"src": "2279:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2295:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2295:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2289:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2289:5:13"
																},
																"nativeSrc": "2289:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2289:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2279:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2279:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2209:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2251:5:13",
														"nodeType": "YulTypedName",
														"src": "2251:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2261:6:13",
														"nodeType": "YulTypedName",
														"src": "2261:6:13",
														"type": ""
													}
												],
												"src": "2209:99:13"
											},
											{
												"body": {
													"nativeSrc": "2410:73:13",
													"nodeType": "YulBlock",
													"src": "2410:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2427:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2427:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2432:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2432:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2420:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:13"
																},
																"nativeSrc": "2420:19:13",
																"nodeType": "YulFunctionCall",
																"src": "2420:19:13"
															},
															"nativeSrc": "2420:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "2420:19:13"
														},
														{
															"nativeSrc": "2448:29:13",
															"nodeType": "YulAssignment",
															"src": "2448:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2467:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2467:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2472:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2472:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2463:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2463:3:13"
																},
																"nativeSrc": "2463:14:13",
																"nodeType": "YulFunctionCall",
																"src": "2463:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2448:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "2448:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2314:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2382:3:13",
														"nodeType": "YulTypedName",
														"src": "2382:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2387:6:13",
														"nodeType": "YulTypedName",
														"src": "2387:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2398:11:13",
														"nodeType": "YulTypedName",
														"src": "2398:11:13",
														"type": ""
													}
												],
												"src": "2314:169:13"
											},
											{
												"body": {
													"nativeSrc": "2551:77:13",
													"nodeType": "YulBlock",
													"src": "2551:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2568:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2568:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2573:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2573:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2578:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2578:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2562:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2562:5:13"
																},
																"nativeSrc": "2562:23:13",
																"nodeType": "YulFunctionCall",
																"src": "2562:23:13"
															},
															"nativeSrc": "2562:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "2562:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2605:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2605:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2610:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2610:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2601:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2601:3:13"
																		},
																		"nativeSrc": "2601:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2601:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2619:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2619:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2594:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2594:6:13"
																},
																"nativeSrc": "2594:27:13",
																"nodeType": "YulFunctionCall",
																"src": "2594:27:13"
															},
															"nativeSrc": "2594:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "2594:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2489:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2533:3:13",
														"nodeType": "YulTypedName",
														"src": "2533:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2538:3:13",
														"nodeType": "YulTypedName",
														"src": "2538:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2543:6:13",
														"nodeType": "YulTypedName",
														"src": "2543:6:13",
														"type": ""
													}
												],
												"src": "2489:139:13"
											},
											{
												"body": {
													"nativeSrc": "2682:54:13",
													"nodeType": "YulBlock",
													"src": "2682:54:13",
													"statements": [
														{
															"nativeSrc": "2692:38:13",
															"nodeType": "YulAssignment",
															"src": "2692:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2710:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2710:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2717:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2717:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2706:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2706:3:13"
																		},
																		"nativeSrc": "2706:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2706:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2726:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2726:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2722:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2722:3:13"
																		},
																		"nativeSrc": "2722:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2722:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2702:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2702:3:13"
																},
																"nativeSrc": "2702:28:13",
																"nodeType": "YulFunctionCall",
																"src": "2702:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2692:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2692:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2634:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2665:5:13",
														"nodeType": "YulTypedName",
														"src": "2665:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2675:6:13",
														"nodeType": "YulTypedName",
														"src": "2675:6:13",
														"type": ""
													}
												],
												"src": "2634:102:13"
											},
											{
												"body": {
													"nativeSrc": "2834:285:13",
													"nodeType": "YulBlock",
													"src": "2834:285:13",
													"statements": [
														{
															"nativeSrc": "2844:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2844:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2891:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2891:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2858:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "2858:32:13"
																},
																"nativeSrc": "2858:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2858:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2848:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2848:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2906:78:13",
															"nodeType": "YulAssignment",
															"src": "2906:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2972:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2972:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2977:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2977:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2913:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2913:58:13"
																},
																"nativeSrc": "2913:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2913:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2906:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2906:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3032:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3032:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3039:4:13",
																				"nodeType": "YulLiteral",
																				"src": "3039:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3028:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3028:3:13"
																		},
																		"nativeSrc": "3028:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3028:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3046:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3046:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3051:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3051:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2993:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "2993:34:13"
																},
																"nativeSrc": "2993:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2993:65:13"
															},
															"nativeSrc": "2993:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "2993:65:13"
														},
														{
															"nativeSrc": "3067:46:13",
															"nodeType": "YulAssignment",
															"src": "3067:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3078:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3078:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3105:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3105:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3083:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "3083:21:13"
																		},
																		"nativeSrc": "3083:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3083:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3074:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3074:3:13"
																},
																"nativeSrc": "3074:39:13",
																"nodeType": "YulFunctionCall",
																"src": "3074:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3067:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3067:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2742:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2815:5:13",
														"nodeType": "YulTypedName",
														"src": "2815:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2822:3:13",
														"nodeType": "YulTypedName",
														"src": "2822:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2830:3:13",
														"nodeType": "YulTypedName",
														"src": "2830:3:13",
														"type": ""
													}
												],
												"src": "2742:377:13"
											},
											{
												"body": {
													"nativeSrc": "3243:195:13",
													"nodeType": "YulBlock",
													"src": "3243:195:13",
													"statements": [
														{
															"nativeSrc": "3253:26:13",
															"nodeType": "YulAssignment",
															"src": "3253:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3265:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3265:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3276:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3276:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3261:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3261:3:13"
																},
																"nativeSrc": "3261:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3261:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3253:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3253:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3300:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3300:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3311:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3311:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3296:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:13"
																		},
																		"nativeSrc": "3296:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3296:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3319:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "3319:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3325:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3325:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3315:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3315:3:13"
																		},
																		"nativeSrc": "3315:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3315:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3289:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3289:6:13"
																},
																"nativeSrc": "3289:47:13",
																"nodeType": "YulFunctionCall",
																"src": "3289:47:13"
															},
															"nativeSrc": "3289:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "3289:47:13"
														},
														{
															"nativeSrc": "3345:86:13",
															"nodeType": "YulAssignment",
															"src": "3345:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3417:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3417:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "3426:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3426:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3353:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "3353:63:13"
																},
																"nativeSrc": "3353:78:13",
																"nodeType": "YulFunctionCall",
																"src": "3353:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3345:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3345:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3125:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3215:9:13",
														"nodeType": "YulTypedName",
														"src": "3215:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3227:6:13",
														"nodeType": "YulTypedName",
														"src": "3227:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3238:4:13",
														"nodeType": "YulTypedName",
														"src": "3238:4:13",
														"type": ""
													}
												],
												"src": "3125:313:13"
											},
											{
												"body": {
													"nativeSrc": "3489:81:13",
													"nodeType": "YulBlock",
													"src": "3489:81:13",
													"statements": [
														{
															"nativeSrc": "3499:65:13",
															"nodeType": "YulAssignment",
															"src": "3499:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:13",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:13"
																},
																"nativeSrc": "3510:54:13",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:13",
														"nodeType": "YulTypedName",
														"src": "3471:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:13",
														"nodeType": "YulTypedName",
														"src": "3481:7:13",
														"type": ""
													}
												],
												"src": "3444:126:13"
											},
											{
												"body": {
													"nativeSrc": "3621:51:13",
													"nodeType": "YulBlock",
													"src": "3621:51:13",
													"statements": [
														{
															"nativeSrc": "3631:35:13",
															"nodeType": "YulAssignment",
															"src": "3631:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:13"
																},
																"nativeSrc": "3642:24:13",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:13",
														"nodeType": "YulTypedName",
														"src": "3603:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:13",
														"nodeType": "YulTypedName",
														"src": "3613:7:13",
														"type": ""
													}
												],
												"src": "3576:96:13"
											},
											{
												"body": {
													"nativeSrc": "3743:53:13",
													"nodeType": "YulBlock",
													"src": "3743:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:13"
																		},
																		"nativeSrc": "3765:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:13"
																},
																"nativeSrc": "3753:37:13",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:13"
															},
															"nativeSrc": "3753:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:13",
														"nodeType": "YulTypedName",
														"src": "3731:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:13",
														"nodeType": "YulTypedName",
														"src": "3738:3:13",
														"type": ""
													}
												],
												"src": "3678:118:13"
											},
											{
												"body": {
													"nativeSrc": "3900:124:13",
													"nodeType": "YulBlock",
													"src": "3900:124:13",
													"statements": [
														{
															"nativeSrc": "3910:26:13",
															"nodeType": "YulAssignment",
															"src": "3910:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:13"
																},
																"nativeSrc": "3918:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:13"
																		},
																		"nativeSrc": "3999:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:13"
																},
																"nativeSrc": "3946:71:13",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:13"
															},
															"nativeSrc": "3946:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:13",
														"nodeType": "YulTypedName",
														"src": "3872:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:13",
														"nodeType": "YulTypedName",
														"src": "3884:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:13",
														"nodeType": "YulTypedName",
														"src": "3895:4:13",
														"type": ""
													}
												],
												"src": "3802:222:13"
											},
											{
												"body": {
													"nativeSrc": "4073:79:13",
													"nodeType": "YulBlock",
													"src": "4073:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:13",
																"nodeType": "YulBlock",
																"src": "4130:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:13"
																			},
																			"nativeSrc": "4132:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:13"
																		},
																		"nativeSrc": "4132:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:13"
																				},
																				"nativeSrc": "4103:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:13"
																		},
																		"nativeSrc": "4093:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:13"
																},
																"nativeSrc": "4086:43:13",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:13"
															},
															"nativeSrc": "4083:63:13",
															"nodeType": "YulIf",
															"src": "4083:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:13",
														"nodeType": "YulTypedName",
														"src": "4066:5:13",
														"type": ""
													}
												],
												"src": "4030:122:13"
											},
											{
												"body": {
													"nativeSrc": "4210:87:13",
													"nodeType": "YulBlock",
													"src": "4210:87:13",
													"statements": [
														{
															"nativeSrc": "4220:29:13",
															"nodeType": "YulAssignment",
															"src": "4220:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:13"
																},
																"nativeSrc": "4229:20:13",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:13"
																},
																"nativeSrc": "4258:33:13",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:13"
															},
															"nativeSrc": "4258:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:13",
														"nodeType": "YulTypedName",
														"src": "4188:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:13",
														"nodeType": "YulTypedName",
														"src": "4196:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:13",
														"nodeType": "YulTypedName",
														"src": "4204:5:13",
														"type": ""
													}
												],
												"src": "4158:139:13"
											},
											{
												"body": {
													"nativeSrc": "4386:391:13",
													"nodeType": "YulBlock",
													"src": "4386:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:13",
																"nodeType": "YulBlock",
																"src": "4432:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:13"
																			},
																			"nativeSrc": "4434:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:13"
																		},
																		"nativeSrc": "4434:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:13"
																		},
																		"nativeSrc": "4403:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:13"
																},
																"nativeSrc": "4399:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:13"
															},
															"nativeSrc": "4396:119:13",
															"nodeType": "YulIf",
															"src": "4396:119:13"
														},
														{
															"nativeSrc": "4525:117:13",
															"nodeType": "YulBlock",
															"src": "4525:117:13",
															"statements": [
																{
																	"nativeSrc": "4540:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:13"
																				},
																				"nativeSrc": "4600:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:13"
																		},
																		"nativeSrc": "4579:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:13",
															"nodeType": "YulBlock",
															"src": "4652:118:13",
															"statements": [
																{
																	"nativeSrc": "4667:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:13"
																				},
																				"nativeSrc": "4728:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:13"
																		},
																		"nativeSrc": "4707:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:13",
														"nodeType": "YulTypedName",
														"src": "4348:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:13",
														"nodeType": "YulTypedName",
														"src": "4359:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:13",
														"nodeType": "YulTypedName",
														"src": "4371:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:13",
														"nodeType": "YulTypedName",
														"src": "4379:6:13",
														"type": ""
													}
												],
												"src": "4303:474:13"
											},
											{
												"body": {
													"nativeSrc": "4883:519:13",
													"nodeType": "YulBlock",
													"src": "4883:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:13",
																"nodeType": "YulBlock",
																"src": "4929:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:13"
																			},
																			"nativeSrc": "4931:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:13"
																		},
																		"nativeSrc": "4931:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:13"
																		},
																		"nativeSrc": "4900:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:13"
																},
																"nativeSrc": "4896:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:13"
															},
															"nativeSrc": "4893:119:13",
															"nodeType": "YulIf",
															"src": "4893:119:13"
														},
														{
															"nativeSrc": "5022:117:13",
															"nodeType": "YulBlock",
															"src": "5022:117:13",
															"statements": [
																{
																	"nativeSrc": "5037:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:13"
																				},
																				"nativeSrc": "5097:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:13"
																		},
																		"nativeSrc": "5076:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:13",
															"nodeType": "YulBlock",
															"src": "5149:118:13",
															"statements": [
																{
																	"nativeSrc": "5164:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:13"
																				},
																				"nativeSrc": "5225:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:13"
																		},
																		"nativeSrc": "5204:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:13",
															"nodeType": "YulBlock",
															"src": "5277:118:13",
															"statements": [
																{
																	"nativeSrc": "5292:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:13"
																				},
																				"nativeSrc": "5353:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:13"
																		},
																		"nativeSrc": "5332:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:13",
														"nodeType": "YulTypedName",
														"src": "4837:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:13",
														"nodeType": "YulTypedName",
														"src": "4848:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:13",
														"nodeType": "YulTypedName",
														"src": "4860:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:13",
														"nodeType": "YulTypedName",
														"src": "4868:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:13",
														"nodeType": "YulTypedName",
														"src": "4876:6:13",
														"type": ""
													}
												],
												"src": "4783:619:13"
											},
											{
												"body": {
													"nativeSrc": "5497:28:13",
													"nodeType": "YulBlock",
													"src": "5497:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5514:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5514:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5517:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5517:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5507:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5507:6:13"
																},
																"nativeSrc": "5507:12:13",
																"nodeType": "YulFunctionCall",
																"src": "5507:12:13"
															},
															"nativeSrc": "5507:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "5507:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5408:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5408:117:13"
											},
											{
												"body": {
													"nativeSrc": "5620:28:13",
													"nodeType": "YulBlock",
													"src": "5620:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5637:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5637:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5640:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5640:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5630:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5630:6:13"
																},
																"nativeSrc": "5630:12:13",
																"nodeType": "YulFunctionCall",
																"src": "5630:12:13"
															},
															"nativeSrc": "5630:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "5630:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "5531:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5531:117:13"
											},
											{
												"body": {
													"nativeSrc": "5682:152:13",
													"nodeType": "YulBlock",
													"src": "5682:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5699:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5699:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5702:77:13",
																		"nodeType": "YulLiteral",
																		"src": "5702:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5692:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5692:6:13"
																},
																"nativeSrc": "5692:88:13",
																"nodeType": "YulFunctionCall",
																"src": "5692:88:13"
															},
															"nativeSrc": "5692:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "5692:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5796:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5796:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5799:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5799:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5789:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5789:6:13"
																},
																"nativeSrc": "5789:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5789:15:13"
															},
															"nativeSrc": "5789:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5789:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5820:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5820:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5823:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5823:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5813:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5813:6:13"
																},
																"nativeSrc": "5813:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5813:15:13"
															},
															"nativeSrc": "5813:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5813:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5654:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5654:180:13"
											},
											{
												"body": {
													"nativeSrc": "5883:238:13",
													"nodeType": "YulBlock",
													"src": "5883:238:13",
													"statements": [
														{
															"nativeSrc": "5893:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5893:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5915:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5915:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5945:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "5945:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5923:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "5923:21:13"
																		},
																		"nativeSrc": "5923:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5923:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5911:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5911:3:13"
																},
																"nativeSrc": "5911:40:13",
																"nodeType": "YulFunctionCall",
																"src": "5911:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5897:10:13",
																	"nodeType": "YulTypedName",
																	"src": "5897:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6062:22:13",
																"nodeType": "YulBlock",
																"src": "6062:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6064:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "6064:16:13"
																			},
																			"nativeSrc": "6064:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6064:18:13"
																		},
																		"nativeSrc": "6064:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6064:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6005:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "6005:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6017:18:13",
																				"nodeType": "YulLiteral",
																				"src": "6017:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6002:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "6002:2:13"
																		},
																		"nativeSrc": "6002:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6002:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6041:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "6041:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6053:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6053:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6038:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "6038:2:13"
																		},
																		"nativeSrc": "6038:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6038:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5999:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5999:2:13"
																},
																"nativeSrc": "5999:62:13",
																"nodeType": "YulFunctionCall",
																"src": "5999:62:13"
															},
															"nativeSrc": "5996:88:13",
															"nodeType": "YulIf",
															"src": "5996:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6100:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6100:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6104:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "6104:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6093:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6093:6:13"
																},
																"nativeSrc": "6093:22:13",
																"nodeType": "YulFunctionCall",
																"src": "6093:22:13"
															},
															"nativeSrc": "6093:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "6093:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5840:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5869:6:13",
														"nodeType": "YulTypedName",
														"src": "5869:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5877:4:13",
														"nodeType": "YulTypedName",
														"src": "5877:4:13",
														"type": ""
													}
												],
												"src": "5840:281:13"
											},
											{
												"body": {
													"nativeSrc": "6168:88:13",
													"nodeType": "YulBlock",
													"src": "6168:88:13",
													"statements": [
														{
															"nativeSrc": "6178:30:13",
															"nodeType": "YulAssignment",
															"src": "6178:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6188:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "6188:18:13"
																},
																"nativeSrc": "6188:20:13",
																"nodeType": "YulFunctionCall",
																"src": "6188:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6178:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6178:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6237:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6237:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6245:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6245:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6217:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "6217:19:13"
																},
																"nativeSrc": "6217:33:13",
																"nodeType": "YulFunctionCall",
																"src": "6217:33:13"
															},
															"nativeSrc": "6217:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "6217:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6127:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6152:4:13",
														"nodeType": "YulTypedName",
														"src": "6152:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6161:6:13",
														"nodeType": "YulTypedName",
														"src": "6161:6:13",
														"type": ""
													}
												],
												"src": "6127:129:13"
											},
											{
												"body": {
													"nativeSrc": "6329:241:13",
													"nodeType": "YulBlock",
													"src": "6329:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6434:22:13",
																"nodeType": "YulBlock",
																"src": "6434:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6436:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "6436:16:13"
																			},
																			"nativeSrc": "6436:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6436:18:13"
																		},
																		"nativeSrc": "6436:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6436:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6406:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6406:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6414:18:13",
																		"nodeType": "YulLiteral",
																		"src": "6414:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6403:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6403:2:13"
																},
																"nativeSrc": "6403:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6403:30:13"
															},
															"nativeSrc": "6400:56:13",
															"nodeType": "YulIf",
															"src": "6400:56:13"
														},
														{
															"nativeSrc": "6466:37:13",
															"nodeType": "YulAssignment",
															"src": "6466:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6496:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6496:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6474:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "6474:21:13"
																},
																"nativeSrc": "6474:29:13",
																"nodeType": "YulFunctionCall",
																"src": "6474:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6466:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6466:4:13"
																}
															]
														},
														{
															"nativeSrc": "6540:23:13",
															"nodeType": "YulAssignment",
															"src": "6540:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6552:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6552:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6558:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6558:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6548:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6548:3:13"
																},
																"nativeSrc": "6548:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6548:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6540:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6540:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "6262:308:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6313:6:13",
														"nodeType": "YulTypedName",
														"src": "6313:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6324:4:13",
														"nodeType": "YulTypedName",
														"src": "6324:4:13",
														"type": ""
													}
												],
												"src": "6262:308:13"
											},
											{
												"body": {
													"nativeSrc": "6640:84:13",
													"nodeType": "YulBlock",
													"src": "6640:84:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6664:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6664:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6669:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6669:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6674:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6674:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6651:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "6651:12:13"
																},
																"nativeSrc": "6651:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6651:30:13"
															},
															"nativeSrc": "6651:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "6651:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6701:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6701:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6706:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6706:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6697:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6697:3:13"
																		},
																		"nativeSrc": "6697:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6697:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6715:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6715:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6690:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6690:6:13"
																},
																"nativeSrc": "6690:27:13",
																"nodeType": "YulFunctionCall",
																"src": "6690:27:13"
															},
															"nativeSrc": "6690:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "6690:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6576:148:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6622:3:13",
														"nodeType": "YulTypedName",
														"src": "6622:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6627:3:13",
														"nodeType": "YulTypedName",
														"src": "6627:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6632:6:13",
														"nodeType": "YulTypedName",
														"src": "6632:6:13",
														"type": ""
													}
												],
												"src": "6576:148:13"
											},
											{
												"body": {
													"nativeSrc": "6814:341:13",
													"nodeType": "YulBlock",
													"src": "6814:341:13",
													"statements": [
														{
															"nativeSrc": "6824:75:13",
															"nodeType": "YulAssignment",
															"src": "6824:75:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6891:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6891:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "6849:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "6849:41:13"
																		},
																		"nativeSrc": "6849:49:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6849:49:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6833:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "6833:15:13"
																},
																"nativeSrc": "6833:66:13",
																"nodeType": "YulFunctionCall",
																"src": "6833:66:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6824:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6824:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6915:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6915:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6922:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6922:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6908:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6908:6:13"
																},
																"nativeSrc": "6908:21:13",
																"nodeType": "YulFunctionCall",
																"src": "6908:21:13"
															},
															"nativeSrc": "6908:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "6908:21:13"
														},
														{
															"nativeSrc": "6938:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6938:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6953:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6953:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6960:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6960:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6949:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6949:3:13"
																},
																"nativeSrc": "6949:16:13",
																"nodeType": "YulFunctionCall",
																"src": "6949:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6942:3:13",
																	"nodeType": "YulTypedName",
																	"src": "6942:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7003:83:13",
																"nodeType": "YulBlock",
																"src": "7003:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7005:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7005:77:13"
																			},
																			"nativeSrc": "7005:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7005:79:13"
																		},
																		"nativeSrc": "7005:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7005:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6984:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6984:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6989:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6989:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6980:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6980:3:13"
																		},
																		"nativeSrc": "6980:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6980:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6998:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6998:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6977:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6977:2:13"
																},
																"nativeSrc": "6977:25:13",
																"nodeType": "YulFunctionCall",
																"src": "6977:25:13"
															},
															"nativeSrc": "6974:112:13",
															"nodeType": "YulIf",
															"src": "6974:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7132:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7132:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7137:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7137:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7142:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7142:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7095:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "7095:36:13"
																},
																"nativeSrc": "7095:54:13",
																"nodeType": "YulFunctionCall",
																"src": "7095:54:13"
															},
															"nativeSrc": "7095:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "7095:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "6730:425:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6787:3:13",
														"nodeType": "YulTypedName",
														"src": "6787:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6792:6:13",
														"nodeType": "YulTypedName",
														"src": "6792:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6800:3:13",
														"nodeType": "YulTypedName",
														"src": "6800:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6808:5:13",
														"nodeType": "YulTypedName",
														"src": "6808:5:13",
														"type": ""
													}
												],
												"src": "6730:425:13"
											},
											{
												"body": {
													"nativeSrc": "7237:278:13",
													"nodeType": "YulBlock",
													"src": "7237:278:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7286:83:13",
																"nodeType": "YulBlock",
																"src": "7286:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7288:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7288:77:13"
																			},
																			"nativeSrc": "7288:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7288:79:13"
																		},
																		"nativeSrc": "7288:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7288:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7265:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7265:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7273:4:13",
																						"nodeType": "YulLiteral",
																						"src": "7273:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7261:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7261:3:13"
																				},
																				"nativeSrc": "7261:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7261:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7280:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7280:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7257:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7257:3:13"
																		},
																		"nativeSrc": "7257:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7257:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7250:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7250:6:13"
																},
																"nativeSrc": "7250:35:13",
																"nodeType": "YulFunctionCall",
																"src": "7250:35:13"
															},
															"nativeSrc": "7247:122:13",
															"nodeType": "YulIf",
															"src": "7247:122:13"
														},
														{
															"nativeSrc": "7378:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7378:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7405:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7405:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7392:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "7392:12:13"
																},
																"nativeSrc": "7392:20:13",
																"nodeType": "YulFunctionCall",
																"src": "7392:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7382:6:13",
																	"nodeType": "YulTypedName",
																	"src": "7382:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7421:88:13",
															"nodeType": "YulAssignment",
															"src": "7421:88:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7482:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7482:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7490:4:13",
																				"nodeType": "YulLiteral",
																				"src": "7490:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7478:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7478:3:13"
																		},
																		"nativeSrc": "7478:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7478:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7497:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7497:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7505:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7505:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "7430:47:13",
																	"nodeType": "YulIdentifier",
																	"src": "7430:47:13"
																},
																"nativeSrc": "7430:79:13",
																"nodeType": "YulFunctionCall",
																"src": "7430:79:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7421:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7421:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "7175:340:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7215:6:13",
														"nodeType": "YulTypedName",
														"src": "7215:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7223:3:13",
														"nodeType": "YulTypedName",
														"src": "7223:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7231:5:13",
														"nodeType": "YulTypedName",
														"src": "7231:5:13",
														"type": ""
													}
												],
												"src": "7175:340:13"
											},
											{
												"body": {
													"nativeSrc": "7614:561:13",
													"nodeType": "YulBlock",
													"src": "7614:561:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7660:83:13",
																"nodeType": "YulBlock",
																"src": "7660:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7662:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7662:77:13"
																			},
																			"nativeSrc": "7662:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7662:79:13"
																		},
																		"nativeSrc": "7662:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7662:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7635:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7635:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7644:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7644:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7631:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7631:3:13"
																		},
																		"nativeSrc": "7631:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7631:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7656:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7656:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7627:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7627:3:13"
																},
																"nativeSrc": "7627:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7627:32:13"
															},
															"nativeSrc": "7624:119:13",
															"nodeType": "YulIf",
															"src": "7624:119:13"
														},
														{
															"nativeSrc": "7753:117:13",
															"nodeType": "YulBlock",
															"src": "7753:117:13",
															"statements": [
																{
																	"nativeSrc": "7768:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7768:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7782:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7782:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7772:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7772:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7797:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7797:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7832:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7832:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7843:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7843:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7828:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7828:3:13"
																				},
																				"nativeSrc": "7828:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7828:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7852:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7852:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7807:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7807:20:13"
																		},
																		"nativeSrc": "7807:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7807:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7797:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7797:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7880:288:13",
															"nodeType": "YulBlock",
															"src": "7880:288:13",
															"statements": [
																{
																	"nativeSrc": "7895:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7895:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7926:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7926:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7937:2:13",
																						"nodeType": "YulLiteral",
																						"src": "7937:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7922:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7922:3:13"
																				},
																				"nativeSrc": "7922:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7922:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7909:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "7909:12:13"
																		},
																		"nativeSrc": "7909:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7909:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7899:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7899:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7988:83:13",
																		"nodeType": "YulBlock",
																		"src": "7988:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7990:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "7990:77:13"
																					},
																					"nativeSrc": "7990:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7990:79:13"
																				},
																				"nativeSrc": "7990:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "7990:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7960:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7960:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7968:18:13",
																				"nodeType": "YulLiteral",
																				"src": "7968:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7957:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "7957:2:13"
																		},
																		"nativeSrc": "7957:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7957:30:13"
																	},
																	"nativeSrc": "7954:117:13",
																	"nodeType": "YulIf",
																	"src": "7954:117:13"
																},
																{
																	"nativeSrc": "8085:73:13",
																	"nodeType": "YulAssignment",
																	"src": "8085:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8130:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8130:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8141:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8141:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8126:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8126:3:13"
																				},
																				"nativeSrc": "8126:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8126:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8150:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8150:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "8095:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "8095:30:13"
																		},
																		"nativeSrc": "8095:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8095:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8085:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8085:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nativeSrc": "7521:654:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7576:9:13",
														"nodeType": "YulTypedName",
														"src": "7576:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7587:7:13",
														"nodeType": "YulTypedName",
														"src": "7587:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7599:6:13",
														"nodeType": "YulTypedName",
														"src": "7599:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7607:6:13",
														"nodeType": "YulTypedName",
														"src": "7607:6:13",
														"type": ""
													}
												],
												"src": "7521:654:13"
											},
											{
												"body": {
													"nativeSrc": "8247:263:13",
													"nodeType": "YulBlock",
													"src": "8247:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8293:83:13",
																"nodeType": "YulBlock",
																"src": "8293:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8295:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8295:77:13"
																			},
																			"nativeSrc": "8295:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8295:79:13"
																		},
																		"nativeSrc": "8295:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8295:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8268:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8268:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8277:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8277:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8264:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8264:3:13"
																		},
																		"nativeSrc": "8264:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8264:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8289:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8289:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8260:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8260:3:13"
																},
																"nativeSrc": "8260:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8260:32:13"
															},
															"nativeSrc": "8257:119:13",
															"nodeType": "YulIf",
															"src": "8257:119:13"
														},
														{
															"nativeSrc": "8386:117:13",
															"nodeType": "YulBlock",
															"src": "8386:117:13",
															"statements": [
																{
																	"nativeSrc": "8401:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8401:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8415:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8415:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8405:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8405:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8430:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8430:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8465:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8465:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8476:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8476:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8461:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8461:3:13"
																				},
																				"nativeSrc": "8461:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8461:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8485:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8485:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8440:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8440:20:13"
																		},
																		"nativeSrc": "8440:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8440:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8430:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8430:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "8181:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8217:9:13",
														"nodeType": "YulTypedName",
														"src": "8217:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8228:7:13",
														"nodeType": "YulTypedName",
														"src": "8228:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8240:6:13",
														"nodeType": "YulTypedName",
														"src": "8240:6:13",
														"type": ""
													}
												],
												"src": "8181:329:13"
											},
											{
												"body": {
													"nativeSrc": "8581:53:13",
													"nodeType": "YulBlock",
													"src": "8581:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8598:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8598:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8621:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8621:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8603:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "8603:17:13"
																		},
																		"nativeSrc": "8603:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8603:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8591:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8591:6:13"
																},
																"nativeSrc": "8591:37:13",
																"nodeType": "YulFunctionCall",
																"src": "8591:37:13"
															},
															"nativeSrc": "8591:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "8591:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8516:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8569:5:13",
														"nodeType": "YulTypedName",
														"src": "8569:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8576:3:13",
														"nodeType": "YulTypedName",
														"src": "8576:3:13",
														"type": ""
													}
												],
												"src": "8516:118:13"
											},
											{
												"body": {
													"nativeSrc": "8738:124:13",
													"nodeType": "YulBlock",
													"src": "8738:124:13",
													"statements": [
														{
															"nativeSrc": "8748:26:13",
															"nodeType": "YulAssignment",
															"src": "8748:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8760:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8760:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8771:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8771:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8756:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8756:3:13"
																},
																"nativeSrc": "8756:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8756:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8748:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8748:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8828:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8828:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8841:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8841:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8852:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8852:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8837:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8837:3:13"
																		},
																		"nativeSrc": "8837:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8837:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8784:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "8784:43:13"
																},
																"nativeSrc": "8784:71:13",
																"nodeType": "YulFunctionCall",
																"src": "8784:71:13"
															},
															"nativeSrc": "8784:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "8784:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8640:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8710:9:13",
														"nodeType": "YulTypedName",
														"src": "8710:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8722:6:13",
														"nodeType": "YulTypedName",
														"src": "8722:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8733:4:13",
														"nodeType": "YulTypedName",
														"src": "8733:4:13",
														"type": ""
													}
												],
												"src": "8640:222:13"
											},
											{
												"body": {
													"nativeSrc": "8908:76:13",
													"nodeType": "YulBlock",
													"src": "8908:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8962:16:13",
																"nodeType": "YulBlock",
																"src": "8962:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8971:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8971:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8974:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8974:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8964:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8964:6:13"
																			},
																			"nativeSrc": "8964:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8964:12:13"
																		},
																		"nativeSrc": "8964:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8964:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8931:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8931:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8953:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "8953:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8938:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "8938:14:13"
																				},
																				"nativeSrc": "8938:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8938:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8928:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8928:2:13"
																		},
																		"nativeSrc": "8928:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8928:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8921:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8921:6:13"
																},
																"nativeSrc": "8921:40:13",
																"nodeType": "YulFunctionCall",
																"src": "8921:40:13"
															},
															"nativeSrc": "8918:60:13",
															"nodeType": "YulIf",
															"src": "8918:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8868:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8901:5:13",
														"nodeType": "YulTypedName",
														"src": "8901:5:13",
														"type": ""
													}
												],
												"src": "8868:116:13"
											},
											{
												"body": {
													"nativeSrc": "9039:84:13",
													"nodeType": "YulBlock",
													"src": "9039:84:13",
													"statements": [
														{
															"nativeSrc": "9049:29:13",
															"nodeType": "YulAssignment",
															"src": "9049:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9071:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9071:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9058:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "9058:12:13"
																},
																"nativeSrc": "9058:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9058:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9049:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9049:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9111:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9111:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9087:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "9087:23:13"
																},
																"nativeSrc": "9087:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9087:30:13"
															},
															"nativeSrc": "9087:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "9087:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "8990:133:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9017:6:13",
														"nodeType": "YulTypedName",
														"src": "9017:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9025:3:13",
														"nodeType": "YulTypedName",
														"src": "9025:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9033:5:13",
														"nodeType": "YulTypedName",
														"src": "9033:5:13",
														"type": ""
													}
												],
												"src": "8990:133:13"
											},
											{
												"body": {
													"nativeSrc": "9209:388:13",
													"nodeType": "YulBlock",
													"src": "9209:388:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9255:83:13",
																"nodeType": "YulBlock",
																"src": "9255:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9257:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9257:77:13"
																			},
																			"nativeSrc": "9257:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9257:79:13"
																		},
																		"nativeSrc": "9257:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9257:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9230:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9230:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9239:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9239:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9226:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9226:3:13"
																		},
																		"nativeSrc": "9226:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9226:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9251:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9251:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9222:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9222:3:13"
																},
																"nativeSrc": "9222:32:13",
																"nodeType": "YulFunctionCall",
																"src": "9222:32:13"
															},
															"nativeSrc": "9219:119:13",
															"nodeType": "YulIf",
															"src": "9219:119:13"
														},
														{
															"nativeSrc": "9348:117:13",
															"nodeType": "YulBlock",
															"src": "9348:117:13",
															"statements": [
																{
																	"nativeSrc": "9363:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9363:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9377:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9377:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9367:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9367:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9392:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9392:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9427:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9427:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9438:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9438:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9423:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9423:3:13"
																				},
																				"nativeSrc": "9423:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9423:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9447:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9447:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9402:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9402:20:13"
																		},
																		"nativeSrc": "9402:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9402:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9392:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9392:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9475:115:13",
															"nodeType": "YulBlock",
															"src": "9475:115:13",
															"statements": [
																{
																	"nativeSrc": "9490:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9490:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9504:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9504:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9494:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9494:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9520:60:13",
																	"nodeType": "YulAssignment",
																	"src": "9520:60:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9552:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9552:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9563:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9563:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9548:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9548:3:13"
																				},
																				"nativeSrc": "9548:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9548:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9572:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9572:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "9530:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "9530:17:13"
																		},
																		"nativeSrc": "9530:50:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9530:50:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9520:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9520:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "9129:468:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9171:9:13",
														"nodeType": "YulTypedName",
														"src": "9171:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9182:7:13",
														"nodeType": "YulTypedName",
														"src": "9182:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9194:6:13",
														"nodeType": "YulTypedName",
														"src": "9194:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9202:6:13",
														"nodeType": "YulTypedName",
														"src": "9202:6:13",
														"type": ""
													}
												],
												"src": "9129:468:13"
											},
											{
												"body": {
													"nativeSrc": "9669:241:13",
													"nodeType": "YulBlock",
													"src": "9669:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9774:22:13",
																"nodeType": "YulBlock",
																"src": "9774:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9776:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "9776:16:13"
																			},
																			"nativeSrc": "9776:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9776:18:13"
																		},
																		"nativeSrc": "9776:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9776:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9746:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9746:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9754:18:13",
																		"nodeType": "YulLiteral",
																		"src": "9754:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9743:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9743:2:13"
																},
																"nativeSrc": "9743:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9743:30:13"
															},
															"nativeSrc": "9740:56:13",
															"nodeType": "YulIf",
															"src": "9740:56:13"
														},
														{
															"nativeSrc": "9806:37:13",
															"nodeType": "YulAssignment",
															"src": "9806:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9836:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9836:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "9814:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "9814:21:13"
																},
																"nativeSrc": "9814:29:13",
																"nodeType": "YulFunctionCall",
																"src": "9814:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9806:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9806:4:13"
																}
															]
														},
														{
															"nativeSrc": "9880:23:13",
															"nodeType": "YulAssignment",
															"src": "9880:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "9892:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9892:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9898:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9898:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9888:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9888:3:13"
																},
																"nativeSrc": "9888:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9888:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9880:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9880:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "9603:307:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "9653:6:13",
														"nodeType": "YulTypedName",
														"src": "9653:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "9664:4:13",
														"nodeType": "YulTypedName",
														"src": "9664:4:13",
														"type": ""
													}
												],
												"src": "9603:307:13"
											},
											{
												"body": {
													"nativeSrc": "9999:340:13",
													"nodeType": "YulBlock",
													"src": "9999:340:13",
													"statements": [
														{
															"nativeSrc": "10009:74:13",
															"nodeType": "YulAssignment",
															"src": "10009:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10075:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10075:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "10034:40:13",
																			"nodeType": "YulIdentifier",
																			"src": "10034:40:13"
																		},
																		"nativeSrc": "10034:48:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10034:48:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10018:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "10018:15:13"
																},
																"nativeSrc": "10018:65:13",
																"nodeType": "YulFunctionCall",
																"src": "10018:65:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10009:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10009:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10099:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10099:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10106:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10106:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10092:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10092:6:13"
																},
																"nativeSrc": "10092:21:13",
																"nodeType": "YulFunctionCall",
																"src": "10092:21:13"
															},
															"nativeSrc": "10092:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "10092:21:13"
														},
														{
															"nativeSrc": "10122:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10122:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10137:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10137:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10144:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10144:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10133:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10133:3:13"
																},
																"nativeSrc": "10133:16:13",
																"nodeType": "YulFunctionCall",
																"src": "10133:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10126:3:13",
																	"nodeType": "YulTypedName",
																	"src": "10126:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10187:83:13",
																"nodeType": "YulBlock",
																"src": "10187:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "10189:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "10189:77:13"
																			},
																			"nativeSrc": "10189:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10189:79:13"
																		},
																		"nativeSrc": "10189:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10189:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10168:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "10168:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10173:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10173:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10164:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10164:3:13"
																		},
																		"nativeSrc": "10164:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10164:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10182:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10182:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10161:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10161:2:13"
																},
																"nativeSrc": "10161:25:13",
																"nodeType": "YulFunctionCall",
																"src": "10161:25:13"
															},
															"nativeSrc": "10158:112:13",
															"nodeType": "YulIf",
															"src": "10158:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10316:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10316:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "10321:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10321:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10326:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10326:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "10279:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "10279:36:13"
																},
																"nativeSrc": "10279:54:13",
																"nodeType": "YulFunctionCall",
																"src": "10279:54:13"
															},
															"nativeSrc": "10279:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "10279:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "9916:423:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9972:3:13",
														"nodeType": "YulTypedName",
														"src": "9972:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9977:6:13",
														"nodeType": "YulTypedName",
														"src": "9977:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9985:3:13",
														"nodeType": "YulTypedName",
														"src": "9985:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9993:5:13",
														"nodeType": "YulTypedName",
														"src": "9993:5:13",
														"type": ""
													}
												],
												"src": "9916:423:13"
											},
											{
												"body": {
													"nativeSrc": "10419:277:13",
													"nodeType": "YulBlock",
													"src": "10419:277:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10468:83:13",
																"nodeType": "YulBlock",
																"src": "10468:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10470:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "10470:77:13"
																			},
																			"nativeSrc": "10470:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10470:79:13"
																		},
																		"nativeSrc": "10470:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10470:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10447:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10447:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10455:4:13",
																						"nodeType": "YulLiteral",
																						"src": "10455:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10443:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10443:3:13"
																				},
																				"nativeSrc": "10443:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10443:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10462:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "10462:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10439:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10439:3:13"
																		},
																		"nativeSrc": "10439:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10439:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10432:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10432:6:13"
																},
																"nativeSrc": "10432:35:13",
																"nodeType": "YulFunctionCall",
																"src": "10432:35:13"
															},
															"nativeSrc": "10429:122:13",
															"nodeType": "YulIf",
															"src": "10429:122:13"
														},
														{
															"nativeSrc": "10560:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10560:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10587:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10587:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10574:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "10574:12:13"
																},
																"nativeSrc": "10574:20:13",
																"nodeType": "YulFunctionCall",
																"src": "10574:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10564:6:13",
																	"nodeType": "YulTypedName",
																	"src": "10564:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10603:87:13",
															"nodeType": "YulAssignment",
															"src": "10603:87:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10663:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10663:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10671:4:13",
																				"nodeType": "YulLiteral",
																				"src": "10671:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10659:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10659:3:13"
																		},
																		"nativeSrc": "10659:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10659:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10678:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10678:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10686:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10686:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "10612:46:13",
																	"nodeType": "YulIdentifier",
																	"src": "10612:46:13"
																},
																"nativeSrc": "10612:78:13",
																"nodeType": "YulFunctionCall",
																"src": "10612:78:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10603:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10603:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "10358:338:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10397:6:13",
														"nodeType": "YulTypedName",
														"src": "10397:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10405:3:13",
														"nodeType": "YulTypedName",
														"src": "10405:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10413:5:13",
														"nodeType": "YulTypedName",
														"src": "10413:5:13",
														"type": ""
													}
												],
												"src": "10358:338:13"
											},
											{
												"body": {
													"nativeSrc": "10828:817:13",
													"nodeType": "YulBlock",
													"src": "10828:817:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10875:83:13",
																"nodeType": "YulBlock",
																"src": "10875:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10877:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "10877:77:13"
																			},
																			"nativeSrc": "10877:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10877:79:13"
																		},
																		"nativeSrc": "10877:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10877:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10849:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10849:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10858:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10858:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10845:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10845:3:13"
																		},
																		"nativeSrc": "10845:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10845:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10870:3:13",
																		"nodeType": "YulLiteral",
																		"src": "10870:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10841:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10841:3:13"
																},
																"nativeSrc": "10841:33:13",
																"nodeType": "YulFunctionCall",
																"src": "10841:33:13"
															},
															"nativeSrc": "10838:120:13",
															"nodeType": "YulIf",
															"src": "10838:120:13"
														},
														{
															"nativeSrc": "10968:117:13",
															"nodeType": "YulBlock",
															"src": "10968:117:13",
															"statements": [
																{
																	"nativeSrc": "10983:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10983:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10997:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10997:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10987:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10987:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11012:63:13",
																	"nodeType": "YulAssignment",
																	"src": "11012:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11047:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11047:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11058:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11058:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11043:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11043:3:13"
																				},
																				"nativeSrc": "11043:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11043:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11067:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11067:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11022:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "11022:20:13"
																		},
																		"nativeSrc": "11022:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11022:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11012:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11012:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11095:118:13",
															"nodeType": "YulBlock",
															"src": "11095:118:13",
															"statements": [
																{
																	"nativeSrc": "11110:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11110:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11124:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11124:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11114:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11114:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11140:63:13",
																	"nodeType": "YulAssignment",
																	"src": "11140:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11175:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11175:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11186:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11186:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11171:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11171:3:13"
																				},
																				"nativeSrc": "11171:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11171:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11195:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11195:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11150:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "11150:20:13"
																		},
																		"nativeSrc": "11150:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11150:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11140:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11140:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11223:118:13",
															"nodeType": "YulBlock",
															"src": "11223:118:13",
															"statements": [
																{
																	"nativeSrc": "11238:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11238:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11252:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11252:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11242:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11242:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11268:63:13",
																	"nodeType": "YulAssignment",
																	"src": "11268:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11303:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11303:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11314:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11314:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11299:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11299:3:13"
																				},
																				"nativeSrc": "11299:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11299:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11323:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11323:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11278:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "11278:20:13"
																		},
																		"nativeSrc": "11278:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11278:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11268:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11268:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11351:287:13",
															"nodeType": "YulBlock",
															"src": "11351:287:13",
															"statements": [
																{
																	"nativeSrc": "11366:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11366:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11397:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11397:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11408:2:13",
																						"nodeType": "YulLiteral",
																						"src": "11408:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11393:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11393:3:13"
																				},
																				"nativeSrc": "11393:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11393:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11380:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "11380:12:13"
																		},
																		"nativeSrc": "11380:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11380:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11370:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11370:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11459:83:13",
																		"nodeType": "YulBlock",
																		"src": "11459:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11461:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "11461:77:13"
																					},
																					"nativeSrc": "11461:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "11461:79:13"
																				},
																				"nativeSrc": "11461:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "11461:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11431:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11431:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11439:18:13",
																				"nodeType": "YulLiteral",
																				"src": "11439:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11428:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "11428:2:13"
																		},
																		"nativeSrc": "11428:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11428:30:13"
																	},
																	"nativeSrc": "11425:117:13",
																	"nodeType": "YulIf",
																	"src": "11425:117:13"
																},
																{
																	"nativeSrc": "11556:72:13",
																	"nodeType": "YulAssignment",
																	"src": "11556:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11600:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11600:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11611:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11611:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11596:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11596:3:13"
																				},
																				"nativeSrc": "11596:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11596:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11620:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11620:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "11566:29:13",
																			"nodeType": "YulIdentifier",
																			"src": "11566:29:13"
																		},
																		"nativeSrc": "11566:62:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11566:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "11556:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11556:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "10702:943:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10774:9:13",
														"nodeType": "YulTypedName",
														"src": "10774:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10785:7:13",
														"nodeType": "YulTypedName",
														"src": "10785:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10797:6:13",
														"nodeType": "YulTypedName",
														"src": "10797:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10805:6:13",
														"nodeType": "YulTypedName",
														"src": "10805:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10813:6:13",
														"nodeType": "YulTypedName",
														"src": "10813:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10821:6:13",
														"nodeType": "YulTypedName",
														"src": "10821:6:13",
														"type": ""
													}
												],
												"src": "10702:943:13"
											},
											{
												"body": {
													"nativeSrc": "11734:391:13",
													"nodeType": "YulBlock",
													"src": "11734:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11780:83:13",
																"nodeType": "YulBlock",
																"src": "11780:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11782:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "11782:77:13"
																			},
																			"nativeSrc": "11782:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11782:79:13"
																		},
																		"nativeSrc": "11782:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11782:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11755:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11755:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11764:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11764:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11751:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11751:3:13"
																		},
																		"nativeSrc": "11751:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11751:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11776:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11776:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11747:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11747:3:13"
																},
																"nativeSrc": "11747:32:13",
																"nodeType": "YulFunctionCall",
																"src": "11747:32:13"
															},
															"nativeSrc": "11744:119:13",
															"nodeType": "YulIf",
															"src": "11744:119:13"
														},
														{
															"nativeSrc": "11873:117:13",
															"nodeType": "YulBlock",
															"src": "11873:117:13",
															"statements": [
																{
																	"nativeSrc": "11888:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11888:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11902:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11902:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11892:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11892:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11917:63:13",
																	"nodeType": "YulAssignment",
																	"src": "11917:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11952:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11952:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11963:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11963:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11948:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11948:3:13"
																				},
																				"nativeSrc": "11948:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11948:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11972:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11972:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11927:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "11927:20:13"
																		},
																		"nativeSrc": "11927:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11927:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11917:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11917:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12000:118:13",
															"nodeType": "YulBlock",
															"src": "12000:118:13",
															"statements": [
																{
																	"nativeSrc": "12015:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12015:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12029:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12029:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12019:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12019:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12045:63:13",
																	"nodeType": "YulAssignment",
																	"src": "12045:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12080:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12080:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12091:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12091:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12076:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12076:3:13"
																				},
																				"nativeSrc": "12076:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12076:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12100:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12100:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12055:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "12055:20:13"
																		},
																		"nativeSrc": "12055:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12055:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12045:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12045:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "11651:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11696:9:13",
														"nodeType": "YulTypedName",
														"src": "11696:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11707:7:13",
														"nodeType": "YulTypedName",
														"src": "11707:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11719:6:13",
														"nodeType": "YulTypedName",
														"src": "11719:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11727:6:13",
														"nodeType": "YulTypedName",
														"src": "11727:6:13",
														"type": ""
													}
												],
												"src": "11651:474:13"
											},
											{
												"body": {
													"nativeSrc": "12159:152:13",
													"nodeType": "YulBlock",
													"src": "12159:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12176:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12176:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12179:77:13",
																		"nodeType": "YulLiteral",
																		"src": "12179:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12169:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12169:6:13"
																},
																"nativeSrc": "12169:88:13",
																"nodeType": "YulFunctionCall",
																"src": "12169:88:13"
															},
															"nativeSrc": "12169:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "12169:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12273:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12273:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12276:4:13",
																		"nodeType": "YulLiteral",
																		"src": "12276:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12266:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12266:6:13"
																},
																"nativeSrc": "12266:15:13",
																"nodeType": "YulFunctionCall",
																"src": "12266:15:13"
															},
															"nativeSrc": "12266:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "12266:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12297:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12297:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12300:4:13",
																		"nodeType": "YulLiteral",
																		"src": "12300:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12290:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12290:6:13"
																},
																"nativeSrc": "12290:15:13",
																"nodeType": "YulFunctionCall",
																"src": "12290:15:13"
															},
															"nativeSrc": "12290:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "12290:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12131:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "12131:180:13"
											},
											{
												"body": {
													"nativeSrc": "12368:269:13",
													"nodeType": "YulBlock",
													"src": "12368:269:13",
													"statements": [
														{
															"nativeSrc": "12378:22:13",
															"nodeType": "YulAssignment",
															"src": "12378:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12392:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12392:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12398:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12398:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12388:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12388:3:13"
																},
																"nativeSrc": "12388:12:13",
																"nodeType": "YulFunctionCall",
																"src": "12388:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12378:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12378:6:13"
																}
															]
														},
														{
															"nativeSrc": "12409:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12409:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12439:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12439:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12445:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12445:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12435:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12435:3:13"
																},
																"nativeSrc": "12435:12:13",
																"nodeType": "YulFunctionCall",
																"src": "12435:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12413:18:13",
																	"nodeType": "YulTypedName",
																	"src": "12413:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12486:51:13",
																"nodeType": "YulBlock",
																"src": "12486:51:13",
																"statements": [
																	{
																		"nativeSrc": "12500:27:13",
																		"nodeType": "YulAssignment",
																		"src": "12500:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12514:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "12514:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12522:4:13",
																					"nodeType": "YulLiteral",
																					"src": "12522:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12510:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "12510:3:13"
																			},
																			"nativeSrc": "12510:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12510:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12500:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12500:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12466:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "12466:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12459:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12459:6:13"
																},
																"nativeSrc": "12459:26:13",
																"nodeType": "YulFunctionCall",
																"src": "12459:26:13"
															},
															"nativeSrc": "12456:81:13",
															"nodeType": "YulIf",
															"src": "12456:81:13"
														},
														{
															"body": {
																"nativeSrc": "12589:42:13",
																"nodeType": "YulBlock",
																"src": "12589:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12603:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "12603:16:13"
																			},
																			"nativeSrc": "12603:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12603:18:13"
																		},
																		"nativeSrc": "12603:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12603:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12553:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "12553:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12576:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12576:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12584:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12584:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12573:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "12573:2:13"
																		},
																		"nativeSrc": "12573:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12573:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12550:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "12550:2:13"
																},
																"nativeSrc": "12550:38:13",
																"nodeType": "YulFunctionCall",
																"src": "12550:38:13"
															},
															"nativeSrc": "12547:84:13",
															"nodeType": "YulIf",
															"src": "12547:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12317:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12352:4:13",
														"nodeType": "YulTypedName",
														"src": "12352:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12361:6:13",
														"nodeType": "YulTypedName",
														"src": "12361:6:13",
														"type": ""
													}
												],
												"src": "12317:320:13"
											},
											{
												"body": {
													"nativeSrc": "12797:288:13",
													"nodeType": "YulBlock",
													"src": "12797:288:13",
													"statements": [
														{
															"nativeSrc": "12807:26:13",
															"nodeType": "YulAssignment",
															"src": "12807:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12819:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12819:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12830:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12830:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12815:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12815:3:13"
																},
																"nativeSrc": "12815:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12815:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12807:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12807:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12887:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12887:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12900:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12900:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12911:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12911:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12896:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12896:3:13"
																		},
																		"nativeSrc": "12896:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12896:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12843:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12843:43:13"
																},
																"nativeSrc": "12843:71:13",
																"nodeType": "YulFunctionCall",
																"src": "12843:71:13"
															},
															"nativeSrc": "12843:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "12843:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12968:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12968:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12981:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12981:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12992:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12992:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12977:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12977:3:13"
																		},
																		"nativeSrc": "12977:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12977:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12924:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12924:43:13"
																},
																"nativeSrc": "12924:72:13",
																"nodeType": "YulFunctionCall",
																"src": "12924:72:13"
															},
															"nativeSrc": "12924:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "12924:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13050:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13050:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13063:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13063:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13074:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13074:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13059:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13059:3:13"
																		},
																		"nativeSrc": "13059:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13059:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13006:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "13006:43:13"
																},
																"nativeSrc": "13006:72:13",
																"nodeType": "YulFunctionCall",
																"src": "13006:72:13"
															},
															"nativeSrc": "13006:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "13006:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "12643:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12753:9:13",
														"nodeType": "YulTypedName",
														"src": "12753:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12765:6:13",
														"nodeType": "YulTypedName",
														"src": "12765:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12773:6:13",
														"nodeType": "YulTypedName",
														"src": "12773:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12781:6:13",
														"nodeType": "YulTypedName",
														"src": "12781:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12792:4:13",
														"nodeType": "YulTypedName",
														"src": "12792:4:13",
														"type": ""
													}
												],
												"src": "12643:442:13"
											},
											{
												"body": {
													"nativeSrc": "13119:152:13",
													"nodeType": "YulBlock",
													"src": "13119:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13136:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13136:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13139:77:13",
																		"nodeType": "YulLiteral",
																		"src": "13139:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13129:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13129:6:13"
																},
																"nativeSrc": "13129:88:13",
																"nodeType": "YulFunctionCall",
																"src": "13129:88:13"
															},
															"nativeSrc": "13129:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "13129:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13233:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13233:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13236:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13236:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13226:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13226:6:13"
																},
																"nativeSrc": "13226:15:13",
																"nodeType": "YulFunctionCall",
																"src": "13226:15:13"
															},
															"nativeSrc": "13226:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "13226:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13257:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13257:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13260:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13260:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13250:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13250:6:13"
																},
																"nativeSrc": "13250:15:13",
																"nodeType": "YulFunctionCall",
																"src": "13250:15:13"
															},
															"nativeSrc": "13250:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "13250:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13091:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "13091:180:13"
											},
											{
												"body": {
													"nativeSrc": "13320:190:13",
													"nodeType": "YulBlock",
													"src": "13320:190:13",
													"statements": [
														{
															"nativeSrc": "13330:33:13",
															"nodeType": "YulAssignment",
															"src": "13330:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13357:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13357:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13339:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "13339:17:13"
																},
																"nativeSrc": "13339:24:13",
																"nodeType": "YulFunctionCall",
																"src": "13339:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13330:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "13330:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13453:22:13",
																"nodeType": "YulBlock",
																"src": "13453:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13455:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "13455:16:13"
																			},
																			"nativeSrc": "13455:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13455:18:13"
																		},
																		"nativeSrc": "13455:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "13455:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13378:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13378:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13385:66:13",
																		"nodeType": "YulLiteral",
																		"src": "13385:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13375:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "13375:2:13"
																},
																"nativeSrc": "13375:77:13",
																"nodeType": "YulFunctionCall",
																"src": "13375:77:13"
															},
															"nativeSrc": "13372:103:13",
															"nodeType": "YulIf",
															"src": "13372:103:13"
														},
														{
															"nativeSrc": "13484:20:13",
															"nodeType": "YulAssignment",
															"src": "13484:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13495:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13495:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13502:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13502:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13491:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13491:3:13"
																},
																"nativeSrc": "13491:13:13",
																"nodeType": "YulFunctionCall",
																"src": "13491:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13484:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13484:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "13277:233:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13306:5:13",
														"nodeType": "YulTypedName",
														"src": "13306:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "13316:3:13",
														"nodeType": "YulTypedName",
														"src": "13316:3:13",
														"type": ""
													}
												],
												"src": "13277:233:13"
											},
											{
												"body": {
													"nativeSrc": "13570:87:13",
													"nodeType": "YulBlock",
													"src": "13570:87:13",
													"statements": [
														{
															"nativeSrc": "13580:11:13",
															"nodeType": "YulAssignment",
															"src": "13580:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "13588:3:13",
																"nodeType": "YulIdentifier",
																"src": "13588:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13580:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13580:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13608:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13608:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "13611:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13611:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13601:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13601:6:13"
																},
																"nativeSrc": "13601:14:13",
																"nodeType": "YulFunctionCall",
																"src": "13601:14:13"
															},
															"nativeSrc": "13601:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "13601:14:13"
														},
														{
															"nativeSrc": "13624:26:13",
															"nodeType": "YulAssignment",
															"src": "13624:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13642:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13642:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13645:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13645:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "13632:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "13632:9:13"
																},
																"nativeSrc": "13632:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13632:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13624:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13624:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "13516:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13557:3:13",
														"nodeType": "YulTypedName",
														"src": "13557:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "13565:4:13",
														"nodeType": "YulTypedName",
														"src": "13565:4:13",
														"type": ""
													}
												],
												"src": "13516:141:13"
											},
											{
												"body": {
													"nativeSrc": "13707:49:13",
													"nodeType": "YulBlock",
													"src": "13707:49:13",
													"statements": [
														{
															"nativeSrc": "13717:33:13",
															"nodeType": "YulAssignment",
															"src": "13717:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13735:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "13735:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13742:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13742:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13731:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13731:3:13"
																		},
																		"nativeSrc": "13731:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13731:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13747:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13747:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13727:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13727:3:13"
																},
																"nativeSrc": "13727:23:13",
																"nodeType": "YulFunctionCall",
																"src": "13727:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "13717:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13717:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "13663:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13690:5:13",
														"nodeType": "YulTypedName",
														"src": "13690:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "13700:6:13",
														"nodeType": "YulTypedName",
														"src": "13700:6:13",
														"type": ""
													}
												],
												"src": "13663:93:13"
											},
											{
												"body": {
													"nativeSrc": "13815:54:13",
													"nodeType": "YulBlock",
													"src": "13815:54:13",
													"statements": [
														{
															"nativeSrc": "13825:37:13",
															"nodeType": "YulAssignment",
															"src": "13825:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "13850:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13850:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13856:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13856:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "13846:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13846:3:13"
																},
																"nativeSrc": "13846:16:13",
																"nodeType": "YulFunctionCall",
																"src": "13846:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "13825:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "13825:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "13762:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "13790:4:13",
														"nodeType": "YulTypedName",
														"src": "13790:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "13796:5:13",
														"nodeType": "YulTypedName",
														"src": "13796:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "13806:8:13",
														"nodeType": "YulTypedName",
														"src": "13806:8:13",
														"type": ""
													}
												],
												"src": "13762:107:13"
											},
											{
												"body": {
													"nativeSrc": "13951:317:13",
													"nodeType": "YulBlock",
													"src": "13951:317:13",
													"statements": [
														{
															"nativeSrc": "13961:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13961:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "13982:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "13982:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13994:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13994:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13978:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13978:3:13"
																},
																"nativeSrc": "13978:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13978:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "13965:9:13",
																	"nodeType": "YulTypedName",
																	"src": "13965:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14005:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "14005:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14036:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14036:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14047:66:13",
																		"nodeType": "YulLiteral",
																		"src": "14047:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14017:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "14017:18:13"
																},
																"nativeSrc": "14017:97:13",
																"nodeType": "YulFunctionCall",
																"src": "14017:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "14009:4:13",
																	"nodeType": "YulTypedName",
																	"src": "14009:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14123:51:13",
															"nodeType": "YulAssignment",
															"src": "14123:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14154:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14154:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "14165:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "14165:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14135:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "14135:18:13"
																},
																"nativeSrc": "14135:39:13",
																"nodeType": "YulFunctionCall",
																"src": "14135:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "14123:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "14123:8:13"
																}
															]
														},
														{
															"nativeSrc": "14183:30:13",
															"nodeType": "YulAssignment",
															"src": "14183:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14196:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "14196:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "14207:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "14207:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "14203:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14203:3:13"
																		},
																		"nativeSrc": "14203:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14203:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14192:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14192:3:13"
																},
																"nativeSrc": "14192:21:13",
																"nodeType": "YulFunctionCall",
																"src": "14192:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14183:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "14183:5:13"
																}
															]
														},
														{
															"nativeSrc": "14222:40:13",
															"nodeType": "YulAssignment",
															"src": "14222:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14235:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "14235:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "14246:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "14246:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "14256:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "14256:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14242:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14242:3:13"
																		},
																		"nativeSrc": "14242:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14242:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "14232:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "14232:2:13"
																},
																"nativeSrc": "14232:30:13",
																"nodeType": "YulFunctionCall",
																"src": "14232:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14222:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14222:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "13875:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13912:5:13",
														"nodeType": "YulTypedName",
														"src": "13912:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "13919:10:13",
														"nodeType": "YulTypedName",
														"src": "13919:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "13931:8:13",
														"nodeType": "YulTypedName",
														"src": "13931:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "13944:6:13",
														"nodeType": "YulTypedName",
														"src": "13944:6:13",
														"type": ""
													}
												],
												"src": "13875:393:13"
											},
											{
												"body": {
													"nativeSrc": "14306:28:13",
													"nodeType": "YulBlock",
													"src": "14306:28:13",
													"statements": [
														{
															"nativeSrc": "14316:12:13",
															"nodeType": "YulAssignment",
															"src": "14316:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "14323:5:13",
																"nodeType": "YulIdentifier",
																"src": "14323:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14316:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14316:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "14274:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14292:5:13",
														"nodeType": "YulTypedName",
														"src": "14292:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14302:3:13",
														"nodeType": "YulTypedName",
														"src": "14302:3:13",
														"type": ""
													}
												],
												"src": "14274:60:13"
											},
											{
												"body": {
													"nativeSrc": "14400:82:13",
													"nodeType": "YulBlock",
													"src": "14400:82:13",
													"statements": [
														{
															"nativeSrc": "14410:66:13",
															"nodeType": "YulAssignment",
															"src": "14410:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14468:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "14468:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "14450:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "14450:17:13"
																				},
																				"nativeSrc": "14450:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14450:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "14441:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "14441:8:13"
																		},
																		"nativeSrc": "14441:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14441:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14423:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "14423:17:13"
																},
																"nativeSrc": "14423:53:13",
																"nodeType": "YulFunctionCall",
																"src": "14423:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "14410:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "14410:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "14340:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14380:5:13",
														"nodeType": "YulTypedName",
														"src": "14380:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "14390:9:13",
														"nodeType": "YulTypedName",
														"src": "14390:9:13",
														"type": ""
													}
												],
												"src": "14340:142:13"
											},
											{
												"body": {
													"nativeSrc": "14535:28:13",
													"nodeType": "YulBlock",
													"src": "14535:28:13",
													"statements": [
														{
															"nativeSrc": "14545:12:13",
															"nodeType": "YulAssignment",
															"src": "14545:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "14552:5:13",
																"nodeType": "YulIdentifier",
																"src": "14552:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14545:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14545:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "14488:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14521:5:13",
														"nodeType": "YulTypedName",
														"src": "14521:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14531:3:13",
														"nodeType": "YulTypedName",
														"src": "14531:3:13",
														"type": ""
													}
												],
												"src": "14488:75:13"
											},
											{
												"body": {
													"nativeSrc": "14645:193:13",
													"nodeType": "YulBlock",
													"src": "14645:193:13",
													"statements": [
														{
															"nativeSrc": "14655:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "14655:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "14710:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "14710:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "14679:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "14679:30:13"
																},
																"nativeSrc": "14679:39:13",
																"nodeType": "YulFunctionCall",
																"src": "14679:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "14659:16:13",
																	"nodeType": "YulTypedName",
																	"src": "14659:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "14734:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14734:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "14774:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "14774:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "14768:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "14768:5:13"
																				},
																				"nativeSrc": "14768:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14768:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "14781:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14781:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "14813:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "14813:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "14789:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "14789:23:13"
																				},
																				"nativeSrc": "14789:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14789:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "14740:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "14740:27:13"
																		},
																		"nativeSrc": "14740:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14740:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "14727:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14727:6:13"
																},
																"nativeSrc": "14727:105:13",
																"nodeType": "YulFunctionCall",
																"src": "14727:105:13"
															},
															"nativeSrc": "14727:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "14727:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "14569:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "14622:4:13",
														"nodeType": "YulTypedName",
														"src": "14622:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "14628:6:13",
														"nodeType": "YulTypedName",
														"src": "14628:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "14636:7:13",
														"nodeType": "YulTypedName",
														"src": "14636:7:13",
														"type": ""
													}
												],
												"src": "14569:269:13"
											},
											{
												"body": {
													"nativeSrc": "14893:24:13",
													"nodeType": "YulBlock",
													"src": "14893:24:13",
													"statements": [
														{
															"nativeSrc": "14903:8:13",
															"nodeType": "YulAssignment",
															"src": "14903:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "14910:1:13",
																"nodeType": "YulLiteral",
																"src": "14910:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14903:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14903:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "14844:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14889:3:13",
														"nodeType": "YulTypedName",
														"src": "14889:3:13",
														"type": ""
													}
												],
												"src": "14844:73:13"
											},
											{
												"body": {
													"nativeSrc": "14976:136:13",
													"nodeType": "YulBlock",
													"src": "14976:136:13",
													"statements": [
														{
															"nativeSrc": "14986:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "14986:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "15000:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "15000:30:13"
																},
																"nativeSrc": "15000:32:13",
																"nodeType": "YulFunctionCall",
																"src": "15000:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "14990:6:13",
																	"nodeType": "YulTypedName",
																	"src": "14990:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15085:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15085:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "15091:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15091:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "15099:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15099:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "15041:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "15041:43:13"
																},
																"nativeSrc": "15041:65:13",
																"nodeType": "YulFunctionCall",
																"src": "15041:65:13"
															},
															"nativeSrc": "15041:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "15041:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "14923:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "14962:4:13",
														"nodeType": "YulTypedName",
														"src": "14962:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "14968:6:13",
														"nodeType": "YulTypedName",
														"src": "14968:6:13",
														"type": ""
													}
												],
												"src": "14923:189:13"
											},
											{
												"body": {
													"nativeSrc": "15168:136:13",
													"nodeType": "YulBlock",
													"src": "15168:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "15235:63:13",
																"nodeType": "YulBlock",
																"src": "15235:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15279:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "15279:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15286:1:13",
																					"nodeType": "YulLiteral",
																					"src": "15286:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "15249:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "15249:29:13"
																			},
																			"nativeSrc": "15249:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15249:39:13"
																		},
																		"nativeSrc": "15249:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "15249:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "15188:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "15188:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "15195:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15195:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "15185:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "15185:2:13"
																},
																"nativeSrc": "15185:14:13",
																"nodeType": "YulFunctionCall",
																"src": "15185:14:13"
															},
															"nativeSrc": "15178:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "15200:26:13",
																"nodeType": "YulBlock",
																"src": "15200:26:13",
																"statements": [
																	{
																		"nativeSrc": "15202:22:13",
																		"nodeType": "YulAssignment",
																		"src": "15202:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15215:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "15215:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15222:1:13",
																					"nodeType": "YulLiteral",
																					"src": "15222:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15211:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "15211:3:13"
																			},
																			"nativeSrc": "15211:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15211:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "15202:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "15202:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "15182:2:13",
																"nodeType": "YulBlock",
																"src": "15182:2:13",
																"statements": []
															},
															"src": "15178:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "15118:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "15156:5:13",
														"nodeType": "YulTypedName",
														"src": "15156:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15163:3:13",
														"nodeType": "YulTypedName",
														"src": "15163:3:13",
														"type": ""
													}
												],
												"src": "15118:186:13"
											},
											{
												"body": {
													"nativeSrc": "15389:464:13",
													"nodeType": "YulBlock",
													"src": "15389:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "15415:431:13",
																"nodeType": "YulBlock",
																"src": "15415:431:13",
																"statements": [
																	{
																		"nativeSrc": "15429:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15429:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "15477:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "15477:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "15445:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "15445:31:13"
																			},
																			"nativeSrc": "15445:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15445:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "15433:8:13",
																				"nodeType": "YulTypedName",
																				"src": "15433:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "15496:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15496:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "15519:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "15519:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "15547:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "15547:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "15529:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "15529:17:13"
																					},
																					"nativeSrc": "15529:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "15529:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15515:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "15515:3:13"
																			},
																			"nativeSrc": "15515:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15515:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "15500:11:13",
																				"nodeType": "YulTypedName",
																				"src": "15500:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "15716:27:13",
																			"nodeType": "YulBlock",
																			"src": "15716:27:13",
																			"statements": [
																				{
																					"nativeSrc": "15718:23:13",
																					"nodeType": "YulAssignment",
																					"src": "15718:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "15733:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "15733:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "15718:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "15718:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "15700:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "15700:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15712:2:13",
																					"nodeType": "YulLiteral",
																					"src": "15712:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "15697:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "15697:2:13"
																			},
																			"nativeSrc": "15697:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15697:18:13"
																		},
																		"nativeSrc": "15694:49:13",
																		"nodeType": "YulIf",
																		"src": "15694:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "15785:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "15785:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "15802:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "15802:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "15830:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "15830:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "15812:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "15812:17:13"
																							},
																							"nativeSrc": "15812:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "15812:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "15798:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "15798:3:13"
																					},
																					"nativeSrc": "15798:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "15798:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "15756:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "15756:28:13"
																			},
																			"nativeSrc": "15756:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15756:80:13"
																		},
																		"nativeSrc": "15756:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "15756:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "15406:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15406:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15411:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15411:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15403:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "15403:2:13"
																},
																"nativeSrc": "15403:11:13",
																"nodeType": "YulFunctionCall",
																"src": "15403:11:13"
															},
															"nativeSrc": "15400:446:13",
															"nodeType": "YulIf",
															"src": "15400:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "15310:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "15365:5:13",
														"nodeType": "YulTypedName",
														"src": "15365:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "15372:3:13",
														"nodeType": "YulTypedName",
														"src": "15372:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "15377:10:13",
														"nodeType": "YulTypedName",
														"src": "15377:10:13",
														"type": ""
													}
												],
												"src": "15310:543:13"
											},
											{
												"body": {
													"nativeSrc": "15922:54:13",
													"nodeType": "YulBlock",
													"src": "15922:54:13",
													"statements": [
														{
															"nativeSrc": "15932:37:13",
															"nodeType": "YulAssignment",
															"src": "15932:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "15957:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15957:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15963:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "15963:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "15953:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15953:3:13"
																},
																"nativeSrc": "15953:16:13",
																"nodeType": "YulFunctionCall",
																"src": "15953:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "15932:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "15932:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "15859:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "15897:4:13",
														"nodeType": "YulTypedName",
														"src": "15897:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "15903:5:13",
														"nodeType": "YulTypedName",
														"src": "15903:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "15913:8:13",
														"nodeType": "YulTypedName",
														"src": "15913:8:13",
														"type": ""
													}
												],
												"src": "15859:117:13"
											},
											{
												"body": {
													"nativeSrc": "16033:118:13",
													"nodeType": "YulBlock",
													"src": "16033:118:13",
													"statements": [
														{
															"nativeSrc": "16043:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16043:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16092:1:13",
																						"nodeType": "YulLiteral",
																						"src": "16092:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "16095:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "16095:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "16088:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "16088:3:13"
																				},
																				"nativeSrc": "16088:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16088:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16107:1:13",
																						"nodeType": "YulLiteral",
																						"src": "16107:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "16103:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "16103:3:13"
																				},
																				"nativeSrc": "16103:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16103:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "16059:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "16059:28:13"
																		},
																		"nativeSrc": "16059:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16059:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "16055:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16055:3:13"
																},
																"nativeSrc": "16055:56:13",
																"nodeType": "YulFunctionCall",
																"src": "16055:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16047:4:13",
																	"nodeType": "YulTypedName",
																	"src": "16047:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16120:25:13",
															"nodeType": "YulAssignment",
															"src": "16120:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16134:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16134:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "16140:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16140:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16130:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16130:3:13"
																},
																"nativeSrc": "16130:15:13",
																"nodeType": "YulFunctionCall",
																"src": "16130:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16120:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16120:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "15982:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16010:4:13",
														"nodeType": "YulTypedName",
														"src": "16010:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "16016:5:13",
														"nodeType": "YulTypedName",
														"src": "16016:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16026:6:13",
														"nodeType": "YulTypedName",
														"src": "16026:6:13",
														"type": ""
													}
												],
												"src": "15982:169:13"
											},
											{
												"body": {
													"nativeSrc": "16237:214:13",
													"nodeType": "YulBlock",
													"src": "16237:214:13",
													"statements": [
														{
															"nativeSrc": "16370:37:13",
															"nodeType": "YulAssignment",
															"src": "16370:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16397:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16397:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "16403:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16403:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "16378:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "16378:18:13"
																},
																"nativeSrc": "16378:29:13",
																"nodeType": "YulFunctionCall",
																"src": "16378:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16370:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16370:4:13"
																}
															]
														},
														{
															"nativeSrc": "16416:29:13",
															"nodeType": "YulAssignment",
															"src": "16416:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16427:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16427:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "16437:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16437:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "16440:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "16440:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "16433:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16433:3:13"
																		},
																		"nativeSrc": "16433:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16433:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16424:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "16424:2:13"
																},
																"nativeSrc": "16424:21:13",
																"nodeType": "YulFunctionCall",
																"src": "16424:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "16416:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16416:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "16156:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16218:4:13",
														"nodeType": "YulTypedName",
														"src": "16218:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "16224:3:13",
														"nodeType": "YulTypedName",
														"src": "16224:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "16232:4:13",
														"nodeType": "YulTypedName",
														"src": "16232:4:13",
														"type": ""
													}
												],
												"src": "16156:295:13"
											},
											{
												"body": {
													"nativeSrc": "16548:1303:13",
													"nodeType": "YulBlock",
													"src": "16548:1303:13",
													"statements": [
														{
															"nativeSrc": "16559:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16559:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "16606:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16606:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "16573:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "16573:32:13"
																},
																"nativeSrc": "16573:37:13",
																"nodeType": "YulFunctionCall",
																"src": "16573:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "16563:6:13",
																	"nodeType": "YulTypedName",
																	"src": "16563:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16695:22:13",
																"nodeType": "YulBlock",
																"src": "16695:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "16697:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "16697:16:13"
																			},
																			"nativeSrc": "16697:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16697:18:13"
																		},
																		"nativeSrc": "16697:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16697:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "16667:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16667:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16675:18:13",
																		"nodeType": "YulLiteral",
																		"src": "16675:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16664:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "16664:2:13"
																},
																"nativeSrc": "16664:30:13",
																"nodeType": "YulFunctionCall",
																"src": "16664:30:13"
															},
															"nativeSrc": "16661:56:13",
															"nodeType": "YulIf",
															"src": "16661:56:13"
														},
														{
															"nativeSrc": "16727:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16727:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "16773:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "16773:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "16767:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "16767:5:13"
																		},
																		"nativeSrc": "16767:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16767:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "16741:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "16741:25:13"
																},
																"nativeSrc": "16741:38:13",
																"nodeType": "YulFunctionCall",
																"src": "16741:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "16731:6:13",
																	"nodeType": "YulTypedName",
																	"src": "16731:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16872:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16872:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "16878:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16878:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "16886:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16886:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "16826:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "16826:45:13"
																},
																"nativeSrc": "16826:67:13",
																"nodeType": "YulFunctionCall",
																"src": "16826:67:13"
															},
															"nativeSrc": "16826:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "16826:67:13"
														},
														{
															"nativeSrc": "16903:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16903:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "16920:1:13",
																"nodeType": "YulLiteral",
																"src": "16920:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "16907:9:13",
																	"nodeType": "YulTypedName",
																	"src": "16907:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16931:17:13",
															"nodeType": "YulAssignment",
															"src": "16931:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "16944:4:13",
																"nodeType": "YulLiteral",
																"src": "16944:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "16931:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "16931:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "16995:611:13",
																		"nodeType": "YulBlock",
																		"src": "16995:611:13",
																		"statements": [
																			{
																				"nativeSrc": "17009:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17009:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "17028:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "17028:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "17040:4:13",
																									"nodeType": "YulLiteral",
																									"src": "17040:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "17036:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "17036:3:13"
																							},
																							"nativeSrc": "17036:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "17036:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "17024:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "17024:3:13"
																					},
																					"nativeSrc": "17024:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "17024:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "17013:7:13",
																						"nodeType": "YulTypedName",
																						"src": "17013:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17060:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17060:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17106:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "17106:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "17074:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "17074:31:13"
																					},
																					"nativeSrc": "17074:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "17074:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "17064:6:13",
																						"nodeType": "YulTypedName",
																						"src": "17064:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17124:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17124:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17133:1:13",
																					"nodeType": "YulLiteral",
																					"src": "17133:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "17128:1:13",
																						"nodeType": "YulTypedName",
																						"src": "17128:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17192:163:13",
																					"nodeType": "YulBlock",
																					"src": "17192:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17217:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "17217:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "17235:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "17235:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "17240:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "17240:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "17231:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "17231:3:13"
																												},
																												"nativeSrc": "17231:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "17231:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "17225:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "17225:5:13"
																										},
																										"nativeSrc": "17225:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "17225:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "17210:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "17210:6:13"
																								},
																								"nativeSrc": "17210:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "17210:42:13"
																							},
																							"nativeSrc": "17210:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "17210:42:13"
																						},
																						{
																							"nativeSrc": "17269:24:13",
																							"nodeType": "YulAssignment",
																							"src": "17269:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17283:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "17283:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17291:1:13",
																										"nodeType": "YulLiteral",
																										"src": "17291:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17279:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "17279:3:13"
																								},
																								"nativeSrc": "17279:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "17279:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "17269:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "17269:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "17310:31:13",
																							"nodeType": "YulAssignment",
																							"src": "17310:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "17327:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "17327:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17338:2:13",
																										"nodeType": "YulLiteral",
																										"src": "17338:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17323:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "17323:3:13"
																								},
																								"nativeSrc": "17323:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "17323:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "17310:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "17310:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "17158:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "17158:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17161:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "17161:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17155:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "17155:2:13"
																					},
																					"nativeSrc": "17155:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "17155:14:13"
																				},
																				"nativeSrc": "17147:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "17170:21:13",
																					"nodeType": "YulBlock",
																					"src": "17170:21:13",
																					"statements": [
																						{
																							"nativeSrc": "17172:17:13",
																							"nodeType": "YulAssignment",
																							"src": "17172:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "17181:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "17181:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17184:4:13",
																										"nodeType": "YulLiteral",
																										"src": "17184:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17177:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "17177:3:13"
																								},
																								"nativeSrc": "17177:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "17177:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "17172:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "17172:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "17151:3:13",
																					"nodeType": "YulBlock",
																					"src": "17151:3:13",
																					"statements": []
																				},
																				"src": "17147:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "17391:156:13",
																					"nodeType": "YulBlock",
																					"src": "17391:156:13",
																					"statements": [
																						{
																							"nativeSrc": "17409:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "17409:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "17436:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "17436:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "17441:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "17441:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "17432:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "17432:3:13"
																										},
																										"nativeSrc": "17432:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "17432:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "17426:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "17426:5:13"
																								},
																								"nativeSrc": "17426:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "17426:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "17413:9:13",
																									"nodeType": "YulTypedName",
																									"src": "17413:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17476:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "17476:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "17503:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "17503:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "17518:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "17518:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "17526:4:13",
																														"nodeType": "YulLiteral",
																														"src": "17526:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "17514:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "17514:3:13"
																												},
																												"nativeSrc": "17514:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "17514:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "17484:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "17484:18:13"
																										},
																										"nativeSrc": "17484:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "17484:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "17469:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "17469:6:13"
																								},
																								"nativeSrc": "17469:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "17469:64:13"
																							},
																							"nativeSrc": "17469:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "17469:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17374:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "17374:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "17383:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "17383:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17371:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "17371:2:13"
																					},
																					"nativeSrc": "17371:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "17371:19:13"
																				},
																				"nativeSrc": "17368:179:13",
																				"nodeType": "YulIf",
																				"src": "17368:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17567:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "17567:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "17581:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "17581:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "17589:1:13",
																											"nodeType": "YulLiteral",
																											"src": "17589:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "17577:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "17577:3:13"
																									},
																									"nativeSrc": "17577:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "17577:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "17593:1:13",
																									"nodeType": "YulLiteral",
																									"src": "17593:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "17573:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "17573:3:13"
																							},
																							"nativeSrc": "17573:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "17573:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "17560:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "17560:6:13"
																					},
																					"nativeSrc": "17560:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "17560:36:13"
																				},
																				"nativeSrc": "17560:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "17560:36:13"
																			}
																		]
																	},
																	"nativeSrc": "16988:618:13",
																	"nodeType": "YulCase",
																	"src": "16988:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16993:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16993:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "17623:222:13",
																		"nodeType": "YulBlock",
																		"src": "17623:222:13",
																		"statements": [
																			{
																				"nativeSrc": "17637:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17637:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17650:1:13",
																					"nodeType": "YulLiteral",
																					"src": "17650:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "17641:5:13",
																						"nodeType": "YulTypedName",
																						"src": "17641:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17674:67:13",
																					"nodeType": "YulBlock",
																					"src": "17674:67:13",
																					"statements": [
																						{
																							"nativeSrc": "17692:35:13",
																							"nodeType": "YulAssignment",
																							"src": "17692:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "17711:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "17711:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "17716:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "17716:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "17707:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "17707:3:13"
																										},
																										"nativeSrc": "17707:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "17707:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "17701:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "17701:5:13"
																								},
																								"nativeSrc": "17701:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "17701:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "17692:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "17692:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "17667:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "17667:6:13"
																				},
																				"nativeSrc": "17664:77:13",
																				"nodeType": "YulIf",
																				"src": "17664:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17761:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "17761:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "17820:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "17820:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "17827:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "17827:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "17767:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "17767:52:13"
																							},
																							"nativeSrc": "17767:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "17767:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "17754:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "17754:6:13"
																					},
																					"nativeSrc": "17754:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "17754:81:13"
																				},
																				"nativeSrc": "17754:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "17754:81:13"
																			}
																		]
																	},
																	"nativeSrc": "17615:230:13",
																	"nodeType": "YulCase",
																	"src": "17615:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "16968:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16968:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16976:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16976:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16965:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "16965:2:13"
																},
																"nativeSrc": "16965:14:13",
																"nodeType": "YulFunctionCall",
																"src": "16965:14:13"
															},
															"nativeSrc": "16958:887:13",
															"nodeType": "YulSwitch",
															"src": "16958:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "16456:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16537:4:13",
														"nodeType": "YulTypedName",
														"src": "16537:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "16543:3:13",
														"nodeType": "YulTypedName",
														"src": "16543:3:13",
														"type": ""
													}
												],
												"src": "16456:1395:13"
											},
											{
												"body": {
													"nativeSrc": "17963:64:13",
													"nodeType": "YulBlock",
													"src": "17963:64:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17985:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17985:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17993:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17993:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17981:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17981:3:13"
																		},
																		"nativeSrc": "17981:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17981:14:13"
																	},
																	{
																		"hexValue": "546f6b656e20646f6573206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "17997:22:13",
																		"nodeType": "YulLiteral",
																		"src": "17997:22:13",
																		"type": "",
																		"value": "Token does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17974:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17974:6:13"
																},
																"nativeSrc": "17974:46:13",
																"nodeType": "YulFunctionCall",
																"src": "17974:46:13"
															},
															"nativeSrc": "17974:46:13",
															"nodeType": "YulExpressionStatement",
															"src": "17974:46:13"
														}
													]
												},
												"name": "store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726",
												"nativeSrc": "17857:170:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17955:6:13",
														"nodeType": "YulTypedName",
														"src": "17955:6:13",
														"type": ""
													}
												],
												"src": "17857:170:13"
											},
											{
												"body": {
													"nativeSrc": "18179:220:13",
													"nodeType": "YulBlock",
													"src": "18179:220:13",
													"statements": [
														{
															"nativeSrc": "18189:74:13",
															"nodeType": "YulAssignment",
															"src": "18189:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18255:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18255:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18260:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18260:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18196:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "18196:58:13"
																},
																"nativeSrc": "18196:67:13",
																"nodeType": "YulFunctionCall",
																"src": "18196:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18189:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18189:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18361:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18361:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726",
																	"nativeSrc": "18272:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "18272:88:13"
																},
																"nativeSrc": "18272:93:13",
																"nodeType": "YulFunctionCall",
																"src": "18272:93:13"
															},
															"nativeSrc": "18272:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "18272:93:13"
														},
														{
															"nativeSrc": "18374:19:13",
															"nodeType": "YulAssignment",
															"src": "18374:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18385:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18385:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18390:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18390:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18381:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18381:3:13"
																},
																"nativeSrc": "18381:12:13",
																"nodeType": "YulFunctionCall",
																"src": "18381:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18374:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18374:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18033:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18167:3:13",
														"nodeType": "YulTypedName",
														"src": "18167:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18175:3:13",
														"nodeType": "YulTypedName",
														"src": "18175:3:13",
														"type": ""
													}
												],
												"src": "18033:366:13"
											},
											{
												"body": {
													"nativeSrc": "18576:248:13",
													"nodeType": "YulBlock",
													"src": "18576:248:13",
													"statements": [
														{
															"nativeSrc": "18586:26:13",
															"nodeType": "YulAssignment",
															"src": "18586:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18598:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18598:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18609:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18609:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18594:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18594:3:13"
																},
																"nativeSrc": "18594:18:13",
																"nodeType": "YulFunctionCall",
																"src": "18594:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18586:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18586:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18633:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18633:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18644:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18644:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18629:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18629:3:13"
																		},
																		"nativeSrc": "18629:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18629:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18652:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "18652:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18658:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18658:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18648:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18648:3:13"
																		},
																		"nativeSrc": "18648:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18648:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18622:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18622:6:13"
																},
																"nativeSrc": "18622:47:13",
																"nodeType": "YulFunctionCall",
																"src": "18622:47:13"
															},
															"nativeSrc": "18622:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "18622:47:13"
														},
														{
															"nativeSrc": "18678:139:13",
															"nodeType": "YulAssignment",
															"src": "18678:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18812:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18812:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18686:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "18686:124:13"
																},
																"nativeSrc": "18686:131:13",
																"nodeType": "YulFunctionCall",
																"src": "18686:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18678:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18678:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18405:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18556:9:13",
														"nodeType": "YulTypedName",
														"src": "18556:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18571:4:13",
														"nodeType": "YulTypedName",
														"src": "18571:4:13",
														"type": ""
													}
												],
												"src": "18405:419:13"
											},
											{
												"body": {
													"nativeSrc": "18944:34:13",
													"nodeType": "YulBlock",
													"src": "18944:34:13",
													"statements": [
														{
															"nativeSrc": "18954:18:13",
															"nodeType": "YulAssignment",
															"src": "18954:18:13",
															"value": {
																"name": "pos",
																"nativeSrc": "18969:3:13",
																"nodeType": "YulIdentifier",
																"src": "18969:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "18954:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "18954:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18830:148:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18916:3:13",
														"nodeType": "YulTypedName",
														"src": "18916:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18921:6:13",
														"nodeType": "YulTypedName",
														"src": "18921:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "18932:11:13",
														"nodeType": "YulTypedName",
														"src": "18932:11:13",
														"type": ""
													}
												],
												"src": "18830:148:13"
											},
											{
												"body": {
													"nativeSrc": "19094:280:13",
													"nodeType": "YulBlock",
													"src": "19094:280:13",
													"statements": [
														{
															"nativeSrc": "19104:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "19104:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19151:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "19151:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "19118:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "19118:32:13"
																},
																"nativeSrc": "19118:39:13",
																"nodeType": "YulFunctionCall",
																"src": "19118:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "19108:6:13",
																	"nodeType": "YulTypedName",
																	"src": "19108:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19166:96:13",
															"nodeType": "YulAssignment",
															"src": "19166:96:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19250:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19250:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19255:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19255:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19173:76:13",
																	"nodeType": "YulIdentifier",
																	"src": "19173:76:13"
																},
																"nativeSrc": "19173:89:13",
																"nodeType": "YulFunctionCall",
																"src": "19173:89:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19166:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19166:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19310:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "19310:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19317:4:13",
																				"nodeType": "YulLiteral",
																				"src": "19317:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19306:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19306:3:13"
																		},
																		"nativeSrc": "19306:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19306:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19324:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19324:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19329:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19329:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "19271:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "19271:34:13"
																},
																"nativeSrc": "19271:65:13",
																"nodeType": "YulFunctionCall",
																"src": "19271:65:13"
															},
															"nativeSrc": "19271:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "19271:65:13"
														},
														{
															"nativeSrc": "19345:23:13",
															"nodeType": "YulAssignment",
															"src": "19345:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19356:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19356:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19361:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19361:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19352:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19352:3:13"
																},
																"nativeSrc": "19352:16:13",
																"nodeType": "YulFunctionCall",
																"src": "19352:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19345:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19345:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18984:390:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19075:5:13",
														"nodeType": "YulTypedName",
														"src": "19075:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19082:3:13",
														"nodeType": "YulTypedName",
														"src": "19082:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19090:3:13",
														"nodeType": "YulTypedName",
														"src": "19090:3:13",
														"type": ""
													}
												],
												"src": "18984:390:13"
											},
											{
												"body": {
													"nativeSrc": "19564:251:13",
													"nodeType": "YulBlock",
													"src": "19564:251:13",
													"statements": [
														{
															"nativeSrc": "19575:102:13",
															"nodeType": "YulAssignment",
															"src": "19575:102:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19664:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19664:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19673:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19673:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19582:81:13",
																	"nodeType": "YulIdentifier",
																	"src": "19582:81:13"
																},
																"nativeSrc": "19582:95:13",
																"nodeType": "YulFunctionCall",
																"src": "19582:95:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19575:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19575:3:13"
																}
															]
														},
														{
															"nativeSrc": "19687:102:13",
															"nodeType": "YulAssignment",
															"src": "19687:102:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19776:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19776:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19785:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19785:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19694:81:13",
																	"nodeType": "YulIdentifier",
																	"src": "19694:81:13"
																},
																"nativeSrc": "19694:95:13",
																"nodeType": "YulFunctionCall",
																"src": "19694:95:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19687:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19687:3:13"
																}
															]
														},
														{
															"nativeSrc": "19799:10:13",
															"nodeType": "YulAssignment",
															"src": "19799:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "19806:3:13",
																"nodeType": "YulIdentifier",
																"src": "19806:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19799:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19799:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "19380:435:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19535:3:13",
														"nodeType": "YulTypedName",
														"src": "19535:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19541:6:13",
														"nodeType": "YulTypedName",
														"src": "19541:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19549:6:13",
														"nodeType": "YulTypedName",
														"src": "19549:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19560:3:13",
														"nodeType": "YulTypedName",
														"src": "19560:3:13",
														"type": ""
													}
												],
												"src": "19380:435:13"
											},
											{
												"body": {
													"nativeSrc": "19879:40:13",
													"nodeType": "YulBlock",
													"src": "19879:40:13",
													"statements": [
														{
															"nativeSrc": "19890:22:13",
															"nodeType": "YulAssignment",
															"src": "19890:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19906:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "19906:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19900:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "19900:5:13"
																},
																"nativeSrc": "19900:12:13",
																"nodeType": "YulFunctionCall",
																"src": "19900:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "19890:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19890:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "19821:98:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19862:5:13",
														"nodeType": "YulTypedName",
														"src": "19862:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "19872:6:13",
														"nodeType": "YulTypedName",
														"src": "19872:6:13",
														"type": ""
													}
												],
												"src": "19821:98:13"
											},
											{
												"body": {
													"nativeSrc": "20020:73:13",
													"nodeType": "YulBlock",
													"src": "20020:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20037:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20037:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20042:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20042:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20030:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20030:6:13"
																},
																"nativeSrc": "20030:19:13",
																"nodeType": "YulFunctionCall",
																"src": "20030:19:13"
															},
															"nativeSrc": "20030:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "20030:19:13"
														},
														{
															"nativeSrc": "20058:29:13",
															"nodeType": "YulAssignment",
															"src": "20058:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20077:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20077:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20082:4:13",
																		"nodeType": "YulLiteral",
																		"src": "20082:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20073:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20073:3:13"
																},
																"nativeSrc": "20073:14:13",
																"nodeType": "YulFunctionCall",
																"src": "20073:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "20058:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "20058:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "19925:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19992:3:13",
														"nodeType": "YulTypedName",
														"src": "19992:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "19997:6:13",
														"nodeType": "YulTypedName",
														"src": "19997:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "20008:11:13",
														"nodeType": "YulTypedName",
														"src": "20008:11:13",
														"type": ""
													}
												],
												"src": "19925:168:13"
											},
											{
												"body": {
													"nativeSrc": "20189:283:13",
													"nodeType": "YulBlock",
													"src": "20189:283:13",
													"statements": [
														{
															"nativeSrc": "20199:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "20199:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20245:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "20245:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "20213:31:13",
																	"nodeType": "YulIdentifier",
																	"src": "20213:31:13"
																},
																"nativeSrc": "20213:38:13",
																"nodeType": "YulFunctionCall",
																"src": "20213:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "20203:6:13",
																	"nodeType": "YulTypedName",
																	"src": "20203:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20260:77:13",
															"nodeType": "YulAssignment",
															"src": "20260:77:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20325:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20325:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20330:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20330:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "20267:57:13",
																	"nodeType": "YulIdentifier",
																	"src": "20267:57:13"
																},
																"nativeSrc": "20267:70:13",
																"nodeType": "YulFunctionCall",
																"src": "20267:70:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20260:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20260:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20385:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "20385:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20392:4:13",
																				"nodeType": "YulLiteral",
																				"src": "20392:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20381:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20381:3:13"
																		},
																		"nativeSrc": "20381:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20381:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20399:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20399:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20404:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20404:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "20346:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "20346:34:13"
																},
																"nativeSrc": "20346:65:13",
																"nodeType": "YulFunctionCall",
																"src": "20346:65:13"
															},
															"nativeSrc": "20346:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "20346:65:13"
														},
														{
															"nativeSrc": "20420:46:13",
															"nodeType": "YulAssignment",
															"src": "20420:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20431:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20431:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "20458:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20458:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "20436:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "20436:21:13"
																		},
																		"nativeSrc": "20436:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20436:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20427:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20427:3:13"
																},
																"nativeSrc": "20427:39:13",
																"nodeType": "YulFunctionCall",
																"src": "20427:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20420:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20420:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "20099:373:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20170:5:13",
														"nodeType": "YulTypedName",
														"src": "20170:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20177:3:13",
														"nodeType": "YulTypedName",
														"src": "20177:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20185:3:13",
														"nodeType": "YulTypedName",
														"src": "20185:3:13",
														"type": ""
													}
												],
												"src": "20099:373:13"
											},
											{
												"body": {
													"nativeSrc": "20678:440:13",
													"nodeType": "YulBlock",
													"src": "20678:440:13",
													"statements": [
														{
															"nativeSrc": "20688:27:13",
															"nodeType": "YulAssignment",
															"src": "20688:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20700:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "20700:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20711:3:13",
																		"nodeType": "YulLiteral",
																		"src": "20711:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20696:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20696:3:13"
																},
																"nativeSrc": "20696:19:13",
																"nodeType": "YulFunctionCall",
																"src": "20696:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20688:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20688:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20769:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20769:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20782:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20782:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20793:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20793:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20778:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20778:3:13"
																		},
																		"nativeSrc": "20778:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20778:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20725:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "20725:43:13"
																},
																"nativeSrc": "20725:71:13",
																"nodeType": "YulFunctionCall",
																"src": "20725:71:13"
															},
															"nativeSrc": "20725:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "20725:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20850:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20850:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20863:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20863:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20874:2:13",
																				"nodeType": "YulLiteral",
																				"src": "20874:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20859:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20859:3:13"
																		},
																		"nativeSrc": "20859:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20859:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20806:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "20806:43:13"
																},
																"nativeSrc": "20806:72:13",
																"nodeType": "YulFunctionCall",
																"src": "20806:72:13"
															},
															"nativeSrc": "20806:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "20806:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20932:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20932:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20945:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20945:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20956:2:13",
																				"nodeType": "YulLiteral",
																				"src": "20956:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20941:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20941:3:13"
																		},
																		"nativeSrc": "20941:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20941:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20888:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "20888:43:13"
																},
																"nativeSrc": "20888:72:13",
																"nodeType": "YulFunctionCall",
																"src": "20888:72:13"
															},
															"nativeSrc": "20888:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "20888:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20981:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20981:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20992:2:13",
																				"nodeType": "YulLiteral",
																				"src": "20992:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20977:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20977:3:13"
																		},
																		"nativeSrc": "20977:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20977:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21001:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "21001:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21007:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21007:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20997:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20997:3:13"
																		},
																		"nativeSrc": "20997:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20997:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20970:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20970:6:13"
																},
																"nativeSrc": "20970:48:13",
																"nodeType": "YulFunctionCall",
																"src": "20970:48:13"
															},
															"nativeSrc": "20970:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "20970:48:13"
														},
														{
															"nativeSrc": "21027:84:13",
															"nodeType": "YulAssignment",
															"src": "21027:84:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "21097:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21097:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "21106:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "21106:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "21035:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "21035:61:13"
																},
																"nativeSrc": "21035:76:13",
																"nodeType": "YulFunctionCall",
																"src": "21035:76:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21027:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21027:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "20478:640:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20626:9:13",
														"nodeType": "YulTypedName",
														"src": "20626:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "20638:6:13",
														"nodeType": "YulTypedName",
														"src": "20638:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20646:6:13",
														"nodeType": "YulTypedName",
														"src": "20646:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20654:6:13",
														"nodeType": "YulTypedName",
														"src": "20654:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20662:6:13",
														"nodeType": "YulTypedName",
														"src": "20662:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20673:4:13",
														"nodeType": "YulTypedName",
														"src": "20673:4:13",
														"type": ""
													}
												],
												"src": "20478:640:13"
											},
											{
												"body": {
													"nativeSrc": "21186:79:13",
													"nodeType": "YulBlock",
													"src": "21186:79:13",
													"statements": [
														{
															"nativeSrc": "21196:22:13",
															"nodeType": "YulAssignment",
															"src": "21196:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "21211:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21211:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21205:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "21205:5:13"
																},
																"nativeSrc": "21205:13:13",
																"nodeType": "YulFunctionCall",
																"src": "21205:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21196:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "21196:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21253:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "21253:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "21227:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "21227:25:13"
																},
																"nativeSrc": "21227:32:13",
																"nodeType": "YulFunctionCall",
																"src": "21227:32:13"
															},
															"nativeSrc": "21227:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "21227:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "21124:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "21164:6:13",
														"nodeType": "YulTypedName",
														"src": "21164:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21172:3:13",
														"nodeType": "YulTypedName",
														"src": "21172:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "21180:5:13",
														"nodeType": "YulTypedName",
														"src": "21180:5:13",
														"type": ""
													}
												],
												"src": "21124:141:13"
											},
											{
												"body": {
													"nativeSrc": "21347:273:13",
													"nodeType": "YulBlock",
													"src": "21347:273:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "21393:83:13",
																"nodeType": "YulBlock",
																"src": "21393:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "21395:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "21395:77:13"
																			},
																			"nativeSrc": "21395:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "21395:79:13"
																		},
																		"nativeSrc": "21395:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "21395:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21368:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "21368:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21377:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21377:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21364:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21364:3:13"
																		},
																		"nativeSrc": "21364:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21364:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21389:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21389:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21360:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21360:3:13"
																},
																"nativeSrc": "21360:32:13",
																"nodeType": "YulFunctionCall",
																"src": "21360:32:13"
															},
															"nativeSrc": "21357:119:13",
															"nodeType": "YulIf",
															"src": "21357:119:13"
														},
														{
															"nativeSrc": "21486:127:13",
															"nodeType": "YulBlock",
															"src": "21486:127:13",
															"statements": [
																{
																	"nativeSrc": "21501:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21501:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21515:1:13",
																		"nodeType": "YulLiteral",
																		"src": "21515:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21505:6:13",
																			"nodeType": "YulTypedName",
																			"src": "21505:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21530:73:13",
																	"nodeType": "YulAssignment",
																	"src": "21530:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21575:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "21575:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21586:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "21586:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21571:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "21571:3:13"
																				},
																				"nativeSrc": "21571:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "21571:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21595:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "21595:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "21540:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "21540:30:13"
																		},
																		"nativeSrc": "21540:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21540:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "21530:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "21530:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "21271:349:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21317:9:13",
														"nodeType": "YulTypedName",
														"src": "21317:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21328:7:13",
														"nodeType": "YulTypedName",
														"src": "21328:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21340:6:13",
														"nodeType": "YulTypedName",
														"src": "21340:6:13",
														"type": ""
													}
												],
												"src": "21271:349:13"
											},
											{
												"body": {
													"nativeSrc": "21654:152:13",
													"nodeType": "YulBlock",
													"src": "21654:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21671:1:13",
																		"nodeType": "YulLiteral",
																		"src": "21671:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21674:77:13",
																		"nodeType": "YulLiteral",
																		"src": "21674:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21664:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21664:6:13"
																},
																"nativeSrc": "21664:88:13",
																"nodeType": "YulFunctionCall",
																"src": "21664:88:13"
															},
															"nativeSrc": "21664:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "21664:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21768:1:13",
																		"nodeType": "YulLiteral",
																		"src": "21768:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21771:4:13",
																		"nodeType": "YulLiteral",
																		"src": "21771:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21761:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21761:6:13"
																},
																"nativeSrc": "21761:15:13",
																"nodeType": "YulFunctionCall",
																"src": "21761:15:13"
															},
															"nativeSrc": "21761:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "21761:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21792:1:13",
																		"nodeType": "YulLiteral",
																		"src": "21792:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21795:4:13",
																		"nodeType": "YulLiteral",
																		"src": "21795:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21785:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21785:6:13"
																},
																"nativeSrc": "21785:15:13",
																"nodeType": "YulFunctionCall",
																"src": "21785:15:13"
															},
															"nativeSrc": "21785:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "21785:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "21626:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "21626:180:13"
											},
											{
												"body": {
													"nativeSrc": "21938:206:13",
													"nodeType": "YulBlock",
													"src": "21938:206:13",
													"statements": [
														{
															"nativeSrc": "21948:26:13",
															"nodeType": "YulAssignment",
															"src": "21948:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21960:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "21960:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21971:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21971:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21956:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21956:3:13"
																},
																"nativeSrc": "21956:18:13",
																"nodeType": "YulFunctionCall",
																"src": "21956:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21948:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21948:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22028:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22028:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22041:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22041:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22052:1:13",
																				"nodeType": "YulLiteral",
																				"src": "22052:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22037:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22037:3:13"
																		},
																		"nativeSrc": "22037:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22037:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21984:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "21984:43:13"
																},
																"nativeSrc": "21984:71:13",
																"nodeType": "YulFunctionCall",
																"src": "21984:71:13"
															},
															"nativeSrc": "21984:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "21984:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22109:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22109:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22122:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22122:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22133:2:13",
																				"nodeType": "YulLiteral",
																				"src": "22133:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22118:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22118:3:13"
																		},
																		"nativeSrc": "22118:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22118:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22065:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "22065:43:13"
																},
																"nativeSrc": "22065:72:13",
																"nodeType": "YulFunctionCall",
																"src": "22065:72:13"
															},
															"nativeSrc": "22065:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "22065:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "21812:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21902:9:13",
														"nodeType": "YulTypedName",
														"src": "21902:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21914:6:13",
														"nodeType": "YulTypedName",
														"src": "21914:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21922:6:13",
														"nodeType": "YulTypedName",
														"src": "21922:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21933:4:13",
														"nodeType": "YulTypedName",
														"src": "21933:4:13",
														"type": ""
													}
												],
												"src": "21812:332:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610155575f3560e01c806375794a3c116100c1578063a22cb4651161007a578063a22cb465146103d5578063b88d4fde146103f1578063c87b56dd1461040d578063d7d0df2a1461043d578063e985e9c514610459578063f2fde38b1461048957610155565b806375794a3c146102ff5780637b47ec1a1461031d57806380964805146103395780638796ec86146103695780638da5cb5b1461039957806395d89b41146103b757610155565b806323b872dd1161011357806323b872dd146102415780633d02d0c91461025d57806342842e0e146102795780636352211e1461029557806370a08231146102c5578063715018a6146102f557610155565b8062923f9e1461015957806301ffc9a71461018957806306fdde03146101b9578063081812fc146101d7578063095ea7b3146102075780631fd8293f14610223575b5f80fd5b610173600480360381019061016e9190611d0c565b6104a5565b6040516101809190611d51565b60405180910390f35b6101a3600480360381019061019e9190611dbf565b6104e5565b6040516101b09190611d51565b60405180910390f35b6101c16105c6565b6040516101ce9190611e5a565b60405180910390f35b6101f160048036038101906101ec9190611d0c565b610655565b6040516101fe9190611eb9565b60405180910390f35b610221600480360381019061021c9190611efc565b610670565b005b61022b610686565b6040516102389190611eb9565b60405180910390f35b61025b60048036038101906102569190611f3a565b6106ab565b005b610277600480360381019061027291906120b6565b6107aa565b005b610293600480360381019061028e9190611f3a565b6107fd565b005b6102af60048036038101906102aa9190611d0c565b61081c565b6040516102bc9190611eb9565b60405180910390f35b6102df60048036038101906102da9190612110565b61082d565b6040516102ec919061214a565b60405180910390f35b6102fd6108e3565b005b6103076108f6565b604051610314919061214a565b60405180910390f35b61033760048036038101906103329190611d0c565b6108fc565b005b610353600480360381019061034e9190611d0c565b610974565b6040516103609190611e5a565b60405180910390f35b610383600480360381019061037e9190611d0c565b610a0f565b6040516103909190611e5a565b60405180910390f35b6103a1610af8565b6040516103ae9190611eb9565b60405180910390f35b6103bf610b20565b6040516103cc9190611e5a565b60405180910390f35b6103ef60048036038101906103ea919061218d565b610bb0565b005b61040b60048036038101906104069190612269565b610bc6565b005b61042760048036038101906104229190611d0c565b610be3565b6040516104349190611e5a565b60405180910390f35b61045760048036038101906104529190612110565b610c49565b005b610473600480360381019061046e91906122e9565b610c8c565b6040516104809190611d51565b60405180910390f35b6104a3600480360381019061049e9190612110565b610d1a565b005b5f8073ffffffffffffffffffffffffffffffffffffffff166104c68361081c565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105af57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806105bf57506105be82610d9e565b5b9050919050565b60605f80546105d490612354565b80601f016020809104026020016040519081016040528092919081815260200182805461060090612354565b801561064b5780601f106106225761010080835404028352916020019161064b565b820191905f5260205f20905b81548152906001019060200180831161062e57829003601f168201915b5050505050905090565b5f61065f82610e07565b5061066982610e8d565b9050919050565b610682828261067d610ec6565b610ecd565b5050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361071b575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016107129190611eb9565b60405180910390fd5b5f61072e8383610729610ec6565b610edf565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107a4578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161079b93929190612384565b60405180910390fd5b50505050565b6107b26110ea565b5f600754905060075f8154809291906107ca906123e6565b91905055506107d98382611171565b8160085f8381526020019081526020015f2090816107f791906125ca565b50505050565b61081783838360405180602001604052805f815250610bc6565b505050565b5f61082682610e07565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361089e575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016108959190611eb9565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6108eb6110ea565b6108f45f611264565b565b60075481565b6109046110ea565b61090d816104a5565b61094c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610943906126e3565b60405180910390fd5b61095581611327565b60085f8281526020019081526020015f205f6109719190611c70565b50565b6008602052805f5260405f205f91509050805461099090612354565b80601f01602080910402602001604051908101604052809291908181526020018280546109bc90612354565b8015610a075780601f106109de57610100808354040283529160200191610a07565b820191905f5260205f20905b8154815290600101906020018083116109ea57829003601f168201915b505050505081565b6060610a1a826104a5565b610a59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a50906126e3565b60405180910390fd5b60085f8381526020019081526020015f208054610a7590612354565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa190612354565b8015610aec5780601f10610ac357610100808354040283529160200191610aec565b820191905f5260205f20905b815481529060010190602001808311610acf57829003601f168201915b50505050509050919050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060018054610b2f90612354565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5b90612354565b8015610ba65780601f10610b7d57610100808354040283529160200191610ba6565b820191905f5260205f20905b815481529060010190602001808311610b8957829003601f168201915b5050505050905090565b610bc2610bbb610ec6565b83836113a9565b5050565b610bd18484846106ab565b610bdd84848484611512565b50505050565b6060610bee82610e07565b505f610bf86116c4565b90505f815111610c165760405180602001604052805f815250610c41565b80610c20846116da565b604051602001610c3192919061273b565b6040516020818303038152906040525b915050919050565b8060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610d226110ea565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d92575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d899190611eb9565b60405180910390fd5b610d9b81611264565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610e12836117a4565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e8457826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610e7b919061214a565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610eda83838360016117dd565b505050565b5f80610eea846117a4565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610f2b57610f2a81848661199c565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610fb657610f6a5f855f806117dd565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461103557600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6110f2610ec6565b73ffffffffffffffffffffffffffffffffffffffff16611110610af8565b73ffffffffffffffffffffffffffffffffffffffff161461116f57611133610ec6565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111669190611eb9565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111e1575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111d89190611eb9565b60405180910390fd5b5f6111ed83835f610edf565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461125f575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016112569190611eb9565b60405180910390fd5b505050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6113335f835f610edf565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036113a557816040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161139c919061214a565b60405180910390fd5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361141957816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016114109190611eb9565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516115059190611d51565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156116be578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611555610ec6565b8685856040518563ffffffff1660e01b815260040161157794939291906127b0565b6020604051808303815f875af19250505080156115b257506040513d601f19601f820116820180604052508101906115af919061280e565b60015b611633573d805f81146115e0576040519150601f19603f3d011682016040523d82523d5f602084013e6115e5565b606091505b505f81510361162b57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016116229190611eb9565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146116bc57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016116b39190611eb9565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f60016116e884611a5f565b0190505f8167ffffffffffffffff81111561170657611705611f92565b5b6040519080825280601f01601f1916602001820160405280156117385781602001600182028036833780820191505090505b5090505f82602001820190505b600115611799578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161178e5761178d612839565b5b0494505f8503611745575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061181557505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611947575f61182484610e07565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561188e57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156118a1575061189f8184610c8c565b155b156118e357826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016118da9190611eb9565b60405180910390fd5b811561194557838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6119a7838383611bb0565b611a5a575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a1b57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611a12919061214a565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611a51929190612866565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611abb577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611ab157611ab0612839565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611af8576d04ee2d6d415b85acef81000000008381611aee57611aed612839565b5b0492506020810190505b662386f26fc100008310611b2757662386f26fc100008381611b1d57611b1c612839565b5b0492506010810190505b6305f5e1008310611b50576305f5e1008381611b4657611b45612839565b5b0492506008810190505b6127108310611b75576127108381611b6b57611b6a612839565b5b0492506004810190505b60648310611b985760648381611b8e57611b8d612839565b5b0492506002810190505b600a8310611ba7576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611c6757508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611c285750611c278484610c8c565b5b80611c6657508273ffffffffffffffffffffffffffffffffffffffff16611c4e83610e8d565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b508054611c7c90612354565b5f825580601f10611c8d5750611caa565b601f0160209004905f5260205f2090810190611ca99190611cad565b5b50565b5b80821115611cc4575f815f905550600101611cae565b5090565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b611ceb81611cd9565b8114611cf5575f80fd5b50565b5f81359050611d0681611ce2565b92915050565b5f60208284031215611d2157611d20611cd1565b5b5f611d2e84828501611cf8565b91505092915050565b5f8115159050919050565b611d4b81611d37565b82525050565b5f602082019050611d645f830184611d42565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611d9e81611d6a565b8114611da8575f80fd5b50565b5f81359050611db981611d95565b92915050565b5f60208284031215611dd457611dd3611cd1565b5b5f611de184828501611dab565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611e2c82611dea565b611e368185611df4565b9350611e46818560208601611e04565b611e4f81611e12565b840191505092915050565b5f6020820190508181035f830152611e728184611e22565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ea382611e7a565b9050919050565b611eb381611e99565b82525050565b5f602082019050611ecc5f830184611eaa565b92915050565b611edb81611e99565b8114611ee5575f80fd5b50565b5f81359050611ef681611ed2565b92915050565b5f8060408385031215611f1257611f11611cd1565b5b5f611f1f85828601611ee8565b9250506020611f3085828601611cf8565b9150509250929050565b5f805f60608486031215611f5157611f50611cd1565b5b5f611f5e86828701611ee8565b9350506020611f6f86828701611ee8565b9250506040611f8086828701611cf8565b9150509250925092565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611fc882611e12565b810181811067ffffffffffffffff82111715611fe757611fe6611f92565b5b80604052505050565b5f611ff9611cc8565b90506120058282611fbf565b919050565b5f67ffffffffffffffff82111561202457612023611f92565b5b61202d82611e12565b9050602081019050919050565b828183375f83830152505050565b5f61205a6120558461200a565b611ff0565b90508281526020810184848401111561207657612075611f8e565b5b61208184828561203a565b509392505050565b5f82601f83011261209d5761209c611f8a565b5b81356120ad848260208601612048565b91505092915050565b5f80604083850312156120cc576120cb611cd1565b5b5f6120d985828601611ee8565b925050602083013567ffffffffffffffff8111156120fa576120f9611cd5565b5b61210685828601612089565b9150509250929050565b5f6020828403121561212557612124611cd1565b5b5f61213284828501611ee8565b91505092915050565b61214481611cd9565b82525050565b5f60208201905061215d5f83018461213b565b92915050565b61216c81611d37565b8114612176575f80fd5b50565b5f8135905061218781612163565b92915050565b5f80604083850312156121a3576121a2611cd1565b5b5f6121b085828601611ee8565b92505060206121c185828601612179565b9150509250929050565b5f67ffffffffffffffff8211156121e5576121e4611f92565b5b6121ee82611e12565b9050602081019050919050565b5f61220d612208846121cb565b611ff0565b90508281526020810184848401111561222957612228611f8e565b5b61223484828561203a565b509392505050565b5f82601f8301126122505761224f611f8a565b5b81356122608482602086016121fb565b91505092915050565b5f805f806080858703121561228157612280611cd1565b5b5f61228e87828801611ee8565b945050602061229f87828801611ee8565b93505060406122b087828801611cf8565b925050606085013567ffffffffffffffff8111156122d1576122d0611cd5565b5b6122dd8782880161223c565b91505092959194509250565b5f80604083850312156122ff576122fe611cd1565b5b5f61230c85828601611ee8565b925050602061231d85828601611ee8565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061236b57607f821691505b60208210810361237e5761237d612327565b5b50919050565b5f6060820190506123975f830186611eaa565b6123a4602083018561213b565b6123b16040830184611eaa565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6123f082611cd9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612422576124216123b9565b5b600182019050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026124897fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261244e565b612493868361244e565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6124ce6124c96124c484611cd9565b6124ab565b611cd9565b9050919050565b5f819050919050565b6124e7836124b4565b6124fb6124f3826124d5565b84845461245a565b825550505050565b5f90565b61250f612503565b61251a8184846124de565b505050565b5b8181101561253d576125325f82612507565b600181019050612520565b5050565b601f821115612582576125538161242d565b61255c8461243f565b8101602085101561256b578190505b61257f6125778561243f565b83018261251f565b50505b505050565b5f82821c905092915050565b5f6125a25f1984600802612587565b1980831691505092915050565b5f6125ba8383612593565b9150826002028217905092915050565b6125d382611dea565b67ffffffffffffffff8111156125ec576125eb611f92565b5b6125f68254612354565b612601828285612541565b5f60209050601f831160018114612632575f8415612620578287015190505b61262a85826125af565b865550612691565b601f1984166126408661242d565b5f5b8281101561266757848901518255600182019150602085019450602081019050612642565b868310156126845784890151612680601f891682612593565b8355505b6001600288020188555050505b505050505050565b7f546f6b656e20646f6573206e6f742065786973740000000000000000000000005f82015250565b5f6126cd601483611df4565b91506126d882612699565b602082019050919050565b5f6020820190508181035f8301526126fa816126c1565b9050919050565b5f81905092915050565b5f61271582611dea565b61271f8185612701565b935061272f818560208601611e04565b80840191505092915050565b5f612746828561270b565b9150612752828461270b565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6127828261275e565b61278c8185612768565b935061279c818560208601611e04565b6127a581611e12565b840191505092915050565b5f6080820190506127c35f830187611eaa565b6127d06020830186611eaa565b6127dd604083018561213b565b81810360608301526127ef8184612778565b905095945050505050565b5f8151905061280881611d95565b92915050565b5f6020828403121561282357612822611cd1565b5b5f612830848285016127fa565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506128795f830185611eaa565b612886602083018461213b565b939250505056fea2646970667358221220f5586614243f435031b88e189209f3dc3ac66d0e3b3f1f292690787d80cb7ccf64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x155 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75794A3C GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0xD7D0DF2A EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x489 JUMPI PUSH2 0x155 JUMP JUMPDEST DUP1 PUSH4 0x75794A3C EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x7B47EC1A EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x80964805 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x8796EC86 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3B7 JUMPI PUSH2 0x155 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x3D02D0C9 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2F5 JUMPI PUSH2 0x155 JUMP JUMPDEST DUP1 PUSH3 0x923F9E EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x1FD8293F EQ PUSH2 0x223 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x1D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1DBF JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x1D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH2 0x5C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x1E5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x670 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22B PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x20B6 JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0x82D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x214A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0x8E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x307 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x214A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x337 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x8FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x353 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x974 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1E5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x1E5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A1 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BF PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x1E5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH2 0xBB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x2269 JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x427 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x1E5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x457 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0xC49 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x473 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x1D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0xD1A JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4C6 DUP4 PUSH2 0x81C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x5AF JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x5BF JUMPI POP PUSH2 0x5BE DUP3 PUSH2 0xD9E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x5D4 SWAP1 PUSH2 0x2354 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x600 SWAP1 PUSH2 0x2354 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x64B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x622 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x64B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x62E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x65F DUP3 PUSH2 0xE07 JUMP JUMPDEST POP PUSH2 0x669 DUP3 PUSH2 0xE8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x682 DUP3 DUP3 PUSH2 0x67D PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0xECD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x71B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x712 SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x72E DUP4 DUP4 PUSH2 0x729 PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0xEDF JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A4 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7B2 PUSH2 0x10EA JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x7CA SWAP1 PUSH2 0x23E6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x7D9 DUP4 DUP3 PUSH2 0x1171 JUMP JUMPDEST DUP2 PUSH1 0x8 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x7F7 SWAP2 SWAP1 PUSH2 0x25CA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x817 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xBC6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x826 DUP3 PUSH2 0xE07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x895 SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EB PUSH2 0x10EA JUMP JUMPDEST PUSH2 0x8F4 PUSH0 PUSH2 0x1264 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x904 PUSH2 0x10EA JUMP JUMPDEST PUSH2 0x90D DUP2 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x94C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x943 SWAP1 PUSH2 0x26E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x955 DUP2 PUSH2 0x1327 JUMP JUMPDEST PUSH1 0x8 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x971 SWAP2 SWAP1 PUSH2 0x1C70 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x990 SWAP1 PUSH2 0x2354 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9BC SWAP1 PUSH2 0x2354 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA07 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9DE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA07 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9EA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA1A DUP3 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0xA59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA50 SWAP1 PUSH2 0x26E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xA75 SWAP1 PUSH2 0x2354 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAA1 SWAP1 PUSH2 0x2354 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAEC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAC3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAEC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xACF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xB2F SWAP1 PUSH2 0x2354 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB5B SWAP1 PUSH2 0x2354 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBA6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB7D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBA6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB89 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBC2 PUSH2 0xBBB PUSH2 0xEC6 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x13A9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBD1 DUP5 DUP5 DUP5 PUSH2 0x6AB JUMP JUMPDEST PUSH2 0xBDD DUP5 DUP5 DUP5 DUP5 PUSH2 0x1512 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBEE DUP3 PUSH2 0xE07 JUMP JUMPDEST POP PUSH0 PUSH2 0xBF8 PUSH2 0x16C4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xC16 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xC41 JUMP JUMPDEST DUP1 PUSH2 0xC20 DUP5 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC31 SWAP3 SWAP2 SWAP1 PUSH2 0x273B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD22 PUSH2 0x10EA JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD92 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD89 SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD9B DUP2 PUSH2 0x1264 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE12 DUP4 PUSH2 0x17A4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE84 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7B SWAP2 SWAP1 PUSH2 0x214A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEDA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x17DD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xEEA DUP5 PUSH2 0x17A4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF2B JUMPI PUSH2 0xF2A DUP2 DUP5 DUP7 PUSH2 0x199C JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFB6 JUMPI PUSH2 0xF6A PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1035 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x10F2 PUSH2 0xEC6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1110 PUSH2 0xAF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x116F JUMPI PUSH2 0x1133 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1166 SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11E1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D8 SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x11ED DUP4 DUP4 PUSH0 PUSH2 0xEDF JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x125F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1256 SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1333 PUSH0 DUP4 PUSH0 PUSH2 0xEDF JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13A5 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139C SWAP2 SWAP1 PUSH2 0x214A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1419 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1410 SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1505 SWAP2 SWAP1 PUSH2 0x1D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x16BE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1555 PUSH2 0xEC6 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1577 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27B0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15B2 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15AF SWAP2 SWAP1 PUSH2 0x280E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1633 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x15E0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15E5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x162B JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1622 SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x16BC JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B3 SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x16E8 DUP5 PUSH2 0x1A5F JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1706 JUMPI PUSH2 0x1705 PUSH2 0x1F92 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1738 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1799 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x178E JUMPI PUSH2 0x178D PUSH2 0x2839 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1745 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1815 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1947 JUMPI PUSH0 PUSH2 0x1824 DUP5 PUSH2 0xE07 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x188E JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x18A1 JUMPI POP PUSH2 0x189F DUP2 DUP5 PUSH2 0xC8C JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x18E3 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18DA SWAP2 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1945 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x19A7 DUP4 DUP4 DUP4 PUSH2 0x1BB0 JUMP JUMPDEST PUSH2 0x1A5A JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A1B JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A12 SWAP2 SWAP1 PUSH2 0x214A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A51 SWAP3 SWAP2 SWAP1 PUSH2 0x2866 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1ABB JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1AB1 JUMPI PUSH2 0x1AB0 PUSH2 0x2839 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1AF8 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1AEE JUMPI PUSH2 0x1AED PUSH2 0x2839 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1B27 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1B1D JUMPI PUSH2 0x1B1C PUSH2 0x2839 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1B50 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1B46 JUMPI PUSH2 0x1B45 PUSH2 0x2839 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1B75 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1B6B JUMPI PUSH2 0x1B6A PUSH2 0x2839 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1B98 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1B8E JUMPI PUSH2 0x1B8D PUSH2 0x2839 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1BA7 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1C67 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1C28 JUMPI POP PUSH2 0x1C27 DUP5 DUP5 PUSH2 0xC8C JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1C66 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C4E DUP4 PUSH2 0xE8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x1C7C SWAP1 PUSH2 0x2354 JUMP JUMPDEST PUSH0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1C8D JUMPI POP PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1CA9 SWAP2 SWAP1 PUSH2 0x1CAD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1CC4 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1CAE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CEB DUP2 PUSH2 0x1CD9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D06 DUP2 PUSH2 0x1CE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D21 JUMPI PUSH2 0x1D20 PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D2E DUP5 DUP3 DUP6 ADD PUSH2 0x1CF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D4B DUP2 PUSH2 0x1D37 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D64 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D42 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D9E DUP2 PUSH2 0x1D6A JUMP JUMPDEST DUP2 EQ PUSH2 0x1DA8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DB9 DUP2 PUSH2 0x1D95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DD4 JUMPI PUSH2 0x1DD3 PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE1 DUP5 DUP3 DUP6 ADD PUSH2 0x1DAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E2C DUP3 PUSH2 0x1DEA JUMP JUMPDEST PUSH2 0x1E36 DUP2 DUP6 PUSH2 0x1DF4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E46 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E04 JUMP JUMPDEST PUSH2 0x1E4F DUP2 PUSH2 0x1E12 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E72 DUP2 DUP5 PUSH2 0x1E22 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA3 DUP3 PUSH2 0x1E7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EB3 DUP2 PUSH2 0x1E99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ECC PUSH0 DUP4 ADD DUP5 PUSH2 0x1EAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EDB DUP2 PUSH2 0x1E99 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EE5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EF6 DUP2 PUSH2 0x1ED2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F12 JUMPI PUSH2 0x1F11 PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F1F DUP6 DUP3 DUP7 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F30 DUP6 DUP3 DUP7 ADD PUSH2 0x1CF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F51 JUMPI PUSH2 0x1F50 PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F5E DUP7 DUP3 DUP8 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F6F DUP7 DUP3 DUP8 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F80 DUP7 DUP3 DUP8 ADD PUSH2 0x1CF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1FC8 DUP3 PUSH2 0x1E12 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FE7 JUMPI PUSH2 0x1FE6 PUSH2 0x1F92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF9 PUSH2 0x1CC8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2005 DUP3 DUP3 PUSH2 0x1FBF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2024 JUMPI PUSH2 0x2023 PUSH2 0x1F92 JUMP JUMPDEST JUMPDEST PUSH2 0x202D DUP3 PUSH2 0x1E12 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x205A PUSH2 0x2055 DUP5 PUSH2 0x200A JUMP JUMPDEST PUSH2 0x1FF0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2076 JUMPI PUSH2 0x2075 PUSH2 0x1F8E JUMP JUMPDEST JUMPDEST PUSH2 0x2081 DUP5 DUP3 DUP6 PUSH2 0x203A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x209D JUMPI PUSH2 0x209C PUSH2 0x1F8A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20AD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2048 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20CC JUMPI PUSH2 0x20CB PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20D9 DUP6 DUP3 DUP7 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20FA JUMPI PUSH2 0x20F9 PUSH2 0x1CD5 JUMP JUMPDEST JUMPDEST PUSH2 0x2106 DUP6 DUP3 DUP7 ADD PUSH2 0x2089 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2125 JUMPI PUSH2 0x2124 PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2132 DUP5 DUP3 DUP6 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2144 DUP2 PUSH2 0x1CD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x215D PUSH0 DUP4 ADD DUP5 PUSH2 0x213B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x216C DUP2 PUSH2 0x1D37 JUMP JUMPDEST DUP2 EQ PUSH2 0x2176 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2187 DUP2 PUSH2 0x2163 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21A3 JUMPI PUSH2 0x21A2 PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21B0 DUP6 DUP3 DUP7 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21C1 DUP6 DUP3 DUP7 ADD PUSH2 0x2179 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21E5 JUMPI PUSH2 0x21E4 PUSH2 0x1F92 JUMP JUMPDEST JUMPDEST PUSH2 0x21EE DUP3 PUSH2 0x1E12 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x220D PUSH2 0x2208 DUP5 PUSH2 0x21CB JUMP JUMPDEST PUSH2 0x1FF0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2229 JUMPI PUSH2 0x2228 PUSH2 0x1F8E JUMP JUMPDEST JUMPDEST PUSH2 0x2234 DUP5 DUP3 DUP6 PUSH2 0x203A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2250 JUMPI PUSH2 0x224F PUSH2 0x1F8A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2260 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2281 JUMPI PUSH2 0x2280 PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x228E DUP8 DUP3 DUP9 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x229F DUP8 DUP3 DUP9 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x22B0 DUP8 DUP3 DUP9 ADD PUSH2 0x1CF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22D1 JUMPI PUSH2 0x22D0 PUSH2 0x1CD5 JUMP JUMPDEST JUMPDEST PUSH2 0x22DD DUP8 DUP3 DUP9 ADD PUSH2 0x223C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22FF JUMPI PUSH2 0x22FE PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x230C DUP6 DUP3 DUP7 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x231D DUP6 DUP3 DUP7 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x236B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x237E JUMPI PUSH2 0x237D PUSH2 0x2327 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2397 PUSH0 DUP4 ADD DUP7 PUSH2 0x1EAA JUMP JUMPDEST PUSH2 0x23A4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x213B JUMP JUMPDEST PUSH2 0x23B1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1EAA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x23F0 DUP3 PUSH2 0x1CD9 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2422 JUMPI PUSH2 0x2421 PUSH2 0x23B9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2489 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x244E JUMP JUMPDEST PUSH2 0x2493 DUP7 DUP4 PUSH2 0x244E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24CE PUSH2 0x24C9 PUSH2 0x24C4 DUP5 PUSH2 0x1CD9 JUMP JUMPDEST PUSH2 0x24AB JUMP JUMPDEST PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24E7 DUP4 PUSH2 0x24B4 JUMP JUMPDEST PUSH2 0x24FB PUSH2 0x24F3 DUP3 PUSH2 0x24D5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x245A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x250F PUSH2 0x2503 JUMP JUMPDEST PUSH2 0x251A DUP2 DUP5 DUP5 PUSH2 0x24DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x253D JUMPI PUSH2 0x2532 PUSH0 DUP3 PUSH2 0x2507 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2520 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2582 JUMPI PUSH2 0x2553 DUP2 PUSH2 0x242D JUMP JUMPDEST PUSH2 0x255C DUP5 PUSH2 0x243F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x256B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x257F PUSH2 0x2577 DUP6 PUSH2 0x243F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x251F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25A2 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2587 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25BA DUP4 DUP4 PUSH2 0x2593 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25D3 DUP3 PUSH2 0x1DEA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25EC JUMPI PUSH2 0x25EB PUSH2 0x1F92 JUMP JUMPDEST JUMPDEST PUSH2 0x25F6 DUP3 SLOAD PUSH2 0x2354 JUMP JUMPDEST PUSH2 0x2601 DUP3 DUP3 DUP6 PUSH2 0x2541 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2632 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2620 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x262A DUP6 DUP3 PUSH2 0x25AF JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2691 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2640 DUP7 PUSH2 0x242D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2667 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2642 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2684 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2680 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2593 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20646F6573206E6F74206578697374000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26CD PUSH1 0x14 DUP4 PUSH2 0x1DF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x26D8 DUP3 PUSH2 0x2699 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26FA DUP2 PUSH2 0x26C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2715 DUP3 PUSH2 0x1DEA JUMP JUMPDEST PUSH2 0x271F DUP2 DUP6 PUSH2 0x2701 JUMP JUMPDEST SWAP4 POP PUSH2 0x272F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E04 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2746 DUP3 DUP6 PUSH2 0x270B JUMP JUMPDEST SWAP2 POP PUSH2 0x2752 DUP3 DUP5 PUSH2 0x270B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2782 DUP3 PUSH2 0x275E JUMP JUMPDEST PUSH2 0x278C DUP2 DUP6 PUSH2 0x2768 JUMP JUMPDEST SWAP4 POP PUSH2 0x279C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E04 JUMP JUMPDEST PUSH2 0x27A5 DUP2 PUSH2 0x1E12 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x27C3 PUSH0 DUP4 ADD DUP8 PUSH2 0x1EAA JUMP JUMPDEST PUSH2 0x27D0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1EAA JUMP JUMPDEST PUSH2 0x27DD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x213B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x27EF DUP2 DUP5 PUSH2 0x2778 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2808 DUP2 PUSH2 0x1D95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2823 JUMPI PUSH2 0x2822 PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2830 DUP5 DUP3 DUP6 ADD PUSH2 0x27FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2879 PUSH0 DUP4 ADD DUP6 PUSH2 0x1EAA JUMP JUMPDEST PUSH2 0x2886 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x213B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PC PUSH7 0x14243F435031B8 DUP15 XOR SWAP3 MULMOD RETURN 0xDC GASPRICE 0xC6 PUSH14 0xE3B3F1F292690787D80CB7CCF64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "176:1450:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;999:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1607:305:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2438:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3429:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;326:30:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4279:588:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;710:233:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4938:134:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2251:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1976:213;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2368:103:0;;;:::i;:::-;;233:26:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1426:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;266:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1188:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1693:87:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2598:95:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3840:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5143:211;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2764:260;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;543:105:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4057:155:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2626:220:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;999:128:12;1058:4;1117:1;1082:37;;:23;1097:7;1082:14;:23::i;:::-;:37;;;;1075:44;;999:128;;;:::o;1607:305:2:-;1709:4;1761:25;1746:40;;;:11;:40;;;;:105;;;;1818:33;1803:48;;;:11;:48;;;;1746:105;:158;;;;1868:36;1892:11;1868:23;:36::i;:::-;1746:158;1726:178;;1607:305;;;:::o;2438:91::-;2483:13;2516:5;2509:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2438:91;:::o;3610:158::-;3677:7;3697:22;3711:7;3697:13;:22::i;:::-;;3739:21;3752:7;3739:12;:21::i;:::-;3732:28;;3610:158;;;:::o;3429:115::-;3501:35;3510:2;3514:7;3523:12;:10;:12::i;:::-;3501:8;:35::i;:::-;3429:115;;:::o;326:30:12:-;;;;;;;;;;;;;:::o;4279:588:2:-;4388:1;4374:16;;:2;:16;;;4370:89;;4444:1;4414:33;;;;;;;;;;;:::i;:::-;;;;;;;;4370:89;4680:21;4704:34;4712:2;4716:7;4725:12;:10;:12::i;:::-;4704:7;:34::i;:::-;4680:58;;4770:4;4753:21;;:13;:21;;;4749:111;;4819:4;4825:7;4834:13;4798:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4749:111;4359:508;4279:588;;;:::o;710:233:12:-;1579:13:0;:11;:13::i;:::-;797:15:12::1;815:11;;797:29;;837:11;;:13;;;;;;;;;:::i;:::-;;;;;;863:18;869:2;873:7;863:5;:18::i;:::-;923:12;892:19;:28;912:7;892:28;;;;;;;;;;;:43;;;;;;:::i;:::-;;786:157;710:233:::0;;:::o;4938:134:2:-;5025:39;5042:4;5048:2;5052:7;5025:39;;;;;;;;;;;;:16;:39::i;:::-;4938:134;;;:::o;2251:120::-;2314:7;2341:22;2355:7;2341:13;:22::i;:::-;2334:29;;2251:120;;;:::o;1976:213::-;2039:7;2080:1;2063:19;;:5;:19;;;2059:89;;2133:1;2106:30;;;;;;;;;;;:::i;:::-;;;;;;;;2059:89;2165:9;:16;2175:5;2165:16;;;;;;;;;;;;;;;;2158:23;;1976:213;;;:::o;2368:103:0:-;1579:13;:11;:13::i;:::-;2433:30:::1;2460:1;2433:18;:30::i;:::-;2368:103::o:0;233:26:12:-;;;;:::o;1426:197::-;1579:13:0;:11;:13::i;:::-;1498:20:12::1;1510:7;1498:11;:20::i;:::-;1490:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1555:14;1561:7;1555:5;:14::i;:::-;1587:19;:28;1607:7;1587:28;;;;;;;;;;;;1580:35;;;;:::i;:::-;1426:197:::0;:::o;266:53::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1188:197::-;1251:13;1285:20;1297:7;1285:11;:20::i;:::-;1277:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1349:19;:28;1369:7;1349:28;;;;;;;;;;;1342:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1188:197;;;:::o;1693:87:0:-;1739:7;1766:6;;;;;;;;;;;1759:13;;1693:87;:::o;2598:95:2:-;2645:13;2678:7;2671:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2598:95;:::o;3840:146::-;3926:52;3945:12;:10;:12::i;:::-;3959:8;3969;3926:18;:52::i;:::-;3840:146;;:::o;5143:211::-;5257:31;5270:4;5276:2;5280:7;5257:12;:31::i;:::-;5299:47;5322:4;5328:2;5332:7;5341:4;5299:22;:47::i;:::-;5143:211;;;;:::o;2764:260::-;2828:13;2854:22;2868:7;2854:13;:22::i;:::-;;2889:21;2913:10;:8;:10::i;:::-;2889:34;;2965:1;2947:7;2941:21;:25;:75;;;;;;;;;;;;;;;;;2983:7;2992:18;:7;:16;:18::i;:::-;2969:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2941:75;2934:82;;;2764:260;;;:::o;543:105:12:-;626:14;608:15;;:32;;;;;;;;;;;;;;;;;;543:105;:::o;4057:155:2:-;4145:4;4169:18;:25;4188:5;4169:25;;;;;;;;;;;;;;;:35;4195:8;4169:35;;;;;;;;;;;;;;;;;;;;;;;;;4162:42;;4057:155;;;;:::o;2626:220:0:-;1579:13;:11;:13::i;:::-;2731:1:::1;2711:22;;:8;:22;;::::0;2707:93:::1;;2785:1;2757:31;;;;;;;;;;;:::i;:::-;;;;;;;;2707:93;2810:28;2829:8;2810:18;:28::i;:::-;2626:220:::0;:::o;785:148:8:-;861:4;900:25;885:40;;;:11;:40;;;;878:47;;785:148;;;:::o;16585:247:2:-;16648:7;16668:13;16684:17;16693:7;16684:8;:17::i;:::-;16668:33;;16733:1;16716:19;;:5;:19;;;16712:90;;16782:7;16759:31;;;;;;;;;;;:::i;:::-;;;;;;;;16712:90;16819:5;16812:12;;;16585:247;;;:::o;6116:129::-;6186:7;6213:15;:24;6229:7;6213:24;;;;;;;;;;;;;;;;;;;;;6206:31;;6116:129;;;:::o;672:98:6:-;725:7;752:10;745:17;;672:98;:::o;14817:122:2:-;14898:33;14907:2;14911:7;14920:4;14926;14898:8;:33::i;:::-;14817:122;;;:::o;9078:824::-;9164:7;9184:12;9199:17;9208:7;9199:8;:17::i;:::-;9184:32;;9295:1;9279:18;;:4;:18;;;9275:88;;9314:37;9331:4;9337;9343:7;9314:16;:37::i;:::-;9275:88;9426:1;9410:18;;:4;:18;;;9406:263;;9528:48;9545:1;9549:7;9566:1;9570:5;9528:8;:48::i;:::-;9641:1;9622:9;:15;9632:4;9622:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9406:263;9699:1;9685:16;;:2;:16;;;9681:111;;9764:1;9747:9;:13;9757:2;9747:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9681:111;9823:2;9804:7;:16;9812:7;9804:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9862:7;9858:2;9843:27;;9852:4;9843:27;;;;;;;;;;;;9890:4;9883:11;;;9078:824;;;;;:::o;1858:166:0:-;1929:12;:10;:12::i;:::-;1918:23;;:7;:5;:7::i;:::-;:23;;;1914:103;;1992:12;:10;:12::i;:::-;1965:40;;;;;;;;;;;:::i;:::-;;;;;;;;1914:103;1858:166::o;10238:335:2:-;10320:1;10306:16;;:2;:16;;;10302:89;;10376:1;10346:33;;;;;;;;;;;:::i;:::-;;;;;;;;10302:89;10401:21;10425:32;10433:2;10437:7;10454:1;10425:7;:32::i;:::-;10401:56;;10497:1;10472:27;;:13;:27;;;10468:98;;10551:1;10523:31;;;;;;;;;;;:::i;:::-;;;;;;;;10468:98;10291:282;10238:335;;:::o;3006:191:0:-;3080:16;3099:6;;;;;;;;;;;3080:25;;3125:8;3116:6;;:17;;;;;;;;;;;;;;;;;;3180:8;3149:40;;3170:8;3149:40;;;;;;;;;;;;3069:128;3006:191;:::o;11789:232:2:-;11841:21;11865:40;11881:1;11885:7;11902:1;11865:7;:40::i;:::-;11841:64;;11945:1;11920:27;;:13;:27;;;11916:98;;11994:7;11971:31;;;;;;;;;;;:::i;:::-;;;;;;;;11916:98;11830:191;11789:232;:::o;16024:318::-;16152:1;16132:22;;:8;:22;;;16128:93;;16200:8;16178:31;;;;;;;;;;;:::i;:::-;;;;;;;;16128:93;16269:8;16231:18;:25;16250:5;16231:25;;;;;;;;;;;;;;;:35;16257:8;16231:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;16315:8;16293:41;;16308:5;16293:41;;;16325:8;16293:41;;;;;;:::i;:::-;;;;;;;;16024:318;;;:::o;17382:799::-;17516:1;17499:2;:14;;;:18;17495:679;;;17554:2;17538:36;;;17575:12;:10;:12::i;:::-;17589:4;17595:7;17604:4;17538:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17534:629;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17869:1;17852:6;:13;:18;17848:300;;17924:2;17902:25;;;;;;;;;;;:::i;:::-;;;;;;;;17848:300;18098:6;18092:13;18083:6;18079:2;18075:15;18068:38;17534:629;17667:41;;;17657:51;;;:6;:51;;;;17653:132;;17762:2;17740:25;;;;;;;;;;;:::i;:::-;;;;;;;;17653:132;17610:190;17495:679;17382:799;;;;:::o;3273:94::-;3324:13;3350:9;;;;;;;;;;;;;;3273:94;:::o;660:718:7:-;716:13;767:14;804:1;784:17;795:5;784:10;:17::i;:::-;:21;767:38;;820:20;854:6;843:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:41;;876:11;1005:6;1001:2;997:15;989:6;985:28;978:35;;1042:290;1049:4;1042:290;;;1074:5;;;;;;;;1216:10;1211:2;1204:5;1200:14;1195:32;1190:3;1182:46;1274:2;1265:11;;;;;;:::i;:::-;;;;;1308:1;1299:5;:10;1042:290;1295:21;1042:290;1353:6;1346:13;;;;;660:718;;;:::o;5878:117:2:-;5944:7;5971;:16;5979:7;5971:16;;;;;;;;;;;;;;;;;;;;;5964:23;;5878:117;;;:::o;15127:678::-;15289:9;:31;;;;15318:1;15302:18;;:4;:18;;;;15289:31;15285:471;;;15337:13;15353:22;15367:7;15353:13;:22::i;:::-;15337:38;;15522:1;15506:18;;:4;:18;;;;:35;;;;;15537:4;15528:13;;:5;:13;;;;15506:35;:69;;;;;15546:29;15563:5;15570:4;15546:16;:29::i;:::-;15545:30;15506:69;15502:144;;;15625:4;15603:27;;;;;;;;;;;:::i;:::-;;;;;;;;15502:144;15666:9;15662:83;;;15721:7;15717:2;15701:28;;15710:5;15701:28;;;;;;;;;;;;15662:83;15322:434;15285:471;15795:2;15768:15;:24;15784:7;15768:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;15127:678;;;;:::o;7285:376::-;7398:38;7412:5;7419:7;7428;7398:13;:38::i;:::-;7393:261;;7474:1;7457:19;;:5;:19;;;7453:190;;7527:7;7504:31;;;;;;;;;;;:::i;:::-;;;;;;;;7453:190;7610:7;7619;7583:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7393:261;7285:376;;;:::o;12534:948:10:-;12587:7;12607:14;12624:1;12607:18;;12674:8;12665:5;:17;12661:106;;12712:8;12703:17;;;;;;:::i;:::-;;;;;12749:2;12739:12;;;;12661:106;12794:8;12785:5;:17;12781:106;;12832:8;12823:17;;;;;;:::i;:::-;;;;;12869:2;12859:12;;;;12781:106;12914:8;12905:5;:17;12901:106;;12952:8;12943:17;;;;;;:::i;:::-;;;;;12989:2;12979:12;;;;12901:106;13034:7;13025:5;:16;13021:103;;13071:7;13062:16;;;;;;:::i;:::-;;;;;13107:1;13097:11;;;;13021:103;13151:7;13142:5;:16;13138:103;;13188:7;13179:16;;;;;;:::i;:::-;;;;;13224:1;13214:11;;;;13138:103;13268:7;13259:5;:16;13255:103;;13305:7;13296:16;;;;;;:::i;:::-;;;;;13341:1;13331:11;;;;13255:103;13385:7;13376:5;:16;13372:68;;13423:1;13413:11;;;;13372:68;13468:6;13461:13;;;12534:948;;;:::o;6565:276:2:-;6668:4;6724:1;6705:21;;:7;:21;;;;:128;;;;;6753:7;6744:16;;:5;:16;;;:52;;;;6764:32;6781:5;6788:7;6764:16;:32::i;:::-;6744:52;:88;;;;6825:7;6800:32;;:21;6813:7;6800:12;:21::i;:::-;:32;;;6744:88;6705:128;6685:148;;6565:276;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:90::-;1059:7;1102:5;1095:13;1088:21;1077:32;;1025:90;;;:::o;1121:109::-;1202:21;1217:5;1202:21;:::i;:::-;1197:3;1190:34;1121:109;;:::o;1236:210::-;1323:4;1361:2;1350:9;1346:18;1338:26;;1374:65;1436:1;1425:9;1421:17;1412:6;1374:65;:::i;:::-;1236:210;;;;:::o;1452:149::-;1488:7;1528:66;1521:5;1517:78;1506:89;;1452:149;;;:::o;1607:120::-;1679:23;1696:5;1679:23;:::i;:::-;1672:5;1669:34;1659:62;;1717:1;1714;1707:12;1659:62;1607:120;:::o;1733:137::-;1778:5;1816:6;1803:20;1794:29;;1832:32;1858:5;1832:32;:::i;:::-;1733:137;;;;:::o;1876:327::-;1934:6;1983:2;1971:9;1962:7;1958:23;1954:32;1951:119;;;1989:79;;:::i;:::-;1951:119;2109:1;2134:52;2178:7;2169:6;2158:9;2154:22;2134:52;:::i;:::-;2124:62;;2080:116;1876:327;;;;:::o;2209:99::-;2261:6;2295:5;2289:12;2279:22;;2209:99;;;:::o;2314:169::-;2398:11;2432:6;2427:3;2420:19;2472:4;2467:3;2463:14;2448:29;;2314:169;;;;:::o;2489:139::-;2578:6;2573:3;2568;2562:23;2619:1;2610:6;2605:3;2601:16;2594:27;2489:139;;;:::o;2634:102::-;2675:6;2726:2;2722:7;2717:2;2710:5;2706:14;2702:28;2692:38;;2634:102;;;:::o;2742:377::-;2830:3;2858:39;2891:5;2858:39;:::i;:::-;2913:71;2977:6;2972:3;2913:71;:::i;:::-;2906:78;;2993:65;3051:6;3046:3;3039:4;3032:5;3028:16;2993:65;:::i;:::-;3083:29;3105:6;3083:29;:::i;:::-;3078:3;3074:39;3067:46;;2834:285;2742:377;;;;:::o;3125:313::-;3238:4;3276:2;3265:9;3261:18;3253:26;;3325:9;3319:4;3315:20;3311:1;3300:9;3296:17;3289:47;3353:78;3426:4;3417:6;3353:78;:::i;:::-;3345:86;;3125:313;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:117::-;5517:1;5514;5507:12;5531:117;5640:1;5637;5630:12;5654:180;5702:77;5699:1;5692:88;5799:4;5796:1;5789:15;5823:4;5820:1;5813:15;5840:281;5923:27;5945:4;5923:27;:::i;:::-;5915:6;5911:40;6053:6;6041:10;6038:22;6017:18;6005:10;6002:34;5999:62;5996:88;;;6064:18;;:::i;:::-;5996:88;6104:10;6100:2;6093:22;5883:238;5840:281;;:::o;6127:129::-;6161:6;6188:20;;:::i;:::-;6178:30;;6217:33;6245:4;6237:6;6217:33;:::i;:::-;6127:129;;;:::o;6262:308::-;6324:4;6414:18;6406:6;6403:30;6400:56;;;6436:18;;:::i;:::-;6400:56;6474:29;6496:6;6474:29;:::i;:::-;6466:37;;6558:4;6552;6548:15;6540:23;;6262:308;;;:::o;6576:148::-;6674:6;6669:3;6664;6651:30;6715:1;6706:6;6701:3;6697:16;6690:27;6576:148;;;:::o;6730:425::-;6808:5;6833:66;6849:49;6891:6;6849:49;:::i;:::-;6833:66;:::i;:::-;6824:75;;6922:6;6915:5;6908:21;6960:4;6953:5;6949:16;6998:3;6989:6;6984:3;6980:16;6977:25;6974:112;;;7005:79;;:::i;:::-;6974:112;7095:54;7142:6;7137:3;7132;7095:54;:::i;:::-;6814:341;6730:425;;;;;:::o;7175:340::-;7231:5;7280:3;7273:4;7265:6;7261:17;7257:27;7247:122;;7288:79;;:::i;:::-;7247:122;7405:6;7392:20;7430:79;7505:3;7497:6;7490:4;7482:6;7478:17;7430:79;:::i;:::-;7421:88;;7237:278;7175:340;;;;:::o;7521:654::-;7599:6;7607;7656:2;7644:9;7635:7;7631:23;7627:32;7624:119;;;7662:79;;:::i;:::-;7624:119;7782:1;7807:53;7852:7;7843:6;7832:9;7828:22;7807:53;:::i;:::-;7797:63;;7753:117;7937:2;7926:9;7922:18;7909:32;7968:18;7960:6;7957:30;7954:117;;;7990:79;;:::i;:::-;7954:117;8095:63;8150:7;8141:6;8130:9;8126:22;8095:63;:::i;:::-;8085:73;;7880:288;7521:654;;;;;:::o;8181:329::-;8240:6;8289:2;8277:9;8268:7;8264:23;8260:32;8257:119;;;8295:79;;:::i;:::-;8257:119;8415:1;8440:53;8485:7;8476:6;8465:9;8461:22;8440:53;:::i;:::-;8430:63;;8386:117;8181:329;;;;:::o;8516:118::-;8603:24;8621:5;8603:24;:::i;:::-;8598:3;8591:37;8516:118;;:::o;8640:222::-;8733:4;8771:2;8760:9;8756:18;8748:26;;8784:71;8852:1;8841:9;8837:17;8828:6;8784:71;:::i;:::-;8640:222;;;;:::o;8868:116::-;8938:21;8953:5;8938:21;:::i;:::-;8931:5;8928:32;8918:60;;8974:1;8971;8964:12;8918:60;8868:116;:::o;8990:133::-;9033:5;9071:6;9058:20;9049:29;;9087:30;9111:5;9087:30;:::i;:::-;8990:133;;;;:::o;9129:468::-;9194:6;9202;9251:2;9239:9;9230:7;9226:23;9222:32;9219:119;;;9257:79;;:::i;:::-;9219:119;9377:1;9402:53;9447:7;9438:6;9427:9;9423:22;9402:53;:::i;:::-;9392:63;;9348:117;9504:2;9530:50;9572:7;9563:6;9552:9;9548:22;9530:50;:::i;:::-;9520:60;;9475:115;9129:468;;;;;:::o;9603:307::-;9664:4;9754:18;9746:6;9743:30;9740:56;;;9776:18;;:::i;:::-;9740:56;9814:29;9836:6;9814:29;:::i;:::-;9806:37;;9898:4;9892;9888:15;9880:23;;9603:307;;;:::o;9916:423::-;9993:5;10018:65;10034:48;10075:6;10034:48;:::i;:::-;10018:65;:::i;:::-;10009:74;;10106:6;10099:5;10092:21;10144:4;10137:5;10133:16;10182:3;10173:6;10168:3;10164:16;10161:25;10158:112;;;10189:79;;:::i;:::-;10158:112;10279:54;10326:6;10321:3;10316;10279:54;:::i;:::-;9999:340;9916:423;;;;;:::o;10358:338::-;10413:5;10462:3;10455:4;10447:6;10443:17;10439:27;10429:122;;10470:79;;:::i;:::-;10429:122;10587:6;10574:20;10612:78;10686:3;10678:6;10671:4;10663:6;10659:17;10612:78;:::i;:::-;10603:87;;10419:277;10358:338;;;;:::o;10702:943::-;10797:6;10805;10813;10821;10870:3;10858:9;10849:7;10845:23;10841:33;10838:120;;;10877:79;;:::i;:::-;10838:120;10997:1;11022:53;11067:7;11058:6;11047:9;11043:22;11022:53;:::i;:::-;11012:63;;10968:117;11124:2;11150:53;11195:7;11186:6;11175:9;11171:22;11150:53;:::i;:::-;11140:63;;11095:118;11252:2;11278:53;11323:7;11314:6;11303:9;11299:22;11278:53;:::i;:::-;11268:63;;11223:118;11408:2;11397:9;11393:18;11380:32;11439:18;11431:6;11428:30;11425:117;;;11461:79;;:::i;:::-;11425:117;11566:62;11620:7;11611:6;11600:9;11596:22;11566:62;:::i;:::-;11556:72;;11351:287;10702:943;;;;;;;:::o;11651:474::-;11719:6;11727;11776:2;11764:9;11755:7;11751:23;11747:32;11744:119;;;11782:79;;:::i;:::-;11744:119;11902:1;11927:53;11972:7;11963:6;11952:9;11948:22;11927:53;:::i;:::-;11917:63;;11873:117;12029:2;12055:53;12100:7;12091:6;12080:9;12076:22;12055:53;:::i;:::-;12045:63;;12000:118;11651:474;;;;;:::o;12131:180::-;12179:77;12176:1;12169:88;12276:4;12273:1;12266:15;12300:4;12297:1;12290:15;12317:320;12361:6;12398:1;12392:4;12388:12;12378:22;;12445:1;12439:4;12435:12;12466:18;12456:81;;12522:4;12514:6;12510:17;12500:27;;12456:81;12584:2;12576:6;12573:14;12553:18;12550:38;12547:84;;12603:18;;:::i;:::-;12547:84;12368:269;12317:320;;;:::o;12643:442::-;12792:4;12830:2;12819:9;12815:18;12807:26;;12843:71;12911:1;12900:9;12896:17;12887:6;12843:71;:::i;:::-;12924:72;12992:2;12981:9;12977:18;12968:6;12924:72;:::i;:::-;13006;13074:2;13063:9;13059:18;13050:6;13006:72;:::i;:::-;12643:442;;;;;;:::o;13091:180::-;13139:77;13136:1;13129:88;13236:4;13233:1;13226:15;13260:4;13257:1;13250:15;13277:233;13316:3;13339:24;13357:5;13339:24;:::i;:::-;13330:33;;13385:66;13378:5;13375:77;13372:103;;13455:18;;:::i;:::-;13372:103;13502:1;13495:5;13491:13;13484:20;;13277:233;;;:::o;13516:141::-;13565:4;13588:3;13580:11;;13611:3;13608:1;13601:14;13645:4;13642:1;13632:18;13624:26;;13516:141;;;:::o;13663:93::-;13700:6;13747:2;13742;13735:5;13731:14;13727:23;13717:33;;13663:93;;;:::o;13762:107::-;13806:8;13856:5;13850:4;13846:16;13825:37;;13762:107;;;;:::o;13875:393::-;13944:6;13994:1;13982:10;13978:18;14017:97;14047:66;14036:9;14017:97;:::i;:::-;14135:39;14165:8;14154:9;14135:39;:::i;:::-;14123:51;;14207:4;14203:9;14196:5;14192:21;14183:30;;14256:4;14246:8;14242:19;14235:5;14232:30;14222:40;;13951:317;;13875:393;;;;;:::o;14274:60::-;14302:3;14323:5;14316:12;;14274:60;;;:::o;14340:142::-;14390:9;14423:53;14441:34;14450:24;14468:5;14450:24;:::i;:::-;14441:34;:::i;:::-;14423:53;:::i;:::-;14410:66;;14340:142;;;:::o;14488:75::-;14531:3;14552:5;14545:12;;14488:75;;;:::o;14569:269::-;14679:39;14710:7;14679:39;:::i;:::-;14740:91;14789:41;14813:16;14789:41;:::i;:::-;14781:6;14774:4;14768:11;14740:91;:::i;:::-;14734:4;14727:105;14645:193;14569:269;;;:::o;14844:73::-;14889:3;14844:73;:::o;14923:189::-;15000:32;;:::i;:::-;15041:65;15099:6;15091;15085:4;15041:65;:::i;:::-;14976:136;14923:189;;:::o;15118:186::-;15178:120;15195:3;15188:5;15185:14;15178:120;;;15249:39;15286:1;15279:5;15249:39;:::i;:::-;15222:1;15215:5;15211:13;15202:22;;15178:120;;;15118:186;;:::o;15310:543::-;15411:2;15406:3;15403:11;15400:446;;;15445:38;15477:5;15445:38;:::i;:::-;15529:29;15547:10;15529:29;:::i;:::-;15519:8;15515:44;15712:2;15700:10;15697:18;15694:49;;;15733:8;15718:23;;15694:49;15756:80;15812:22;15830:3;15812:22;:::i;:::-;15802:8;15798:37;15785:11;15756:80;:::i;:::-;15415:431;;15400:446;15310:543;;;:::o;15859:117::-;15913:8;15963:5;15957:4;15953:16;15932:37;;15859:117;;;;:::o;15982:169::-;16026:6;16059:51;16107:1;16103:6;16095:5;16092:1;16088:13;16059:51;:::i;:::-;16055:56;16140:4;16134;16130:15;16120:25;;16033:118;15982:169;;;;:::o;16156:295::-;16232:4;16378:29;16403:3;16397:4;16378:29;:::i;:::-;16370:37;;16440:3;16437:1;16433:11;16427:4;16424:21;16416:29;;16156:295;;;;:::o;16456:1395::-;16573:37;16606:3;16573:37;:::i;:::-;16675:18;16667:6;16664:30;16661:56;;;16697:18;;:::i;:::-;16661:56;16741:38;16773:4;16767:11;16741:38;:::i;:::-;16826:67;16886:6;16878;16872:4;16826:67;:::i;:::-;16920:1;16944:4;16931:17;;16976:2;16968:6;16965:14;16993:1;16988:618;;;;17650:1;17667:6;17664:77;;;17716:9;17711:3;17707:19;17701:26;17692:35;;17664:77;17767:67;17827:6;17820:5;17767:67;:::i;:::-;17761:4;17754:81;17623:222;16958:887;;16988:618;17040:4;17036:9;17028:6;17024:22;17074:37;17106:4;17074:37;:::i;:::-;17133:1;17147:208;17161:7;17158:1;17155:14;17147:208;;;17240:9;17235:3;17231:19;17225:26;17217:6;17210:42;17291:1;17283:6;17279:14;17269:24;;17338:2;17327:9;17323:18;17310:31;;17184:4;17181:1;17177:12;17172:17;;17147:208;;;17383:6;17374:7;17371:19;17368:179;;;17441:9;17436:3;17432:19;17426:26;17484:48;17526:4;17518:6;17514:17;17503:9;17484:48;:::i;:::-;17476:6;17469:64;17391:156;17368:179;17593:1;17589;17581:6;17577:14;17573:22;17567:4;17560:36;16995:611;;;16958:887;;16548:1303;;;16456:1395;;:::o;17857:170::-;17997:22;17993:1;17985:6;17981:14;17974:46;17857:170;:::o;18033:366::-;18175:3;18196:67;18260:2;18255:3;18196:67;:::i;:::-;18189:74;;18272:93;18361:3;18272:93;:::i;:::-;18390:2;18385:3;18381:12;18374:19;;18033:366;;;:::o;18405:419::-;18571:4;18609:2;18598:9;18594:18;18586:26;;18658:9;18652:4;18648:20;18644:1;18633:9;18629:17;18622:47;18686:131;18812:4;18686:131;:::i;:::-;18678:139;;18405:419;;;:::o;18830:148::-;18932:11;18969:3;18954:18;;18830:148;;;;:::o;18984:390::-;19090:3;19118:39;19151:5;19118:39;:::i;:::-;19173:89;19255:6;19250:3;19173:89;:::i;:::-;19166:96;;19271:65;19329:6;19324:3;19317:4;19310:5;19306:16;19271:65;:::i;:::-;19361:6;19356:3;19352:16;19345:23;;19094:280;18984:390;;;;:::o;19380:435::-;19560:3;19582:95;19673:3;19664:6;19582:95;:::i;:::-;19575:102;;19694:95;19785:3;19776:6;19694:95;:::i;:::-;19687:102;;19806:3;19799:10;;19380:435;;;;;:::o;19821:98::-;19872:6;19906:5;19900:12;19890:22;;19821:98;;;:::o;19925:168::-;20008:11;20042:6;20037:3;20030:19;20082:4;20077:3;20073:14;20058:29;;19925:168;;;;:::o;20099:373::-;20185:3;20213:38;20245:5;20213:38;:::i;:::-;20267:70;20330:6;20325:3;20267:70;:::i;:::-;20260:77;;20346:65;20404:6;20399:3;20392:4;20385:5;20381:16;20346:65;:::i;:::-;20436:29;20458:6;20436:29;:::i;:::-;20431:3;20427:39;20420:46;;20189:283;20099:373;;;;:::o;20478:640::-;20673:4;20711:3;20700:9;20696:19;20688:27;;20725:71;20793:1;20782:9;20778:17;20769:6;20725:71;:::i;:::-;20806:72;20874:2;20863:9;20859:18;20850:6;20806:72;:::i;:::-;20888;20956:2;20945:9;20941:18;20932:6;20888:72;:::i;:::-;21007:9;21001:4;20997:20;20992:2;20981:9;20977:18;20970:48;21035:76;21106:4;21097:6;21035:76;:::i;:::-;21027:84;;20478:640;;;;;;;:::o;21124:141::-;21180:5;21211:6;21205:13;21196:22;;21227:32;21253:5;21227:32;:::i;:::-;21124:141;;;;:::o;21271:349::-;21340:6;21389:2;21377:9;21368:7;21364:23;21360:32;21357:119;;;21395:79;;:::i;:::-;21357:119;21515:1;21540:63;21595:7;21586:6;21575:9;21571:22;21540:63;:::i;:::-;21530:73;;21486:127;21271:349;;;;:::o;21626:180::-;21674:77;21671:1;21664:88;21771:4;21768:1;21761:15;21795:4;21792:1;21785:15;21812:332;21933:4;21971:2;21960:9;21956:18;21948:26;;21984:71;22052:1;22041:9;22037:17;22028:6;21984:71;:::i;:::-;22065:72;22133:2;22122:9;22118:18;22109:6;22065:72;:::i;:::-;21812:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2087000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"burnToken(uint256)": "infinite",
								"connectWallet(address)": "24803",
								"connectedWallet()": "2642",
								"getApproved(uint256)": "infinite",
								"getDocumentHash(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mintToken(address,string)": "infinite",
								"name()": "infinite",
								"nextTokenId()": "2448",
								"owner()": "2626",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "809",
								"symbol()": "infinite",
								"tokenDocumentHashes(uint256)": "infinite",
								"tokenExists(uint256)": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 176,
									"end": 1626,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 176,
									"end": 1626,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 176,
									"end": 1626,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 365,
									"end": 535,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 365,
									"end": 535,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 365,
									"end": 535,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 365,
									"end": 535,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 365,
									"end": 535,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 365,
									"end": 535,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 365,
									"end": 535,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 365,
									"end": 535,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 365,
									"end": 535,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 439,
									"end": 451,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "E"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "5469746C6544656564546F6B656E000000000000000000000000000000000000"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "5444540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1494,
									"end": 1499,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1491,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1486,
									"end": 1499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1527,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1510,
									"end": 1517,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1510,
									"end": 1527,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1311,
									"end": 1323,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1307,
									"end": 1404,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1307,
									"end": 1404,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1390,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1361,
									"end": 1392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1307,
									"end": 1404,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1307,
									"end": 1404,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1433,
									"end": 1445,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1432,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1414,
									"end": 1432,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1414,
									"end": 1432,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1262,
									"end": 1454,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 365,
									"end": 535,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 176,
									"end": 1626,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 176,
									"end": 1626,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3006,
									"end": 3197,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 3006,
									"end": 3197,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3080,
									"end": 3096,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3080,
									"end": 3105,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3080,
									"end": 3105,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3125,
									"end": 3133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3122,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3116,
									"end": 3122,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3180,
									"end": 3188,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3170,
									"end": 3178,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 3069,
									"end": 3197,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3197,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "113"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 13,
									"value": "113"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 176,
									"end": 1626,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 176,
									"end": 1626,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 176,
									"end": 1626,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 176,
									"end": 1626,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 176,
									"end": 1626,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 176,
									"end": 1626,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 1626,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 176,
									"end": 1626,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 1626,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f5586614243f435031b88e189209f3dc3ac66d0e3b3f1f292690787d80cb7ccf64736f6c634300081a0033",
									".code": [
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "75794A3C"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "B88D4FDE"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "C87B56DD"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "D7D0DF2A"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "E985E9C5"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "75794A3C"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "7B47EC1A"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "80964805"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "8796EC86"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "3D02D0C9"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "42842E0E"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "6352211E"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "923F9E"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "81812FC"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "1FD8293F"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 1626,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 999,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 999,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 999,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1607,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1607,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1607,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2438,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2438,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3610,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3610,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3610,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3429,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3429,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 326,
											"end": 356,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 326,
											"end": 356,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 326,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 326,
											"end": 356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 326,
											"end": 356,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 326,
											"end": 356,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 326,
											"end": 356,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 326,
											"end": 356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 326,
											"end": 356,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 326,
											"end": 356,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4279,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4279,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 710,
											"end": 943,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 710,
											"end": 943,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 710,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 710,
											"end": 943,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 710,
											"end": 943,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 710,
											"end": 943,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 710,
											"end": 943,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 710,
											"end": 943,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 710,
											"end": 943,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 710,
											"end": 943,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 710,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 710,
											"end": 943,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 710,
											"end": 943,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 710,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 710,
											"end": 943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 710,
											"end": 943,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 710,
											"end": 943,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 710,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 710,
											"end": 943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 710,
											"end": 943,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 710,
											"end": 943,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 710,
											"end": 943,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4938,
											"end": 5072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4938,
											"end": 5072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2251,
											"end": 2371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2251,
											"end": 2371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2251,
											"end": 2371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1976,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1976,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1976,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2368,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 259,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 233,
											"end": 259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 233,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 233,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 233,
											"end": 259,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 233,
											"end": 259,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 259,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 233,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 233,
											"end": 259,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 233,
											"end": 259,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 233,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 233,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 233,
											"end": 259,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 233,
											"end": 259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 233,
											"end": 259,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 259,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 233,
											"end": 259,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 233,
											"end": 259,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 233,
											"end": 259,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 233,
											"end": 259,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 233,
											"end": 259,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1426,
											"end": 1623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1426,
											"end": 1623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 266,
											"end": 319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 266,
											"end": 319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 266,
											"end": 319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1188,
											"end": 1385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 1188,
											"end": 1385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1188,
											"end": 1385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1693,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1693,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2598,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2598,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3840,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3840,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5143,
											"end": 5354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5143,
											"end": 5354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2764,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2764,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2764,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 543,
											"end": 648,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 543,
											"end": 648,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 543,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 543,
											"end": 648,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 543,
											"end": 648,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 543,
											"end": 648,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 543,
											"end": 648,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 543,
											"end": 648,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 543,
											"end": 648,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 543,
											"end": 648,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 543,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 543,
											"end": 648,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 543,
											"end": 648,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 543,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 543,
											"end": 648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 543,
											"end": 648,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 543,
											"end": 648,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 543,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 543,
											"end": 648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 543,
											"end": 648,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 543,
											"end": 648,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 543,
											"end": 648,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4057,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4057,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4057,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2626,
											"end": 2846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2626,
											"end": 2846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1082,
											"end": 1119,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1082,
											"end": 1119,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1082,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 1097,
											"end": 1104,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1082,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 1082,
											"end": 1105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1082,
											"end": 1105,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 1082,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1082,
											"end": 1119,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1082,
											"end": 1119,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1082,
											"end": 1119,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1082,
											"end": 1119,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1119,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1119,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1713,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "PUSH",
											"source": 2,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1757,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1814,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1892,
											"end": 1903,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1868,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1904,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1868,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1904,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2516,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2509,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2509,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3711,
											"end": 3718,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3697,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3697,
											"end": 3719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3752,
											"end": 3759,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3739,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3510,
											"end": 3512,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3514,
											"end": 3521,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3523,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3523,
											"end": 3535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3501,
											"end": 3536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3536,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3501,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 326,
											"end": 356,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 326,
											"end": 356,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 326,
											"end": 356,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 356,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 326,
											"end": 356,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 326,
											"end": 356,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 326,
											"end": 356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4374,
											"end": 4376,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4445,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4414,
											"end": 4447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4701,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4712,
											"end": 4714,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4716,
											"end": 4723,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4725,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4725,
											"end": 4737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4704,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4704,
											"end": 4738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4738,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4738,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4774,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 4749,
											"end": 4860,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4819,
											"end": 4823,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4825,
											"end": 4832,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4834,
											"end": 4847,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 4798,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4860,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 4749,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4867,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 710,
											"end": 943,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 710,
											"end": 943,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1579,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1579,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 797,
											"end": 812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 815,
											"end": 826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 815,
											"end": 826,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 797,
											"end": 826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 797,
											"end": 826,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 837,
											"end": 848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 837,
											"end": 848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 837,
											"end": 850,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 837,
											"end": 850,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 837,
											"end": 850,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 837,
											"end": 850,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 837,
											"end": 850,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 837,
											"end": 850,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 837,
											"end": 850,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 837,
											"end": 850,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 837,
											"end": 850,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 837,
											"end": 850,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 837,
											"end": 850,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 837,
											"end": 850,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 837,
											"end": 850,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 837,
											"end": 850,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 837,
											"end": 850,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 837,
											"end": 850,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 837,
											"end": 850,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 863,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 869,
											"end": 871,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 873,
											"end": 880,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 863,
											"end": 868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 863,
											"end": 881,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 863,
											"end": 881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 863,
											"end": 881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 923,
											"end": 935,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 892,
											"end": 911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 892,
											"end": 920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 919,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 892,
											"end": 920,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 892,
											"end": 920,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 892,
											"end": 920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 892,
											"end": 920,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 892,
											"end": 920,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 892,
											"end": 920,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 892,
											"end": 920,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 892,
											"end": 920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 892,
											"end": 920,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 892,
											"end": 920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 920,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 892,
											"end": 935,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 892,
											"end": 935,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 892,
											"end": 935,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 892,
											"end": 935,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 892,
											"end": 935,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 892,
											"end": 935,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 892,
											"end": 935,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 892,
											"end": 935,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 892,
											"end": 935,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 892,
											"end": 935,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 786,
											"end": 943,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 710,
											"end": 943,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 710,
											"end": 943,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 710,
											"end": 943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5042,
											"end": 5046,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5048,
											"end": 5050,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5052,
											"end": 5059,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5025,
											"end": 5064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2341,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2046,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2063,
											"end": 2068,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2059,
											"end": 2148,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2133,
											"end": 2134,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 2,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2106,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2148,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2059,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2174,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2181,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1579,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1579,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2460,
											"end": 2461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2433,
											"end": 2463,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2463,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2433,
											"end": 2463,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 259,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 233,
											"end": 259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 233,
											"end": 259,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 233,
											"end": 259,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 233,
											"end": 259,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 233,
											"end": 259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1579,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1579,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1518,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 1510,
											"end": 1517,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1498,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 1498,
											"end": 1518,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1498,
											"end": 1518,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 1498,
											"end": 1518,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 1490,
											"end": 1543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1490,
											"end": 1543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 1561,
											"end": 1568,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 1555,
											"end": 1569,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1569,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 1555,
											"end": 1569,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1587,
											"end": 1606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1587,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1614,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1587,
											"end": 1615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1587,
											"end": 1615,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1587,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 1615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1587,
											"end": 1615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1587,
											"end": 1615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1587,
											"end": 1615,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1587,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 1615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1587,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1615,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1587,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 1580,
											"end": 1615,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 1580,
											"end": 1615,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 1580,
											"end": 1615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1623,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 266,
											"end": 319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 266,
											"end": 319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 266,
											"end": 319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 266,
											"end": 319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1264,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1285,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1285,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 1285,
											"end": 1305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1285,
											"end": 1305,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 1285,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 1277,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1349,
											"end": 1368,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1349,
											"end": 1377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1369,
											"end": 1376,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1349,
											"end": 1377,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1349,
											"end": 1377,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1349,
											"end": 1377,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1377,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1349,
											"end": 1377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1349,
											"end": 1377,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1349,
											"end": 1377,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1349,
											"end": 1377,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1377,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1349,
											"end": 1377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1377,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 1342,
											"end": 1377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 1342,
											"end": 1377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2658,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2678,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2671,
											"end": 2685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2671,
											"end": 2685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 3945,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 3945,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3945,
											"end": 3957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3957,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 3945,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3959,
											"end": 3967,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3977,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 3926,
											"end": 3978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3978,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 3926,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5257,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 5270,
											"end": 5274,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5257,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5257,
											"end": 5288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5257,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 5257,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 5322,
											"end": 5326,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5328,
											"end": 5330,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5332,
											"end": 5339,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5345,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 5299,
											"end": 5346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5346,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 5299,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2841,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 2868,
											"end": 2875,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2854,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2854,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 2913,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2913,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2913,
											"end": 2923,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 2913,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2923,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2966,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 2954,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 2962,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 2966,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2983,
											"end": 2990,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2992,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 2992,
											"end": 3010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2969,
											"end": 3011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 3016,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 3016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 3016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 543,
											"end": 648,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 543,
											"end": 648,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 626,
											"end": 640,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 608,
											"end": 623,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 608,
											"end": 623,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 640,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 608,
											"end": 640,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 608,
											"end": 640,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 608,
											"end": 640,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 608,
											"end": 640,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 608,
											"end": 640,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 608,
											"end": 640,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 608,
											"end": 640,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 608,
											"end": 640,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 608,
											"end": 640,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 608,
											"end": 640,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 608,
											"end": 640,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 608,
											"end": 640,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 608,
											"end": 640,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 608,
											"end": 640,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 608,
											"end": 640,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 608,
											"end": 640,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 608,
											"end": 640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 543,
											"end": 648,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 543,
											"end": 648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4145,
											"end": 4149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4193,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4203,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4162,
											"end": 4204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4162,
											"end": 4204,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1579,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1579,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2731,
											"end": 2732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2711,
											"end": 2733,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2711,
											"end": 2719,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2711,
											"end": 2733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2711,
											"end": 2733,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2711,
											"end": 2733,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2707,
											"end": 2800,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2757,
											"end": 2788,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2707,
											"end": 2800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2829,
											"end": 2837,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2810,
											"end": 2838,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2810,
											"end": 2838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 933,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 785,
											"end": 933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 861,
											"end": 865,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 900,
											"end": 925,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 885,
											"end": 925,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 885,
											"end": 925,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 885,
											"end": 925,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 885,
											"end": 896,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 885,
											"end": 925,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 885,
											"end": 925,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 885,
											"end": 925,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 885,
											"end": 925,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 878,
											"end": 925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 878,
											"end": 925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 785,
											"end": 933,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 785,
											"end": 933,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 785,
											"end": 933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 785,
											"end": 933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16648,
											"end": 16655,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16668,
											"end": 16681,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16684,
											"end": 16701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 16693,
											"end": 16700,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16684,
											"end": 16692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 16684,
											"end": 16701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16684,
											"end": 16701,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 16684,
											"end": 16701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16668,
											"end": 16701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16668,
											"end": 16701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16733,
											"end": 16734,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16716,
											"end": 16721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16712,
											"end": 16802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 16712,
											"end": 16802,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16782,
											"end": 16789,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH",
											"source": 2,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 16759,
											"end": 16790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16712,
											"end": 16802,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 16712,
											"end": 16802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16819,
											"end": 16824,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16812,
											"end": 16824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16812,
											"end": 16824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16812,
											"end": 16824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16585,
											"end": 16832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6116,
											"end": 6245,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 6116,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6186,
											"end": 6193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6228,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6229,
											"end": 6236,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6206,
											"end": 6237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6206,
											"end": 6237,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6116,
											"end": 6245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6116,
											"end": 6245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6116,
											"end": 6245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6116,
											"end": 6245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 672,
											"end": 770,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 672,
											"end": 770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 725,
											"end": 732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 745,
											"end": 762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 745,
											"end": 762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 672,
											"end": 770,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 672,
											"end": 770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14898,
											"end": 14931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 14907,
											"end": 14909,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14911,
											"end": 14918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14920,
											"end": 14924,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14926,
											"end": 14930,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14898,
											"end": 14906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 14898,
											"end": 14931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14898,
											"end": 14931,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 14898,
											"end": 14931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14817,
											"end": 14939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9164,
											"end": 9171,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9184,
											"end": 9196,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9199,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 9208,
											"end": 9215,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9199,
											"end": 9207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 9199,
											"end": 9216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9199,
											"end": 9216,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 9199,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9184,
											"end": 9216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9184,
											"end": 9216,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9295,
											"end": 9296,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9283,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9275,
											"end": 9363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 9275,
											"end": 9363,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9314,
											"end": 9351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 9331,
											"end": 9335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9337,
											"end": 9341,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9343,
											"end": 9350,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9314,
											"end": 9330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 9314,
											"end": 9351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9314,
											"end": 9351,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 9314,
											"end": 9351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9275,
											"end": 9363,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 9275,
											"end": 9363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9426,
											"end": 9427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9410,
											"end": 9414,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9406,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 9406,
											"end": 9669,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9528,
											"end": 9576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 9545,
											"end": 9546,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9549,
											"end": 9556,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9566,
											"end": 9567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9528,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 9528,
											"end": 9576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9528,
											"end": 9576,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 9528,
											"end": 9576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9642,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9622,
											"end": 9631,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9632,
											"end": 9636,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9406,
											"end": 9669,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 9406,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9699,
											"end": 9700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9685,
											"end": 9687,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9681,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 9681,
											"end": 9792,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9764,
											"end": 9765,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9747,
											"end": 9756,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9757,
											"end": 9759,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9681,
											"end": 9792,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 9681,
											"end": 9792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9823,
											"end": 9825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9811,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9812,
											"end": 9819,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9862,
											"end": 9869,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9858,
											"end": 9860,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9852,
											"end": 9856,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 9890,
											"end": 9894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9894,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9894,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9078,
											"end": 9902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 2024,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1858,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1929,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1929,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1929,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1918,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1918,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1914,
											"end": 2017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1992,
											"end": 2004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1965,
											"end": 2005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 2017,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1914,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 2024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10238,
											"end": 10573,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 10238,
											"end": 10573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10320,
											"end": 10321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10306,
											"end": 10322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10306,
											"end": 10322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10306,
											"end": 10308,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10306,
											"end": 10322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10306,
											"end": 10322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10306,
											"end": 10322,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10302,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 10302,
											"end": 10391,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10376,
											"end": 10377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 10346,
											"end": 10379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10302,
											"end": 10391,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 10302,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10401,
											"end": 10422,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10433,
											"end": 10435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10437,
											"end": 10444,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 10425,
											"end": 10457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10425,
											"end": 10457,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10425,
											"end": 10457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10401,
											"end": 10457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10401,
											"end": 10457,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10497,
											"end": 10498,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10472,
											"end": 10499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10472,
											"end": 10499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10472,
											"end": 10485,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10472,
											"end": 10499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10472,
											"end": 10499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10472,
											"end": 10499,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10468,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 10468,
											"end": 10566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10551,
											"end": 10552,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH",
											"source": 2,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 10523,
											"end": 10554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10468,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 10468,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10291,
											"end": 10573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10238,
											"end": 10573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10238,
											"end": 10573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10238,
											"end": 10573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3006,
											"end": 3197,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3006,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 3133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3122,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3116,
											"end": 3122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3069,
											"end": 3197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 12021,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 11789,
											"end": 12021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11841,
											"end": 11862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11865,
											"end": 11905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 11881,
											"end": 11882,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11885,
											"end": 11892,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11902,
											"end": 11903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11865,
											"end": 11872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 11865,
											"end": 11905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11865,
											"end": 11905,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 11865,
											"end": 11905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11841,
											"end": 11905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11841,
											"end": 11905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 11946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11920,
											"end": 11947,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11920,
											"end": 11947,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11920,
											"end": 11933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11920,
											"end": 11947,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11920,
											"end": 11947,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11920,
											"end": 11947,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11916,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 11916,
											"end": 12014,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11994,
											"end": 12001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11971,
											"end": 12002,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11971,
											"end": 12002,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11971,
											"end": 12002,
											"name": "PUSH",
											"source": 2,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11971,
											"end": 12002,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11971,
											"end": 12002,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11971,
											"end": 12002,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11971,
											"end": 12002,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11971,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 11971,
											"end": 12002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11971,
											"end": 12002,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11971,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 11971,
											"end": 12002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11971,
											"end": 12002,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 11971,
											"end": 12002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11971,
											"end": 12002,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11971,
											"end": 12002,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11971,
											"end": 12002,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11971,
											"end": 12002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11971,
											"end": 12002,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11971,
											"end": 12002,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11971,
											"end": 12002,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11916,
											"end": 12014,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 11916,
											"end": 12014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11830,
											"end": 12021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11789,
											"end": 12021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11789,
											"end": 12021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16152,
											"end": 16153,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16132,
											"end": 16140,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16200,
											"end": 16208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH",
											"source": 2,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 16178,
											"end": 16209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16269,
											"end": 16277,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16249,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16250,
											"end": 16255,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16257,
											"end": 16265,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16315,
											"end": 16323,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16308,
											"end": 16313,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 16325,
											"end": 16333,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 16293,
											"end": 16334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16024,
											"end": 16342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17516,
											"end": 17517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17499,
											"end": 17501,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17499,
											"end": 17513,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17499,
											"end": 17513,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17499,
											"end": 17513,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17554,
											"end": 17556,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17574,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17538,
											"end": 17574,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17574,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 17575,
											"end": 17587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 17575,
											"end": 17585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 17575,
											"end": 17587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17575,
											"end": 17587,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 17575,
											"end": 17587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17589,
											"end": 17593,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17595,
											"end": 17602,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17604,
											"end": 17608,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 17538,
											"end": 17609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 17538,
											"end": 17609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17869,
											"end": 17870,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17852,
											"end": 17858,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17852,
											"end": 17865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17852,
											"end": 17870,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17848,
											"end": 18148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 17848,
											"end": 18148,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17924,
											"end": 17926,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 17902,
											"end": 17927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17848,
											"end": 18148,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 17848,
											"end": 18148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18098,
											"end": 18104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18092,
											"end": 18105,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18083,
											"end": 18089,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18079,
											"end": 18081,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18075,
											"end": 18090,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18068,
											"end": 18106,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17667,
											"end": 17708,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 17667,
											"end": 17708,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 17667,
											"end": 17708,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17657,
											"end": 17663,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17653,
											"end": 17785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 17653,
											"end": 17785,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17762,
											"end": 17764,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 17740,
											"end": 17765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17653,
											"end": 17785,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 17653,
											"end": 17785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17610,
											"end": 17800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17382,
											"end": 18181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3367,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 3273,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3324,
											"end": 3337,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 716,
											"end": 729,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 767,
											"end": 781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 805,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 784,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 795,
											"end": 800,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 784,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 784,
											"end": 801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 784,
											"end": 801,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 784,
											"end": 801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 784,
											"end": 805,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 767,
											"end": 805,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 767,
											"end": 805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 820,
											"end": 840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 860,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 843,
											"end": 861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 820,
											"end": 861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 820,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 876,
											"end": 887,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1003,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 997,
											"end": 1012,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 989,
											"end": 995,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 978,
											"end": 1013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 978,
											"end": 1013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1049,
											"end": 1053,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1226,
											"name": "PUSH",
											"source": 7,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1204,
											"end": 1209,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1200,
											"end": 1214,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1227,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 1190,
											"end": 1193,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1182,
											"end": 1228,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1276,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 1265,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1304,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1299,
											"end": 1309,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1359,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 660,
											"end": 1378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5995,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 5878,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5944,
											"end": 5951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5978,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5979,
											"end": 5986,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5987,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5995,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5995,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5995,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15289,
											"end": 15298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15318,
											"end": 15319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15302,
											"end": 15306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15337,
											"end": 15350,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15353,
											"end": 15375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 15367,
											"end": 15374,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15353,
											"end": 15366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 15353,
											"end": 15375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15353,
											"end": 15375,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 15353,
											"end": 15375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15337,
											"end": 15375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15337,
											"end": 15375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15522,
											"end": 15523,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15510,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15537,
											"end": 15541,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15528,
											"end": 15533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15546,
											"end": 15575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 15563,
											"end": 15568,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15570,
											"end": 15574,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15546,
											"end": 15562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 15546,
											"end": 15575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15546,
											"end": 15575,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 15546,
											"end": 15575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15545,
											"end": 15575,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15625,
											"end": 15629,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH",
											"source": 2,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 15603,
											"end": 15630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15666,
											"end": 15675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15721,
											"end": 15728,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15717,
											"end": 15719,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15710,
											"end": 15715,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15322,
											"end": 15756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15795,
											"end": 15797,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15783,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15784,
											"end": 15791,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15127,
											"end": 15805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7398,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 7412,
											"end": 7417,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7419,
											"end": 7426,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7398,
											"end": 7411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 7398,
											"end": 7436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7398,
											"end": 7436,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 7398,
											"end": 7436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7393,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 7393,
											"end": 7654,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7474,
											"end": 7475,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7457,
											"end": 7462,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7453,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 7453,
											"end": 7643,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7527,
											"end": 7534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH",
											"source": 2,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 7504,
											"end": 7535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7453,
											"end": 7643,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 7453,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7610,
											"end": 7617,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7619,
											"end": 7626,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH",
											"source": 2,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 7583,
											"end": 7627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7393,
											"end": 7654,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 7393,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12587,
											"end": 12594,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12607,
											"end": 12621,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12624,
											"end": 12625,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12607,
											"end": 12625,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12607,
											"end": 12625,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12674,
											"end": 12682,
											"name": "PUSH",
											"source": 10,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12665,
											"end": 12670,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12665,
											"end": 12682,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12661,
											"end": 12767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 12661,
											"end": 12767,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12712,
											"end": 12720,
											"name": "PUSH",
											"source": 10,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 12703,
											"end": 12720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12749,
											"end": 12751,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12739,
											"end": 12751,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12739,
											"end": 12751,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12739,
											"end": 12751,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12739,
											"end": 12751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12661,
											"end": 12767,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 12661,
											"end": 12767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12794,
											"end": 12802,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12785,
											"end": 12790,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12785,
											"end": 12802,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12781,
											"end": 12887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 12781,
											"end": 12887,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12832,
											"end": 12840,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 12823,
											"end": 12840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12869,
											"end": 12871,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12859,
											"end": 12871,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12859,
											"end": 12871,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12859,
											"end": 12871,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12859,
											"end": 12871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12781,
											"end": 12887,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 12781,
											"end": 12887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12914,
											"end": 12922,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12905,
											"end": 12910,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12905,
											"end": 12922,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12901,
											"end": 13007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 12901,
											"end": 13007,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12960,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 12943,
											"end": 12960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12989,
											"end": 12991,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 12979,
											"end": 12991,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12979,
											"end": 12991,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12979,
											"end": 12991,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12979,
											"end": 12991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12901,
											"end": 13007,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 12901,
											"end": 13007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13034,
											"end": 13041,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 13025,
											"end": 13030,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13025,
											"end": 13041,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13021,
											"end": 13124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 13021,
											"end": 13124,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13071,
											"end": 13078,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 13062,
											"end": 13078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13107,
											"end": 13108,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 13097,
											"end": 13108,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13097,
											"end": 13108,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13097,
											"end": 13108,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13097,
											"end": 13108,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13021,
											"end": 13124,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 13021,
											"end": 13124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13151,
											"end": 13158,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 13142,
											"end": 13147,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13142,
											"end": 13158,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13138,
											"end": 13241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 13138,
											"end": 13241,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13188,
											"end": 13195,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 13179,
											"end": 13195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13224,
											"end": 13225,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13214,
											"end": 13225,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13214,
											"end": 13225,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13214,
											"end": 13225,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13214,
											"end": 13225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13138,
											"end": 13241,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 13138,
											"end": 13241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13268,
											"end": 13275,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13259,
											"end": 13264,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13259,
											"end": 13275,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13255,
											"end": 13358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 13255,
											"end": 13358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13305,
											"end": 13312,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 13296,
											"end": 13312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13341,
											"end": 13342,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 13331,
											"end": 13342,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13331,
											"end": 13342,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13331,
											"end": 13342,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13331,
											"end": 13342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13255,
											"end": 13358,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 13255,
											"end": 13358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13385,
											"end": 13392,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 13376,
											"end": 13381,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13376,
											"end": 13392,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13372,
											"end": 13440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 13372,
											"end": 13440,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13423,
											"end": 13424,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13413,
											"end": 13424,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13413,
											"end": 13424,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13413,
											"end": 13424,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13413,
											"end": 13424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13372,
											"end": 13440,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 13372,
											"end": 13440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13468,
											"end": 13474,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13461,
											"end": 13474,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13461,
											"end": 13474,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13461,
											"end": 13474,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12534,
											"end": 13482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6724,
											"end": 6725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6712,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6753,
											"end": 6760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6749,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6764,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 6781,
											"end": 6786,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6788,
											"end": 6795,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6764,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6764,
											"end": 6796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6764,
											"end": 6796,
											"name": "tag",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 6764,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6825,
											"end": 6832,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6800,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 6813,
											"end": 6820,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6800,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 6800,
											"end": 6821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6800,
											"end": 6821,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 6800,
											"end": 6821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6685,
											"end": 6833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6685,
											"end": 6833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6565,
											"end": 6841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "188"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "356"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "132"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "356"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "358"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "357"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "358"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "359"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "360"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "359"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "357"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "360"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "361"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "362"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "361"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "362"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1095,
											"end": 1108,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1088,
											"end": 1109,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1109,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 1217,
											"end": 1222,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 1202,
											"end": 1223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1200,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1121,
											"end": 1230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1363,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1346,
											"end": 1364,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1338,
											"end": 1364,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1338,
											"end": 1364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 1436,
											"end": 1437,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1434,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1421,
											"end": 1438,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1418,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 1374,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1236,
											"end": 1446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1452,
											"end": 1601,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 1452,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1488,
											"end": 1495,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1594,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1521,
											"end": 1526,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1595,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1506,
											"end": 1595,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1506,
											"end": 1595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1452,
											"end": 1601,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1452,
											"end": 1601,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1452,
											"end": 1601,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1452,
											"end": 1601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1607,
											"end": 1727,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 1607,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1679,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 1696,
											"end": 1701,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1679,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 1679,
											"end": 1702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1679,
											"end": 1702,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 1679,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1672,
											"end": 1677,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1669,
											"end": 1703,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 1659,
											"end": 1721,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1707,
											"end": 1719,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1721,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 1659,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1607,
											"end": 1727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1607,
											"end": 1727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1733,
											"end": 1870,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 1733,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1778,
											"end": 1783,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1822,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1803,
											"end": 1823,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 1858,
											"end": 1863,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 1832,
											"end": 1864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1733,
											"end": 1870,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1733,
											"end": 1870,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1733,
											"end": 1870,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1733,
											"end": 1870,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1733,
											"end": 1870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 2203,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 1876,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1934,
											"end": 1940,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 1985,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 1980,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1962,
											"end": 1969,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1958,
											"end": 1981,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1954,
											"end": 1986,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 2070,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 1951,
											"end": 2070,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1989,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 1989,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 1989,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1989,
											"end": 2068,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 1989,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 2070,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 1951,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2109,
											"end": 2110,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2134,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2134,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 2134,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2134,
											"end": 2186,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 2134,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2124,
											"end": 2186,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2124,
											"end": 2186,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2080,
											"end": 2196,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 2203,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 2203,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 2203,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 2203,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2209,
											"end": 2308,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 2209,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2261,
											"end": 2267,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2300,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2289,
											"end": 2301,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2279,
											"end": 2301,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2279,
											"end": 2301,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2209,
											"end": 2308,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2209,
											"end": 2308,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2209,
											"end": 2308,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2209,
											"end": 2308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2483,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 2314,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2398,
											"end": 2409,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2427,
											"end": 2430,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2420,
											"end": 2439,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2472,
											"end": 2476,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2467,
											"end": 2470,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2463,
											"end": 2477,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2448,
											"end": 2477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2448,
											"end": 2477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2483,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2489,
											"end": 2628,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 2489,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2578,
											"end": 2584,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2573,
											"end": 2576,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2568,
											"end": 2571,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2585,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 2620,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2605,
											"end": 2608,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2601,
											"end": 2617,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2594,
											"end": 2621,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2489,
											"end": 2628,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2489,
											"end": 2628,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2489,
											"end": 2628,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2489,
											"end": 2628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2634,
											"end": 2736,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 2634,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2675,
											"end": 2681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2728,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2722,
											"end": 2729,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2717,
											"end": 2719,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2710,
											"end": 2715,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2706,
											"end": 2720,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2702,
											"end": 2730,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2692,
											"end": 2730,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2692,
											"end": 2730,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2634,
											"end": 2736,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2634,
											"end": 2736,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2634,
											"end": 2736,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2634,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2742,
											"end": 3119,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 2742,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2830,
											"end": 2833,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 2891,
											"end": 2896,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 2858,
											"end": 2897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2897,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 2858,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2913,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 2977,
											"end": 2983,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 2975,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2913,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 2913,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2913,
											"end": 2984,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 2913,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2906,
											"end": 2984,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2906,
											"end": 2984,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2993,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 3051,
											"end": 3057,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3046,
											"end": 3049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3039,
											"end": 3043,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3032,
											"end": 3037,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3028,
											"end": 3044,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2993,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 2993,
											"end": 3058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2993,
											"end": 3058,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 2993,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3083,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3083,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 3083,
											"end": 3112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3083,
											"end": 3112,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 3083,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3078,
											"end": 3081,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3074,
											"end": 3113,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3067,
											"end": 3113,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3067,
											"end": 3113,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2834,
											"end": 3119,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2742,
											"end": 3119,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2742,
											"end": 3119,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2742,
											"end": 3119,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2742,
											"end": 3119,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2742,
											"end": 3119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3125,
											"end": 3438,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3125,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3238,
											"end": 3242,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3278,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3265,
											"end": 3274,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3253,
											"end": 3279,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3253,
											"end": 3279,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3325,
											"end": 3334,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3319,
											"end": 3323,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3335,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3312,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3300,
											"end": 3309,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3313,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3289,
											"end": 3336,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3353,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3417,
											"end": 3423,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3353,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 3353,
											"end": 3431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3353,
											"end": 3431,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 3353,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3345,
											"end": 3431,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3345,
											"end": 3431,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3125,
											"end": 3438,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3125,
											"end": 3438,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3125,
											"end": 3438,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3125,
											"end": 3438,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3125,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5525,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 5408,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5517,
											"end": 5518,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5515,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5507,
											"end": 5519,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5531,
											"end": 5648,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 5531,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5641,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5637,
											"end": 5638,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5630,
											"end": 5642,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5654,
											"end": 5834,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 5654,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5702,
											"end": 5779,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5699,
											"end": 5700,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5780,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5799,
											"end": 5803,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 5796,
											"end": 5797,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5789,
											"end": 5804,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5827,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5820,
											"end": 5821,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5828,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 5945,
											"end": 5949,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 5923,
											"end": 5950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5915,
											"end": 5921,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5911,
											"end": 5951,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6053,
											"end": 6059,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6041,
											"end": 6051,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6038,
											"end": 6060,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6017,
											"end": 6035,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6005,
											"end": 6015,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5999,
											"end": 6061,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 6064,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6104,
											"end": 6114,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6100,
											"end": 6102,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6093,
											"end": 6115,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5883,
											"end": 6121,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5840,
											"end": 6121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6161,
											"end": 6167,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 6188,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6178,
											"end": 6208,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6178,
											"end": 6208,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 6245,
											"end": 6249,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6237,
											"end": 6243,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 6217,
											"end": 6250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6324,
											"end": 6328,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6414,
											"end": 6432,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6406,
											"end": 6412,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 6436,
											"end": 6454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 6496,
											"end": 6502,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 6474,
											"end": 6503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6466,
											"end": 6503,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6466,
											"end": 6503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6558,
											"end": 6562,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6556,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6548,
											"end": 6563,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6540,
											"end": 6563,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6540,
											"end": 6563,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6262,
											"end": 6570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6674,
											"end": 6680,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6669,
											"end": 6672,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6664,
											"end": 6667,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6651,
											"end": 6681,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 6715,
											"end": 6716,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6706,
											"end": 6712,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6701,
											"end": 6704,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6697,
											"end": 6713,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6690,
											"end": 6717,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6576,
											"end": 6724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6808,
											"end": 6813,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 6891,
											"end": 6897,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 6849,
											"end": 6898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 6833,
											"end": 6899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6899,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6899,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6922,
											"end": 6928,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6915,
											"end": 6920,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6908,
											"end": 6929,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6960,
											"end": 6964,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6953,
											"end": 6958,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 6965,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6998,
											"end": 7001,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6989,
											"end": 6995,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6984,
											"end": 6987,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6980,
											"end": 6996,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6977,
											"end": 7002,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 7005,
											"end": 7084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 7142,
											"end": 7148,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7137,
											"end": 7140,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7132,
											"end": 7135,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 7095,
											"end": 7149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 7155,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6730,
											"end": 7155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7231,
											"end": 7236,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7280,
											"end": 7283,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7273,
											"end": 7277,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 7265,
											"end": 7271,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7261,
											"end": 7278,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7284,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 7288,
											"end": 7367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7405,
											"end": 7411,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7392,
											"end": 7412,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 7505,
											"end": 7508,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7490,
											"end": 7494,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 7430,
											"end": 7509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7421,
											"end": 7509,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7421,
											"end": 7509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7237,
											"end": 7515,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7175,
											"end": 7515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7599,
											"end": 7605,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7607,
											"end": 7613,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7656,
											"end": 7658,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7644,
											"end": 7653,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7635,
											"end": 7642,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7631,
											"end": 7654,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7627,
											"end": 7659,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7624,
											"end": 7743,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7624,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 7624,
											"end": 7743,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7662,
											"end": 7741,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 7662,
											"end": 7741,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 7662,
											"end": 7741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7662,
											"end": 7741,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 7662,
											"end": 7741,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7624,
											"end": 7743,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 7624,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7782,
											"end": 7783,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7807,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 7852,
											"end": 7859,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7843,
											"end": 7849,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7832,
											"end": 7841,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7828,
											"end": 7850,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 7807,
											"end": 7860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7860,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 7807,
											"end": 7860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7797,
											"end": 7860,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7797,
											"end": 7860,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7753,
											"end": 7870,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7937,
											"end": 7939,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7926,
											"end": 7935,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7922,
											"end": 7940,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7909,
											"end": 7941,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7960,
											"end": 7966,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7957,
											"end": 7987,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7954,
											"end": 8071,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7954,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 7954,
											"end": 8071,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 7990,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 7990,
											"end": 8069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8069,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 7990,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7954,
											"end": 8071,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 7954,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8095,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 8150,
											"end": 8157,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8141,
											"end": 8147,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8130,
											"end": 8139,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8126,
											"end": 8148,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8095,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 8095,
											"end": 8158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8095,
											"end": 8158,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 8095,
											"end": 8158,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8085,
											"end": 8158,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8085,
											"end": 8158,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7880,
											"end": 8168,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7521,
											"end": 8175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8181,
											"end": 8510,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 8181,
											"end": 8510,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8240,
											"end": 8246,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8291,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8277,
											"end": 8286,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8268,
											"end": 8275,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8287,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8260,
											"end": 8292,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8257,
											"end": 8376,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8257,
											"end": 8376,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 8257,
											"end": 8376,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8295,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 8295,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 8295,
											"end": 8374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8295,
											"end": 8374,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 8295,
											"end": 8374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8257,
											"end": 8376,
											"name": "tag",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 8257,
											"end": 8376,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8415,
											"end": 8416,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 8485,
											"end": 8492,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8482,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8465,
											"end": 8474,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8461,
											"end": 8483,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 8440,
											"end": 8493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8493,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 8440,
											"end": 8493,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8430,
											"end": 8493,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8430,
											"end": 8493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8386,
											"end": 8503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8181,
											"end": 8510,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8181,
											"end": 8510,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8181,
											"end": 8510,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8181,
											"end": 8510,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8181,
											"end": 8510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8516,
											"end": 8634,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 8516,
											"end": 8634,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 8621,
											"end": 8626,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 8603,
											"end": 8627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8627,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 8603,
											"end": 8627,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8598,
											"end": 8601,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8591,
											"end": 8628,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8516,
											"end": 8634,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8516,
											"end": 8634,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8516,
											"end": 8634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8640,
											"end": 8862,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 8640,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8733,
											"end": 8737,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8771,
											"end": 8773,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8760,
											"end": 8769,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8748,
											"end": 8774,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8748,
											"end": 8774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8784,
											"end": 8855,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 8852,
											"end": 8853,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8841,
											"end": 8850,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8837,
											"end": 8854,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8828,
											"end": 8834,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8784,
											"end": 8855,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 8784,
											"end": 8855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8784,
											"end": 8855,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 8784,
											"end": 8855,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8640,
											"end": 8862,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8640,
											"end": 8862,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8640,
											"end": 8862,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8640,
											"end": 8862,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8640,
											"end": 8862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8868,
											"end": 8984,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 8868,
											"end": 8984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8938,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 8953,
											"end": 8958,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8938,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 8938,
											"end": 8959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8938,
											"end": 8959,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 8938,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8931,
											"end": 8936,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8960,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 8918,
											"end": 8978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 8918,
											"end": 8978,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8974,
											"end": 8975,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8971,
											"end": 8972,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8964,
											"end": 8976,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8918,
											"end": 8978,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 8918,
											"end": 8978,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8868,
											"end": 8984,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8868,
											"end": 8984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8990,
											"end": 9123,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 8990,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9033,
											"end": 9038,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9071,
											"end": 9077,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9058,
											"end": 9078,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9049,
											"end": 9078,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9049,
											"end": 9078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9087,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 9111,
											"end": 9116,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9087,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 9087,
											"end": 9117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9087,
											"end": 9117,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 9087,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8990,
											"end": 9123,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8990,
											"end": 9123,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8990,
											"end": 9123,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8990,
											"end": 9123,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8990,
											"end": 9123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9129,
											"end": 9597,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 9129,
											"end": 9597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9194,
											"end": 9200,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9202,
											"end": 9208,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9251,
											"end": 9253,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9239,
											"end": 9248,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9230,
											"end": 9237,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9226,
											"end": 9249,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9222,
											"end": 9254,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9219,
											"end": 9338,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9219,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 9219,
											"end": 9338,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9257,
											"end": 9336,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 9257,
											"end": 9336,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 9257,
											"end": 9336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9257,
											"end": 9336,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 9257,
											"end": 9336,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9219,
											"end": 9338,
											"name": "tag",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 9219,
											"end": 9338,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9377,
											"end": 9378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9402,
											"end": 9455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 9447,
											"end": 9454,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9438,
											"end": 9444,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9423,
											"end": 9445,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9402,
											"end": 9455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 9402,
											"end": 9455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9402,
											"end": 9455,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 9402,
											"end": 9455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9392,
											"end": 9455,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9392,
											"end": 9455,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9348,
											"end": 9465,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9504,
											"end": 9506,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9530,
											"end": 9580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 9572,
											"end": 9579,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9563,
											"end": 9569,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9552,
											"end": 9561,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9548,
											"end": 9570,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9530,
											"end": 9580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 9530,
											"end": 9580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9530,
											"end": 9580,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 9530,
											"end": 9580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9520,
											"end": 9580,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9520,
											"end": 9580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9475,
											"end": 9590,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9129,
											"end": 9597,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9129,
											"end": 9597,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9129,
											"end": 9597,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9129,
											"end": 9597,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9129,
											"end": 9597,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9129,
											"end": 9597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9603,
											"end": 9910,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 9603,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9664,
											"end": 9668,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9754,
											"end": 9772,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9746,
											"end": 9752,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9743,
											"end": 9773,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9740,
											"end": 9796,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9740,
											"end": 9796,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 9740,
											"end": 9796,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9776,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 9776,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 9776,
											"end": 9794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9776,
											"end": 9794,
											"name": "tag",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 9776,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9740,
											"end": 9796,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 9740,
											"end": 9796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9814,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 9836,
											"end": 9842,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9814,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 9814,
											"end": 9843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9814,
											"end": 9843,
											"name": "tag",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 9814,
											"end": 9843,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9806,
											"end": 9843,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9806,
											"end": 9843,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9898,
											"end": 9902,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9892,
											"end": 9896,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9888,
											"end": 9903,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9880,
											"end": 9903,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9880,
											"end": 9903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9603,
											"end": 9910,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9603,
											"end": 9910,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9603,
											"end": 9910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9603,
											"end": 9910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9916,
											"end": 10339,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 9916,
											"end": 10339,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9993,
											"end": 9998,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 10034,
											"end": 10082,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 10075,
											"end": 10081,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10034,
											"end": 10082,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 10034,
											"end": 10082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10034,
											"end": 10082,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 10034,
											"end": 10082,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10018,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 10018,
											"end": 10083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10018,
											"end": 10083,
											"name": "tag",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 10018,
											"end": 10083,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10009,
											"end": 10083,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10009,
											"end": 10083,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10106,
											"end": 10112,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10099,
											"end": 10104,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10092,
											"end": 10113,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10144,
											"end": 10148,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10137,
											"end": 10142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10133,
											"end": 10149,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10182,
											"end": 10185,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10173,
											"end": 10179,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10168,
											"end": 10171,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10180,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10161,
											"end": 10186,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10158,
											"end": 10270,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10158,
											"end": 10270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 10158,
											"end": 10270,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10189,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 10189,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 10189,
											"end": 10268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10189,
											"end": 10268,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 10189,
											"end": 10268,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10158,
											"end": 10270,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 10158,
											"end": 10270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10279,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 10326,
											"end": 10332,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10321,
											"end": 10324,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10316,
											"end": 10319,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10279,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 10279,
											"end": 10333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10279,
											"end": 10333,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 10279,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9999,
											"end": 10339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9916,
											"end": 10339,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9916,
											"end": 10339,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9916,
											"end": 10339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9916,
											"end": 10339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9916,
											"end": 10339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9916,
											"end": 10339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10358,
											"end": 10696,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 10358,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10413,
											"end": 10418,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10462,
											"end": 10465,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10455,
											"end": 10459,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 10447,
											"end": 10453,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10443,
											"end": 10460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10439,
											"end": 10466,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 10551,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 10429,
											"end": 10551,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 10549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 10470,
											"end": 10549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 10470,
											"end": 10549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 10549,
											"name": "tag",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 10470,
											"end": 10549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 10551,
											"name": "tag",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 10429,
											"end": 10551,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10587,
											"end": 10593,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10574,
											"end": 10594,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 10612,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 10686,
											"end": 10689,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10678,
											"end": 10684,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10671,
											"end": 10675,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10663,
											"end": 10669,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 10676,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10612,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 10612,
											"end": 10690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10612,
											"end": 10690,
											"name": "tag",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 10612,
											"end": 10690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10603,
											"end": 10690,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10603,
											"end": 10690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10419,
											"end": 10696,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10358,
											"end": 10696,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10358,
											"end": 10696,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10358,
											"end": 10696,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10358,
											"end": 10696,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10358,
											"end": 10696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10702,
											"end": 11645,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 10702,
											"end": 11645,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10797,
											"end": 10803,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10805,
											"end": 10811,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10813,
											"end": 10819,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10821,
											"end": 10827,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10870,
											"end": 10873,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 10858,
											"end": 10867,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10849,
											"end": 10856,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 10845,
											"end": 10868,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10841,
											"end": 10874,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10838,
											"end": 10958,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10838,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 10838,
											"end": 10958,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10877,
											"end": 10956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 10877,
											"end": 10956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 10877,
											"end": 10956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10877,
											"end": 10956,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 10877,
											"end": 10956,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10838,
											"end": 10958,
											"name": "tag",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 10838,
											"end": 10958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10997,
											"end": 10998,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11022,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 11067,
											"end": 11074,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11058,
											"end": 11064,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11047,
											"end": 11056,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11043,
											"end": 11065,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11022,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 11022,
											"end": 11075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11022,
											"end": 11075,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 11022,
											"end": 11075,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11012,
											"end": 11075,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 11012,
											"end": 11075,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10968,
											"end": 11085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11124,
											"end": 11126,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11150,
											"end": 11203,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 11195,
											"end": 11202,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11186,
											"end": 11192,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11175,
											"end": 11184,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11171,
											"end": 11193,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11150,
											"end": 11203,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 11150,
											"end": 11203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11150,
											"end": 11203,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 11150,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11140,
											"end": 11203,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11140,
											"end": 11203,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11095,
											"end": 11213,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11252,
											"end": 11254,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11278,
											"end": 11331,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 11323,
											"end": 11330,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11314,
											"end": 11320,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11303,
											"end": 11312,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11299,
											"end": 11321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11278,
											"end": 11331,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 11278,
											"end": 11331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11278,
											"end": 11331,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 11278,
											"end": 11331,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11268,
											"end": 11331,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11268,
											"end": 11331,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11341,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11408,
											"end": 11410,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11397,
											"end": 11406,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11411,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11380,
											"end": 11412,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 11439,
											"end": 11457,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11431,
											"end": 11437,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11428,
											"end": 11458,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11425,
											"end": 11542,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11425,
											"end": 11542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 11425,
											"end": 11542,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11461,
											"end": 11540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 11461,
											"end": 11540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 11461,
											"end": 11540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11461,
											"end": 11540,
											"name": "tag",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 11461,
											"end": 11540,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11425,
											"end": 11542,
											"name": "tag",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 11425,
											"end": 11542,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11566,
											"end": 11628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 11620,
											"end": 11627,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11611,
											"end": 11617,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11600,
											"end": 11609,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11596,
											"end": 11618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11566,
											"end": 11628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 11566,
											"end": 11628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11566,
											"end": 11628,
											"name": "tag",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 11566,
											"end": 11628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11556,
											"end": 11628,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11556,
											"end": 11628,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11351,
											"end": 11638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10702,
											"end": 11645,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10702,
											"end": 11645,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 10702,
											"end": 11645,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10702,
											"end": 11645,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10702,
											"end": 11645,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10702,
											"end": 11645,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10702,
											"end": 11645,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10702,
											"end": 11645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11651,
											"end": 12125,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 11651,
											"end": 12125,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11719,
											"end": 11725,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11727,
											"end": 11733,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11776,
											"end": 11778,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11764,
											"end": 11773,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11755,
											"end": 11762,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11751,
											"end": 11774,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11747,
											"end": 11779,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11744,
											"end": 11863,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11744,
											"end": 11863,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 11744,
											"end": 11863,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11782,
											"end": 11861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 11782,
											"end": 11861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 11782,
											"end": 11861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11782,
											"end": 11861,
											"name": "tag",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 11782,
											"end": 11861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11744,
											"end": 11863,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 11744,
											"end": 11863,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11902,
											"end": 11903,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11927,
											"end": 11980,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 11972,
											"end": 11979,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11963,
											"end": 11969,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11952,
											"end": 11961,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11948,
											"end": 11970,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11927,
											"end": 11980,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 11927,
											"end": 11980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11927,
											"end": 11980,
											"name": "tag",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 11927,
											"end": 11980,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11917,
											"end": 11980,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11917,
											"end": 11980,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11873,
											"end": 11990,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12029,
											"end": 12031,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12055,
											"end": 12108,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 12100,
											"end": 12107,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12091,
											"end": 12097,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12080,
											"end": 12089,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12076,
											"end": 12098,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12055,
											"end": 12108,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 12055,
											"end": 12108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12055,
											"end": 12108,
											"name": "tag",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 12055,
											"end": 12108,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12045,
											"end": 12108,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12045,
											"end": 12108,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12000,
											"end": 12118,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11651,
											"end": 12125,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11651,
											"end": 12125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11651,
											"end": 12125,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11651,
											"end": 12125,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11651,
											"end": 12125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11651,
											"end": 12125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12131,
											"end": 12311,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 12131,
											"end": 12311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12179,
											"end": 12256,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12176,
											"end": 12177,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12169,
											"end": 12257,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12276,
											"end": 12280,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 12273,
											"end": 12274,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12266,
											"end": 12281,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12300,
											"end": 12304,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12297,
											"end": 12298,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12290,
											"end": 12305,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12317,
											"end": 12637,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 12317,
											"end": 12637,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12361,
											"end": 12367,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12398,
											"end": 12399,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 12392,
											"end": 12396,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12388,
											"end": 12400,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12378,
											"end": 12400,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12378,
											"end": 12400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12445,
											"end": 12446,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12439,
											"end": 12443,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12435,
											"end": 12447,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12466,
											"end": 12484,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12456,
											"end": 12537,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 12456,
											"end": 12537,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12522,
											"end": 12526,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 12514,
											"end": 12520,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12510,
											"end": 12527,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12500,
											"end": 12527,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12500,
											"end": 12527,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12456,
											"end": 12537,
											"name": "tag",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 12456,
											"end": 12537,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12584,
											"end": 12586,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12576,
											"end": 12582,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12573,
											"end": 12587,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12553,
											"end": 12571,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12550,
											"end": 12588,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12547,
											"end": 12631,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 12547,
											"end": 12631,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12603,
											"end": 12621,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 12603,
											"end": 12621,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 12603,
											"end": 12621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12603,
											"end": 12621,
											"name": "tag",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 12603,
											"end": 12621,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12547,
											"end": 12631,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 12547,
											"end": 12631,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12368,
											"end": 12637,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12317,
											"end": 12637,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12317,
											"end": 12637,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12317,
											"end": 12637,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12317,
											"end": 12637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12643,
											"end": 13085,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 12643,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12792,
											"end": 12796,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12830,
											"end": 12832,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 12819,
											"end": 12828,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12815,
											"end": 12833,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12807,
											"end": 12833,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12807,
											"end": 12833,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12843,
											"end": 12914,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 12911,
											"end": 12912,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12900,
											"end": 12909,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12896,
											"end": 12913,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12887,
											"end": 12893,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12843,
											"end": 12914,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 12843,
											"end": 12914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12843,
											"end": 12914,
											"name": "tag",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 12843,
											"end": 12914,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12924,
											"end": 12996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 12992,
											"end": 12994,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12981,
											"end": 12990,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12977,
											"end": 12995,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12968,
											"end": 12974,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12924,
											"end": 12996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 12924,
											"end": 12996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12924,
											"end": 12996,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 12924,
											"end": 12996,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13006,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 13074,
											"end": 13076,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13063,
											"end": 13072,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13059,
											"end": 13077,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13050,
											"end": 13056,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13006,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 13006,
											"end": 13078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13006,
											"end": 13078,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 13006,
											"end": 13078,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12643,
											"end": 13085,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 12643,
											"end": 13085,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12643,
											"end": 13085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12643,
											"end": 13085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12643,
											"end": 13085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12643,
											"end": 13085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12643,
											"end": 13085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13091,
											"end": 13271,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 13091,
											"end": 13271,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13139,
											"end": 13216,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13136,
											"end": 13137,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13129,
											"end": 13217,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13236,
											"end": 13240,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 13233,
											"end": 13234,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 13226,
											"end": 13241,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13260,
											"end": 13264,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13257,
											"end": 13258,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13250,
											"end": 13265,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13277,
											"end": 13510,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 13277,
											"end": 13510,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13316,
											"end": 13319,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13339,
											"end": 13363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 13357,
											"end": 13362,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13339,
											"end": 13363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 13339,
											"end": 13363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13339,
											"end": 13363,
											"name": "tag",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 13339,
											"end": 13363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13330,
											"end": 13363,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13330,
											"end": 13363,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13385,
											"end": 13451,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13378,
											"end": 13383,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13375,
											"end": 13452,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13372,
											"end": 13475,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 13372,
											"end": 13475,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13455,
											"end": 13473,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 13455,
											"end": 13473,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 13455,
											"end": 13473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13455,
											"end": 13473,
											"name": "tag",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 13455,
											"end": 13473,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13372,
											"end": 13475,
											"name": "tag",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 13372,
											"end": 13475,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13502,
											"end": 13503,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13495,
											"end": 13500,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13491,
											"end": 13504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13484,
											"end": 13504,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13484,
											"end": 13504,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13277,
											"end": 13510,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13277,
											"end": 13510,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13277,
											"end": 13510,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13277,
											"end": 13510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13516,
											"end": 13657,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 13516,
											"end": 13657,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13565,
											"end": 13569,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13588,
											"end": 13591,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13580,
											"end": 13591,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13580,
											"end": 13591,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13611,
											"end": 13614,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13608,
											"end": 13609,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13601,
											"end": 13615,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13645,
											"end": 13649,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13642,
											"end": 13643,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13632,
											"end": 13650,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 13624,
											"end": 13650,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13624,
											"end": 13650,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13516,
											"end": 13657,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13516,
											"end": 13657,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13516,
											"end": 13657,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13516,
											"end": 13657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13663,
											"end": 13756,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 13663,
											"end": 13756,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13700,
											"end": 13706,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13747,
											"end": 13749,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13742,
											"end": 13744,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 13735,
											"end": 13740,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13731,
											"end": 13745,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13727,
											"end": 13750,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 13717,
											"end": 13750,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13717,
											"end": 13750,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13663,
											"end": 13756,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13663,
											"end": 13756,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13663,
											"end": 13756,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13663,
											"end": 13756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13762,
											"end": 13869,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 13762,
											"end": 13869,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13806,
											"end": 13814,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13856,
											"end": 13861,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13850,
											"end": 13854,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13846,
											"end": 13862,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 13825,
											"end": 13862,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13825,
											"end": 13862,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13762,
											"end": 13869,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13762,
											"end": 13869,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13762,
											"end": 13869,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13762,
											"end": 13869,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13762,
											"end": 13869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13875,
											"end": 14268,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 13875,
											"end": 14268,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13944,
											"end": 13950,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13994,
											"end": 13995,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 13982,
											"end": 13992,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13978,
											"end": 13996,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 14017,
											"end": 14114,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 14047,
											"end": 14113,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14036,
											"end": 14045,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14017,
											"end": 14114,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 14017,
											"end": 14114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14017,
											"end": 14114,
											"name": "tag",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 14017,
											"end": 14114,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14135,
											"end": 14174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 14165,
											"end": 14173,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14154,
											"end": 14163,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14135,
											"end": 14174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 14135,
											"end": 14174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14135,
											"end": 14174,
											"name": "tag",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 14135,
											"end": 14174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14123,
											"end": 14174,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 14123,
											"end": 14174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14207,
											"end": 14211,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14203,
											"end": 14212,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 14196,
											"end": 14201,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14192,
											"end": 14213,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14183,
											"end": 14213,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14183,
											"end": 14213,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14256,
											"end": 14260,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14246,
											"end": 14254,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14242,
											"end": 14261,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14235,
											"end": 14240,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14232,
											"end": 14262,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 14222,
											"end": 14262,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14222,
											"end": 14262,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13951,
											"end": 14268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13951,
											"end": 14268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13875,
											"end": 14268,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 13875,
											"end": 14268,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13875,
											"end": 14268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13875,
											"end": 14268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13875,
											"end": 14268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13875,
											"end": 14268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14274,
											"end": 14334,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 14274,
											"end": 14334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14302,
											"end": 14305,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14323,
											"end": 14328,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14316,
											"end": 14328,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14316,
											"end": 14328,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14274,
											"end": 14334,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14274,
											"end": 14334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14274,
											"end": 14334,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14274,
											"end": 14334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14340,
											"end": 14482,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 14340,
											"end": 14482,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14390,
											"end": 14399,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14423,
											"end": 14476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 14441,
											"end": 14475,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 14450,
											"end": 14474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 14468,
											"end": 14473,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14450,
											"end": 14474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 14450,
											"end": 14474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14450,
											"end": 14474,
											"name": "tag",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 14450,
											"end": 14474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14441,
											"end": 14475,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 14441,
											"end": 14475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14441,
											"end": 14475,
											"name": "tag",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 14441,
											"end": 14475,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14423,
											"end": 14476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 14423,
											"end": 14476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14423,
											"end": 14476,
											"name": "tag",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 14423,
											"end": 14476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14410,
											"end": 14476,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14410,
											"end": 14476,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14340,
											"end": 14482,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14340,
											"end": 14482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14340,
											"end": 14482,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14340,
											"end": 14482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14488,
											"end": 14563,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 14488,
											"end": 14563,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14531,
											"end": 14534,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14552,
											"end": 14557,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14545,
											"end": 14557,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14545,
											"end": 14557,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14488,
											"end": 14563,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14488,
											"end": 14563,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14488,
											"end": 14563,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14488,
											"end": 14563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14569,
											"end": 14838,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 14569,
											"end": 14838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14679,
											"end": 14718,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 14710,
											"end": 14717,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14679,
											"end": 14718,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 14679,
											"end": 14718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14679,
											"end": 14718,
											"name": "tag",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 14679,
											"end": 14718,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14740,
											"end": 14831,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 14789,
											"end": 14830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 14813,
											"end": 14829,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14789,
											"end": 14830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 14789,
											"end": 14830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14789,
											"end": 14830,
											"name": "tag",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 14789,
											"end": 14830,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14781,
											"end": 14787,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14774,
											"end": 14778,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14768,
											"end": 14779,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 14740,
											"end": 14831,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 14740,
											"end": 14831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14740,
											"end": 14831,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 14740,
											"end": 14831,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14734,
											"end": 14738,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14727,
											"end": 14832,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 14645,
											"end": 14838,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14569,
											"end": 14838,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14569,
											"end": 14838,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14569,
											"end": 14838,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14569,
											"end": 14838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14844,
											"end": 14917,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 14844,
											"end": 14917,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14889,
											"end": 14892,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14844,
											"end": 14917,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14844,
											"end": 14917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14923,
											"end": 15112,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 14923,
											"end": 15112,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15000,
											"end": 15032,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 15000,
											"end": 15032,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 15000,
											"end": 15032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15000,
											"end": 15032,
											"name": "tag",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 15000,
											"end": 15032,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15041,
											"end": 15106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 15099,
											"end": 15105,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15091,
											"end": 15097,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15085,
											"end": 15089,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15041,
											"end": 15106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 15041,
											"end": 15106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15041,
											"end": 15106,
											"name": "tag",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 15041,
											"end": 15106,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14976,
											"end": 15112,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14923,
											"end": 15112,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14923,
											"end": 15112,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14923,
											"end": 15112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15118,
											"end": 15304,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 15118,
											"end": 15304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15178,
											"end": 15298,
											"name": "tag",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 15178,
											"end": 15298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15195,
											"end": 15198,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15188,
											"end": 15193,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15185,
											"end": 15199,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 15178,
											"end": 15298,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15178,
											"end": 15298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 15178,
											"end": 15298,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15249,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 15286,
											"end": 15287,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15279,
											"end": 15284,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15249,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 15249,
											"end": 15288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15249,
											"end": 15288,
											"name": "tag",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 15249,
											"end": 15288,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15222,
											"end": 15223,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 15215,
											"end": 15220,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15211,
											"end": 15224,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15202,
											"end": 15224,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15202,
											"end": 15224,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15178,
											"end": 15298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 15178,
											"end": 15298,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15178,
											"end": 15298,
											"name": "tag",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 15178,
											"end": 15298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15118,
											"end": 15304,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15118,
											"end": 15304,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15118,
											"end": 15304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15310,
											"end": 15853,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 15310,
											"end": 15853,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15411,
											"end": 15413,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 15406,
											"end": 15409,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15403,
											"end": 15414,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 15400,
											"end": 15846,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15400,
											"end": 15846,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 15400,
											"end": 15846,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15445,
											"end": 15483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 15477,
											"end": 15482,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15445,
											"end": 15483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 15445,
											"end": 15483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15445,
											"end": 15483,
											"name": "tag",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 15445,
											"end": 15483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15529,
											"end": 15558,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 15547,
											"end": 15557,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15529,
											"end": 15558,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 15529,
											"end": 15558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15529,
											"end": 15558,
											"name": "tag",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 15529,
											"end": 15558,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15519,
											"end": 15527,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15515,
											"end": 15559,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15712,
											"end": 15714,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15700,
											"end": 15710,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15697,
											"end": 15715,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 15694,
											"end": 15743,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15694,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 15694,
											"end": 15743,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15733,
											"end": 15741,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15718,
											"end": 15741,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15718,
											"end": 15741,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15694,
											"end": 15743,
											"name": "tag",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 15694,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15756,
											"end": 15836,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 15812,
											"end": 15834,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 15830,
											"end": 15833,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15812,
											"end": 15834,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 15812,
											"end": 15834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15812,
											"end": 15834,
											"name": "tag",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 15812,
											"end": 15834,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15802,
											"end": 15810,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15798,
											"end": 15835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15785,
											"end": 15796,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15756,
											"end": 15836,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 15756,
											"end": 15836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15756,
											"end": 15836,
											"name": "tag",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 15756,
											"end": 15836,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15415,
											"end": 15846,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15415,
											"end": 15846,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15400,
											"end": 15846,
											"name": "tag",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 15400,
											"end": 15846,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15310,
											"end": 15853,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15310,
											"end": 15853,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15310,
											"end": 15853,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15310,
											"end": 15853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15859,
											"end": 15976,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 15859,
											"end": 15976,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15913,
											"end": 15921,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15963,
											"end": 15968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15957,
											"end": 15961,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15953,
											"end": 15969,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 15932,
											"end": 15969,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15932,
											"end": 15969,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15859,
											"end": 15976,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15859,
											"end": 15976,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15859,
											"end": 15976,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15859,
											"end": 15976,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15859,
											"end": 15976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15982,
											"end": 16151,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 15982,
											"end": 16151,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16026,
											"end": 16032,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16059,
											"end": 16110,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 16107,
											"end": 16108,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16103,
											"end": 16109,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 16095,
											"end": 16100,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16092,
											"end": 16093,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 16088,
											"end": 16101,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 16059,
											"end": 16110,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 16059,
											"end": 16110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16059,
											"end": 16110,
											"name": "tag",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 16059,
											"end": 16110,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16055,
											"end": 16111,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 16140,
											"end": 16144,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16134,
											"end": 16138,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16130,
											"end": 16145,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16120,
											"end": 16145,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16120,
											"end": 16145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16033,
											"end": 16151,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15982,
											"end": 16151,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15982,
											"end": 16151,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15982,
											"end": 16151,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15982,
											"end": 16151,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15982,
											"end": 16151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16156,
											"end": 16451,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 16156,
											"end": 16451,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16232,
											"end": 16236,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16378,
											"end": 16407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 16403,
											"end": 16406,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16397,
											"end": 16401,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16378,
											"end": 16407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 16378,
											"end": 16407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16378,
											"end": 16407,
											"name": "tag",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 16378,
											"end": 16407,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16370,
											"end": 16407,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16370,
											"end": 16407,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16440,
											"end": 16443,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16437,
											"end": 16438,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 16433,
											"end": 16444,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 16427,
											"end": 16431,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16424,
											"end": 16445,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 16416,
											"end": 16445,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16416,
											"end": 16445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16156,
											"end": 16451,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16156,
											"end": 16451,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16156,
											"end": 16451,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16156,
											"end": 16451,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16156,
											"end": 16451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16456,
											"end": 17851,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 16456,
											"end": 17851,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16573,
											"end": 16610,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 16606,
											"end": 16609,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16573,
											"end": 16610,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 16573,
											"end": 16610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16573,
											"end": 16610,
											"name": "tag",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 16573,
											"end": 16610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16675,
											"end": 16693,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16667,
											"end": 16673,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16664,
											"end": 16694,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 16661,
											"end": 16717,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16661,
											"end": 16717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 16661,
											"end": 16717,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16697,
											"end": 16715,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 16697,
											"end": 16715,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 16697,
											"end": 16715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16697,
											"end": 16715,
											"name": "tag",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 16697,
											"end": 16715,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16661,
											"end": 16717,
											"name": "tag",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 16661,
											"end": 16717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16741,
											"end": 16779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 16773,
											"end": 16777,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16767,
											"end": 16778,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 16741,
											"end": 16779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 16741,
											"end": 16779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16741,
											"end": 16779,
											"name": "tag",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 16741,
											"end": 16779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16826,
											"end": 16893,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 16886,
											"end": 16892,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16878,
											"end": 16884,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16872,
											"end": 16876,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16826,
											"end": 16893,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 16826,
											"end": 16893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16826,
											"end": 16893,
											"name": "tag",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 16826,
											"end": 16893,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16920,
											"end": 16921,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16944,
											"end": 16948,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16931,
											"end": 16948,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16931,
											"end": 16948,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16976,
											"end": 16978,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 16968,
											"end": 16974,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16965,
											"end": 16979,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 16993,
											"end": 16994,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 16988,
											"end": 17606,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16988,
											"end": 17606,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 16988,
											"end": 17606,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "622"
										},
										{
											"begin": 16988,
											"end": 17606,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17650,
											"end": 17651,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17667,
											"end": 17673,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17664,
											"end": 17741,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17664,
											"end": 17741,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "623"
										},
										{
											"begin": 17664,
											"end": 17741,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17716,
											"end": 17725,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17711,
											"end": 17714,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 17707,
											"end": 17726,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17701,
											"end": 17727,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 17692,
											"end": 17727,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17692,
											"end": 17727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17664,
											"end": 17741,
											"name": "tag",
											"source": 13,
											"value": "623"
										},
										{
											"begin": 17664,
											"end": 17741,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17767,
											"end": 17834,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 17827,
											"end": 17833,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17820,
											"end": 17825,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17767,
											"end": 17834,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 17767,
											"end": 17834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17767,
											"end": 17834,
											"name": "tag",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 17767,
											"end": 17834,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17761,
											"end": 17765,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17754,
											"end": 17835,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 17623,
											"end": 17845,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16958,
											"end": 17845,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 16958,
											"end": 17845,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16988,
											"end": 17606,
											"name": "tag",
											"source": 13,
											"value": "622"
										},
										{
											"begin": 16988,
											"end": 17606,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17040,
											"end": 17044,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 17036,
											"end": 17045,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 17028,
											"end": 17034,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17024,
											"end": 17046,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 17074,
											"end": 17111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 17106,
											"end": 17110,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17074,
											"end": 17111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 17074,
											"end": 17111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17074,
											"end": 17111,
											"name": "tag",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 17074,
											"end": 17111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17133,
											"end": 17134,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17147,
											"end": 17355,
											"name": "tag",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 17147,
											"end": 17355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17168,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17158,
											"end": 17159,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17155,
											"end": 17169,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 17147,
											"end": 17355,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17147,
											"end": 17355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 17147,
											"end": 17355,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17240,
											"end": 17249,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17235,
											"end": 17238,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 17231,
											"end": 17250,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17225,
											"end": 17251,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 17217,
											"end": 17223,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17210,
											"end": 17252,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 17291,
											"end": 17292,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 17283,
											"end": 17289,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17279,
											"end": 17293,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17269,
											"end": 17293,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17269,
											"end": 17293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17338,
											"end": 17340,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17327,
											"end": 17336,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17310,
											"end": 17341,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 17310,
											"end": 17341,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17184,
											"end": 17188,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17181,
											"end": 17182,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17177,
											"end": 17189,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17172,
											"end": 17189,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17172,
											"end": 17189,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17147,
											"end": 17355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 17147,
											"end": 17355,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17147,
											"end": 17355,
											"name": "tag",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 17147,
											"end": 17355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17383,
											"end": 17389,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17374,
											"end": 17381,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17371,
											"end": 17390,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 17368,
											"end": 17547,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17368,
											"end": 17547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 17368,
											"end": 17547,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17441,
											"end": 17450,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17436,
											"end": 17439,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 17432,
											"end": 17451,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17426,
											"end": 17452,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 17484,
											"end": 17532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "630"
										},
										{
											"begin": 17526,
											"end": 17530,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 17518,
											"end": 17524,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 17514,
											"end": 17531,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 17503,
											"end": 17512,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17484,
											"end": 17532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 17484,
											"end": 17532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17484,
											"end": 17532,
											"name": "tag",
											"source": 13,
											"value": "630"
										},
										{
											"begin": 17484,
											"end": 17532,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17476,
											"end": 17482,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17469,
											"end": 17533,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 17391,
											"end": 17547,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17368,
											"end": 17547,
											"name": "tag",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 17368,
											"end": 17547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17593,
											"end": 17594,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 17589,
											"end": 17590,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 17581,
											"end": 17587,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 17577,
											"end": 17591,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17567,
											"end": 17571,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 17560,
											"end": 17596,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 16995,
											"end": 17606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16995,
											"end": 17606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16995,
											"end": 17606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16958,
											"end": 17845,
											"name": "tag",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 16958,
											"end": 17845,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16958,
											"end": 17845,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16548,
											"end": 17851,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16548,
											"end": 17851,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16548,
											"end": 17851,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16456,
											"end": 17851,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16456,
											"end": 17851,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16456,
											"end": 17851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17857,
											"end": 18027,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 17857,
											"end": 18027,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17997,
											"end": 18019,
											"name": "PUSH",
											"source": 13,
											"value": "546F6B656E20646F6573206E6F74206578697374000000000000000000000000"
										},
										{
											"begin": 17993,
											"end": 17994,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17985,
											"end": 17991,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17981,
											"end": 17995,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17974,
											"end": 18020,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17857,
											"end": 18027,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17857,
											"end": 18027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18033,
											"end": 18399,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 18033,
											"end": 18399,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18175,
											"end": 18178,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18196,
											"end": 18263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 18260,
											"end": 18262,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 18255,
											"end": 18258,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18196,
											"end": 18263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 18196,
											"end": 18263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18196,
											"end": 18263,
											"name": "tag",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 18196,
											"end": 18263,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18189,
											"end": 18263,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18189,
											"end": 18263,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18272,
											"end": 18365,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 18361,
											"end": 18364,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18272,
											"end": 18365,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 18272,
											"end": 18365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18272,
											"end": 18365,
											"name": "tag",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 18272,
											"end": 18365,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18390,
											"end": 18392,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18385,
											"end": 18388,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18381,
											"end": 18393,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18374,
											"end": 18393,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18374,
											"end": 18393,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18033,
											"end": 18399,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18033,
											"end": 18399,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18033,
											"end": 18399,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18033,
											"end": 18399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18405,
											"end": 18824,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 18405,
											"end": 18824,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18571,
											"end": 18575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18609,
											"end": 18611,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18598,
											"end": 18607,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18594,
											"end": 18612,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18586,
											"end": 18612,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18586,
											"end": 18612,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18658,
											"end": 18667,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18652,
											"end": 18656,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18648,
											"end": 18668,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18644,
											"end": 18645,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18633,
											"end": 18642,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18629,
											"end": 18646,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18622,
											"end": 18669,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18686,
											"end": 18817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "636"
										},
										{
											"begin": 18812,
											"end": 18816,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18686,
											"end": 18817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 18686,
											"end": 18817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18686,
											"end": 18817,
											"name": "tag",
											"source": 13,
											"value": "636"
										},
										{
											"begin": 18686,
											"end": 18817,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18678,
											"end": 18817,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18678,
											"end": 18817,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18405,
											"end": 18824,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18405,
											"end": 18824,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18405,
											"end": 18824,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18405,
											"end": 18824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18830,
											"end": 18978,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 18830,
											"end": 18978,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18932,
											"end": 18943,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18969,
											"end": 18972,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18954,
											"end": 18972,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18954,
											"end": 18972,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18830,
											"end": 18978,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18830,
											"end": 18978,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18830,
											"end": 18978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18830,
											"end": 18978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18830,
											"end": 18978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18984,
											"end": 19374,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 18984,
											"end": 19374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19090,
											"end": 19093,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19118,
											"end": 19157,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 19151,
											"end": 19156,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19118,
											"end": 19157,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 19118,
											"end": 19157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19118,
											"end": 19157,
											"name": "tag",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 19118,
											"end": 19157,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19173,
											"end": 19262,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 19255,
											"end": 19261,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19250,
											"end": 19253,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19173,
											"end": 19262,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 19173,
											"end": 19262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19173,
											"end": 19262,
											"name": "tag",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 19173,
											"end": 19262,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19166,
											"end": 19262,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 19166,
											"end": 19262,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19271,
											"end": 19336,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "641"
										},
										{
											"begin": 19329,
											"end": 19335,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19324,
											"end": 19327,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19317,
											"end": 19321,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19310,
											"end": 19315,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 19306,
											"end": 19322,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19271,
											"end": 19336,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 19271,
											"end": 19336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19271,
											"end": 19336,
											"name": "tag",
											"source": 13,
											"value": "641"
										},
										{
											"begin": 19271,
											"end": 19336,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19361,
											"end": 19367,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 19356,
											"end": 19359,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19352,
											"end": 19368,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19345,
											"end": 19368,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19345,
											"end": 19368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19094,
											"end": 19374,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18984,
											"end": 19374,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18984,
											"end": 19374,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18984,
											"end": 19374,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18984,
											"end": 19374,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18984,
											"end": 19374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19380,
											"end": 19815,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 19380,
											"end": 19815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19560,
											"end": 19563,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19582,
											"end": 19677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 19673,
											"end": 19676,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19664,
											"end": 19670,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19582,
											"end": 19677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 19582,
											"end": 19677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19582,
											"end": 19677,
											"name": "tag",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 19582,
											"end": 19677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19575,
											"end": 19677,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19575,
											"end": 19677,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19694,
											"end": 19789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "644"
										},
										{
											"begin": 19785,
											"end": 19788,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19776,
											"end": 19782,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19694,
											"end": 19789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 19694,
											"end": 19789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19694,
											"end": 19789,
											"name": "tag",
											"source": 13,
											"value": "644"
										},
										{
											"begin": 19694,
											"end": 19789,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19687,
											"end": 19789,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19687,
											"end": 19789,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19806,
											"end": 19809,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19799,
											"end": 19809,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19799,
											"end": 19809,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19380,
											"end": 19815,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 19380,
											"end": 19815,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19380,
											"end": 19815,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19380,
											"end": 19815,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19380,
											"end": 19815,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19380,
											"end": 19815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19821,
											"end": 19919,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 19821,
											"end": 19919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19872,
											"end": 19878,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19906,
											"end": 19911,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19900,
											"end": 19912,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 19890,
											"end": 19912,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19890,
											"end": 19912,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19821,
											"end": 19919,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19821,
											"end": 19919,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19821,
											"end": 19919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19821,
											"end": 19919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19925,
											"end": 20093,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 19925,
											"end": 20093,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20008,
											"end": 20019,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20042,
											"end": 20048,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20037,
											"end": 20040,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20030,
											"end": 20049,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20082,
											"end": 20086,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20077,
											"end": 20080,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20073,
											"end": 20087,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20058,
											"end": 20087,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20058,
											"end": 20087,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19925,
											"end": 20093,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19925,
											"end": 20093,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19925,
											"end": 20093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19925,
											"end": 20093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19925,
											"end": 20093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20099,
											"end": 20472,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 20099,
											"end": 20472,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20185,
											"end": 20188,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20213,
											"end": 20251,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 20245,
											"end": 20250,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20213,
											"end": 20251,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 20213,
											"end": 20251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20213,
											"end": 20251,
											"name": "tag",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 20213,
											"end": 20251,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20267,
											"end": 20337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 20330,
											"end": 20336,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20325,
											"end": 20328,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20267,
											"end": 20337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 20267,
											"end": 20337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20267,
											"end": 20337,
											"name": "tag",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 20267,
											"end": 20337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20260,
											"end": 20337,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 20260,
											"end": 20337,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20346,
											"end": 20411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "650"
										},
										{
											"begin": 20404,
											"end": 20410,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20399,
											"end": 20402,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20392,
											"end": 20396,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20385,
											"end": 20390,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 20381,
											"end": 20397,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20346,
											"end": 20411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 20346,
											"end": 20411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20346,
											"end": 20411,
											"name": "tag",
											"source": 13,
											"value": "650"
										},
										{
											"begin": 20346,
											"end": 20411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20436,
											"end": 20465,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 20458,
											"end": 20464,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20436,
											"end": 20465,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 20436,
											"end": 20465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20436,
											"end": 20465,
											"name": "tag",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 20436,
											"end": 20465,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20431,
											"end": 20434,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20427,
											"end": 20466,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20420,
											"end": 20466,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20420,
											"end": 20466,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20189,
											"end": 20472,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20099,
											"end": 20472,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20099,
											"end": 20472,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20099,
											"end": 20472,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20099,
											"end": 20472,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20099,
											"end": 20472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20478,
											"end": 21118,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 20478,
											"end": 21118,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20673,
											"end": 20677,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20711,
											"end": 20714,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 20700,
											"end": 20709,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20696,
											"end": 20715,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20688,
											"end": 20715,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20688,
											"end": 20715,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20725,
											"end": 20796,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 20793,
											"end": 20794,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20782,
											"end": 20791,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20778,
											"end": 20795,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20769,
											"end": 20775,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 20725,
											"end": 20796,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 20725,
											"end": 20796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20725,
											"end": 20796,
											"name": "tag",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 20725,
											"end": 20796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20806,
											"end": 20878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "654"
										},
										{
											"begin": 20874,
											"end": 20876,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20863,
											"end": 20872,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20859,
											"end": 20877,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20850,
											"end": 20856,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 20806,
											"end": 20878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 20806,
											"end": 20878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20806,
											"end": 20878,
											"name": "tag",
											"source": 13,
											"value": "654"
										},
										{
											"begin": 20806,
											"end": 20878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20888,
											"end": 20960,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 20956,
											"end": 20958,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 20945,
											"end": 20954,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20941,
											"end": 20959,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20932,
											"end": 20938,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20888,
											"end": 20960,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 20888,
											"end": 20960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20888,
											"end": 20960,
											"name": "tag",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 20888,
											"end": 20960,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21007,
											"end": 21016,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21001,
											"end": 21005,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20997,
											"end": 21017,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20992,
											"end": 20994,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 20981,
											"end": 20990,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20977,
											"end": 20995,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20970,
											"end": 21018,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21035,
											"end": 21111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "656"
										},
										{
											"begin": 21106,
											"end": 21110,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21097,
											"end": 21103,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21035,
											"end": 21111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 21035,
											"end": 21111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21035,
											"end": 21111,
											"name": "tag",
											"source": 13,
											"value": "656"
										},
										{
											"begin": 21035,
											"end": 21111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21027,
											"end": 21111,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21027,
											"end": 21111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20478,
											"end": 21118,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 20478,
											"end": 21118,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 20478,
											"end": 21118,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20478,
											"end": 21118,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20478,
											"end": 21118,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20478,
											"end": 21118,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20478,
											"end": 21118,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20478,
											"end": 21118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21124,
											"end": 21265,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 21124,
											"end": 21265,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21180,
											"end": 21185,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21211,
											"end": 21217,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21205,
											"end": 21218,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 21196,
											"end": 21218,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21196,
											"end": 21218,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21227,
											"end": 21259,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 21253,
											"end": 21258,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21227,
											"end": 21259,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 21227,
											"end": 21259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21227,
											"end": 21259,
											"name": "tag",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 21227,
											"end": 21259,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21124,
											"end": 21265,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21124,
											"end": 21265,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21124,
											"end": 21265,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21124,
											"end": 21265,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21124,
											"end": 21265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21271,
											"end": 21620,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 21271,
											"end": 21620,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21340,
											"end": 21346,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21389,
											"end": 21391,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21377,
											"end": 21386,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21368,
											"end": 21375,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21364,
											"end": 21387,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21360,
											"end": 21392,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 21357,
											"end": 21476,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 21357,
											"end": 21476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "660"
										},
										{
											"begin": 21357,
											"end": 21476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 21395,
											"end": 21474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 21395,
											"end": 21474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 21395,
											"end": 21474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21395,
											"end": 21474,
											"name": "tag",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 21395,
											"end": 21474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21357,
											"end": 21476,
											"name": "tag",
											"source": 13,
											"value": "660"
										},
										{
											"begin": 21357,
											"end": 21476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21515,
											"end": 21516,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21540,
											"end": 21603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 21595,
											"end": 21602,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21586,
											"end": 21592,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21575,
											"end": 21584,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21571,
											"end": 21593,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21540,
											"end": 21603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 21540,
											"end": 21603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21540,
											"end": 21603,
											"name": "tag",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 21540,
											"end": 21603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21530,
											"end": 21603,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21530,
											"end": 21603,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21486,
											"end": 21613,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21271,
											"end": 21620,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21271,
											"end": 21620,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21271,
											"end": 21620,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21271,
											"end": 21620,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21271,
											"end": 21620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21626,
											"end": 21806,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 21626,
											"end": 21806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21674,
											"end": 21751,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21671,
											"end": 21672,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21664,
											"end": 21752,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21771,
											"end": 21775,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 21768,
											"end": 21769,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 21761,
											"end": 21776,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21795,
											"end": 21799,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 21792,
											"end": 21793,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21785,
											"end": 21800,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 21812,
											"end": 22144,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 21812,
											"end": 22144,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21933,
											"end": 21937,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21971,
											"end": 21973,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 21960,
											"end": 21969,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21956,
											"end": 21974,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21948,
											"end": 21974,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21948,
											"end": 21974,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21984,
											"end": 22055,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "665"
										},
										{
											"begin": 22052,
											"end": 22053,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22041,
											"end": 22050,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22037,
											"end": 22054,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22028,
											"end": 22034,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21984,
											"end": 22055,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 21984,
											"end": 22055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21984,
											"end": 22055,
											"name": "tag",
											"source": 13,
											"value": "665"
										},
										{
											"begin": 21984,
											"end": 22055,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22065,
											"end": 22137,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "666"
										},
										{
											"begin": 22133,
											"end": 22135,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22122,
											"end": 22131,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22118,
											"end": 22136,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22109,
											"end": 22115,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22065,
											"end": 22137,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 22065,
											"end": 22137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22065,
											"end": 22137,
											"name": "tag",
											"source": 13,
											"value": "666"
										},
										{
											"begin": 22065,
											"end": 22137,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21812,
											"end": 22144,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 21812,
											"end": 22144,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21812,
											"end": 22144,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21812,
											"end": 22144,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21812,
											"end": 22144,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21812,
											"end": 22144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/tokenize.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnToken(uint256)": "7b47ec1a",
							"connectWallet(address)": "d7d0df2a",
							"connectedWallet()": "1fd8293f",
							"getApproved(uint256)": "081812fc",
							"getDocumentHash(uint256)": "8796ec86",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintToken(address,string)": "3d02d0c9",
							"name()": "06fdde03",
							"nextTokenId()": "75794a3c",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenDocumentHashes(uint256)": "80964805",
							"tokenExists(uint256)": "00923f9e",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_walletAddress\",\"type\":\"address\"}],\"name\":\"connectWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"connectedWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getDocumentHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"documentHash\",\"type\":\"string\"}],\"name\":\"mintToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenDocumentHashes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokenize.sol\":\"TitleDeedTokenization\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe889e9f6b8469155c967f403ad7508eaa66af8cad1cb9a003536a8e4f281d348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e32c81c8d84199eda0de40d33bb77c7acbb482e3f545d5cfba8195af0a88e0\",\"dweb:/ipfs/Qmaf1WAinzjYWGNxRzCTmn2QABFWS912HwC8eiD7cyTgis\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xdde6917a300a3e655ca443b76266ce89145a7c9eb6a70298bf8aab4965bc40fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39416f61b555df983b22c85803cbe7606fb7f2004b4dbbd51995c7dc552a7137\",\"dweb:/ipfs/QmUG2ghvGz4iDLrvaUfEjcjn8qbvfcoi5AFpGW9t4cupGc\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]},\"contracts/tokenize.sol\":{\"keccak256\":\"0x4fcbc83b9c75ea32e03859f9c6d68f0818b7013ad59efcf3205dfaaaf9cfdf63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0994b28c8721566ed682da39f248d467b23d88f490d24ce30ed66d31da64d49\",\"dweb:/ipfs/QmNb7sYzAUuWXQtfG4oxyaNQfKV85rKKLbQHUsLWoNXzHY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 317,
								"contract": "contracts/tokenize.sol:TitleDeedTokenization",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/tokenize.sol:TitleDeedTokenization",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "contracts/tokenize.sol:TitleDeedTokenization",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 327,
								"contract": "contracts/tokenize.sol:TitleDeedTokenization",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 331,
								"contract": "contracts/tokenize.sol:TitleDeedTokenization",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 337,
								"contract": "contracts/tokenize.sol:TitleDeedTokenization",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 8,
								"contract": "contracts/tokenize.sol:TitleDeedTokenization",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 2946,
								"contract": "contracts/tokenize.sol:TitleDeedTokenization",
								"label": "nextTokenId",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 2950,
								"contract": "contracts/tokenize.sol:TitleDeedTokenization",
								"label": "tokenDocumentHashes",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 2952,
								"contract": "contracts/tokenize.sol:TitleDeedTokenization",
								"label": "connectedWallet",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1486
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1487,
							"src": "133:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1486,
										"src": "141:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"711:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "711:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "711:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "182:498:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1486
							],
							"name": "Ownable",
							"nameLocation": "700:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "742:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "726:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "726:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "757:87:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "856:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "891:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "883:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:17:0"
									},
									"src": "850:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "908:84:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1004:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1032:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1024:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1023:15:0"
									},
									"src": "998:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1053:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1090:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1074:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1121:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1105:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:57:0"
									},
									"src": "1047:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1296:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1311:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1335:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1327:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1327:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1327:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1311:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1307:97:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1339:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1389:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1381:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1381:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1381:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1361:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1361:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1354:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1433:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1414:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1414:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1139:117:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1282:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1274:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1296:0:0"
									},
									"scope": 147,
									"src": "1262:192:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1568:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1579:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1579:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1579:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1603:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1462:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1556:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1565:2:0"
									},
									"src": "1547:65:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1748:32:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1766:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1759:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1620:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1702:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1707:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1739:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1738:9:0"
									},
									"scope": 147,
									"src": "1693:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1903:121:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1918:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1918:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "1929:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1929:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1918:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1914:103:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1943:74:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "1992:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1992:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1965:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1965:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1958:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1788:64:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1867:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1903:0:0"
									},
									"scope": 147,
									"src": "1858:166:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2422:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2460:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2452:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2452:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2452:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2433:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2433:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2433:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "2032:330:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2412:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2412:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2412:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2377:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2394:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2422:0:0"
									},
									"scope": 147,
									"src": "2368:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2696:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2711:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2731:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2723:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2723:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2723:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2711:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2707:93:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2735:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2785:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2777:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2777:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2777:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2757:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2757:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2750:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2829:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2810:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2810:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2810:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2479:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2686:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2686:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2686:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2635:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2661:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2653:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2696:0:0"
									},
									"scope": 147,
									"src": "2626:220:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "3069:128:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3088:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "3080:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3080:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3099:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3080:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3116:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3125:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3116:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3116:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3170:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3180:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3149:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3149:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3144:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2854:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3015:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3042:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "3034:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3033:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3069:0:0"
									},
									"scope": 147,
									"src": "3006:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "682:2518:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "105:3097:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "142:142:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "296:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "316:314:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "642:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "675:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "667:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "691:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "683:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "708:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "700:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:49:1"
									},
									"src": "636:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "724:155:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "891:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "918:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "910:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:16:1"
									},
									"src": "885:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "934:162:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1108:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1137:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1129:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:18:1"
									},
									"src": "1102:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1155:350:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1517:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1552:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1544:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1569:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1561:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1588:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1580:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:52:1"
									},
									"src": "1511:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1604:177:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1793:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1822:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1814:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:18:1"
									},
									"src": "1787:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1840:198:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2050:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2078:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2070:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2070:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2069:17:1"
									},
									"src": "2044:43:1"
								}
							],
							"scope": 285,
							"src": "286:1804:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2094:144:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2250:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2271:223:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2506:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2533:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2525:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:15:1"
									},
									"src": "2500:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2548:135:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2695:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2726:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2718:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:17:1"
									},
									"src": "2689:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2743:294:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "3049:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3078:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3070:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3094:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3086:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3111:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3103:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3069:48:1"
									},
									"src": "3043:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3126:155:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3293:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3321:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3313:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3313:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:16:1"
									},
									"src": "3287:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3337:162:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3511:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3541:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3533:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:18:1"
									},
									"src": "3505:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3559:251:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3822:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3857:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3849:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3875:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3867:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3867:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:35:1"
									},
									"src": "3816:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3892:177:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "4081:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4111:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4103:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4102:18:1"
									},
									"src": "4075:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4129:200:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4341:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4371:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4363:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4363:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4362:18:1"
									},
									"src": "4335:46:1"
								}
							],
							"scope": 285,
							"src": "2240:2144:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4388:146:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4546:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4568:367:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4947:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4982:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4974:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4974:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4998:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4990:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5015:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "5007:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5007:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "5023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4973:66:1"
									},
									"src": "4941:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "5048:155:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5215:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5244:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5236:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5235:16:1"
									},
									"src": "5209:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5260:162:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5434:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5465:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5457:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5457:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5456:18:1"
									},
									"src": "5428:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5483:260:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5755:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5792:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5784:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5784:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5810:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5802:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5802:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5783:33:1"
									},
									"src": "5749:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5825:177:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "6014:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6045:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "6037:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6037:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6036:18:1"
									},
									"src": "6008:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "6063:200:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6275:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6306:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6298:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6298:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6297:18:1"
									},
									"src": "6269:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6324:285:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6621:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6655:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6647:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6647:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6674:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6666:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6646:41:1"
									},
									"src": "6615:73:1"
								}
							],
							"scope": 285,
							"src": "4536:2155:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "114:6579:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1486
						],
						"ERC165": [
							1765
						],
						"ERC721": [
							1293
						],
						"IERC165": [
							1777
						],
						"IERC721": [
							1410
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1456
						],
						"IERC721Receiver": [
							1428
						],
						"Strings": [
							1741
						]
					},
					"id": 1294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1411,
							"src": "138:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1410,
										"src": "146:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1429,
							"src": "178:54:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1428,
										"src": "186:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1457,
							"src": "234:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1456,
										"src": "242:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1487,
							"src": "301:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1486,
										"src": "309:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 296,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1742,
							"src": "351:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 295,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1741,
										"src": "359:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1766,
							"src": "401:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 297,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1777,
										"src": "409:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 298,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1765,
										"src": "418:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 285,
							"src": "472:66:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 300,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 237,
										"src": "480:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 303,
										"name": "Context",
										"nameLocations": [
											"822:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "822:7:2"
									},
									"id": 304,
									"nodeType": "InheritanceSpecifier",
									"src": "822:7:2"
								},
								{
									"baseName": {
										"id": 305,
										"name": "ERC165",
										"nameLocations": [
											"831:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1765,
										"src": "831:6:2"
									},
									"id": 306,
									"nodeType": "InheritanceSpecifier",
									"src": "831:6:2"
								},
								{
									"baseName": {
										"id": 307,
										"name": "IERC721",
										"nameLocations": [
											"839:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1410,
										"src": "839:7:2"
									},
									"id": 308,
									"nodeType": "InheritanceSpecifier",
									"src": "839:7:2"
								},
								{
									"baseName": {
										"id": 309,
										"name": "IERC721Metadata",
										"nameLocations": [
											"848:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1456,
										"src": "848:15:2"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "848:15:2"
								},
								{
									"baseName": {
										"id": 311,
										"name": "IERC721Errors",
										"nameLocations": [
											"865:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 237,
										"src": "865:13:2"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "865:13:2"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 302,
								"nodeType": "StructuredDocumentation",
								"src": "542:250:2",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1293,
							"linearizedBaseContracts": [
								1293,
								237,
								1456,
								1410,
								1765,
								1777,
								1486
							],
							"name": "ERC721",
							"nameLocation": "812:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 315,
									"libraryName": {
										"id": 313,
										"name": "Strings",
										"nameLocations": [
											"892:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1741,
										"src": "892:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "886:26:2",
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "904:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "954:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "939:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "939:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1004:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "989:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "989:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 323,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1064:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1020:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 322,
										"keyName": "tokenId",
										"keyNameLocation": "1036:7:2",
										"keyType": {
											"id": 320,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1028:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1020:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 321,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1047:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 327,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1122:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1080:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 326,
										"keyName": "owner",
										"keyNameLocation": "1096:5:2",
										"keyType": {
											"id": 324,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1088:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1080:33:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 325,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1105:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 331,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1184:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1140:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 330,
										"keyName": "tokenId",
										"keyNameLocation": "1156:7:2",
										"keyType": {
											"id": 328,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1148:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1140:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 329,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1167:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 337,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1276:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1208:86:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 336,
										"keyName": "owner",
										"keyNameLocation": "1224:5:2",
										"keyType": {
											"id": 332,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1216:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1208:59:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 335,
											"keyName": "operator",
											"keyNameLocation": "1249:8:2",
											"keyType": {
												"id": 333,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1241:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1233:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 334,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1261:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "1475:60:2",
										"statements": [
											{
												"expression": {
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 345,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1486:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 346,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "1494:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1486:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "1486:13:2"
											},
											{
												"expression": {
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 349,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1510:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 350,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "1520:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1510:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "1510:17:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "1303:110:2",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 354,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1445:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1431:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1431:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1466:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1452:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 341,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1452:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1430:44:2"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1475:0:2"
									},
									"scope": 1293,
									"src": "1419:116:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1764,
										1776
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "1715:197:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 365,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1746:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 367,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1410,
																			"src": "1766:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 366,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1761:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1761:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1410",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1775:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1761:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1746:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 371,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1803:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 373,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1456,
																			"src": "1823:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1456_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1456_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 372,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1818:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1818:21:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1456",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1840:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1818:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1803:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1746:105:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 380,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1892:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 378,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1868:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1293_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1874:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1764,
															"src": "1868:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1868:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1746:158:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 364,
												"id": 383,
												"nodeType": "Return",
												"src": "1726:178:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "1543:58:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1616:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 361,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 359,
												"name": "ERC165",
												"nameLocations": [
													"1683:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1765,
												"src": "1683:6:2"
											},
											{
												"id": 360,
												"name": "IERC165",
												"nameLocations": [
													"1691:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1777,
												"src": "1691:7:2"
											}
										],
										"src": "1674:25:2"
									},
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1641:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1634:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 356,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1633:20:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1709:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1709:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:6:2"
									},
									"scope": 1293,
									"src": "1607:305:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1335
									],
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "2048:141:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 393,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2063:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2080:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2072:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 394,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2072:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2072:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2063:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 407,
												"nodeType": "IfStatement",
												"src": "2059:89:2",
												"trueBody": {
													"id": 406,
													"nodeType": "Block",
													"src": "2084:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2133:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2125:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 400,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2125:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2125:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 399,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "2106:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2106:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 405,
															"nodeType": "RevertStatement",
															"src": "2099:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 408,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "2165:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 410,
													"indexExpression": {
														"id": 409,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2175:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2165:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 392,
												"id": 411,
												"nodeType": "Return",
												"src": "2158:23:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "1920:50:2",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1985:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2003:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1995:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1994:15:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2039:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2038:9:2"
									},
									"scope": 1293,
									"src": "1976:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1343
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "2323:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "2355:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 421,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2341:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2341:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 420,
												"id": 424,
												"nodeType": "Return",
												"src": "2334:29:2"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2197:48:2",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2260:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2276:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2268:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2268:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:17:2"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2314:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2313:9:2"
									},
									"scope": 1293,
									"src": "2251:120:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "2498:31:2",
										"statements": [
											{
												"expression": {
													"id": 432,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2516:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 431,
												"id": 433,
												"nodeType": "Return",
												"src": "2509:12:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2379:53:2",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2447:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2451:2:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "2483:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2483:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2482:15:2"
									},
									"scope": 1293,
									"src": "2438:91:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1447
									],
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "2660:33:2",
										"statements": [
											{
												"expression": {
													"id": 441,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2678:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 440,
												"id": 442,
												"nodeType": "Return",
												"src": "2671:14:2"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "2537:55:2",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2607:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:2:2"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "2645:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2645:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2644:15:2"
									},
									"scope": 1293,
									"src": "2598:95:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1455
									],
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "2843:181:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "2868:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 452,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2854:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2854:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "2854:22:2"
											},
											{
												"assignments": [
													457
												],
												"declarations": [
													{
														"constant": false,
														"id": 457,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2903:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "2889:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 456,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2889:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 460,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 458,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "2913:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2913:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2889:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 463,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "2947:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2941:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 461,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2941:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2941:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2956:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2941:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2965:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2941:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3014:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2941:75:2",
													"trueExpression": {
														"arguments": [
															{
																"id": 471,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "2983:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 472,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "2992:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3000:8:2",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1554,
																	"src": "2992:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2992:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2969:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 468,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2969:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2976:6:2",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2969:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2969:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 451,
												"id": 478,
												"nodeType": "Return",
												"src": "2934:82:2"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "2701:57:2",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2773:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2790:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2782:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2781:17:2"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2828:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2828:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2827:15:2"
									},
									"scope": 1293,
									"src": "2764:260:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "3339:28:2",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3357:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 485,
												"id": 487,
												"nodeType": "Return",
												"src": "3350:9:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "3032:235:2",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3282:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3290:2:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3324:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 483,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3324:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3323:15:2"
									},
									"scope": 1293,
									"src": "3273:94:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1383
									],
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "3490:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 498,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "3510:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 499,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "3514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 500,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "3523:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3523:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 497,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1096,
															1162
														],
														"referencedDeclaration": 1096,
														"src": "3501:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3501:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "3501:35:2"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "3375:48:2",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3438:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3454:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3446:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3466:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3458:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:29:2"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3490:0:2"
									},
									"scope": 1293,
									"src": "3429:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1399
									],
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "3686:82:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 514,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3711:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "3697:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "3697:22:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3752:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 517,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "3739:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3739:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 512,
												"id": 520,
												"nodeType": "Return",
												"src": "3732:28:2"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "3552:52:2",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3619:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3639:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3631:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:17:2"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3677:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3676:9:2"
									},
									"scope": 1293,
									"src": "3610:158:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1391
									],
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3915:71:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 531,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "3945:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3945:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "3959:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "3969:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 530,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "3926:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3926:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3926:52:2"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "3776:58:2",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3849:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3875:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3867:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3867:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3890:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3885:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3885:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3866:33:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3915:0:2"
									},
									"scope": 1293,
									"src": "3840:146:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1409
									],
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "4151:61:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 548,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "4169:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 550,
														"indexExpression": {
															"id": 549,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "4188:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4169:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 552,
													"indexExpression": {
														"id": 551,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "4195:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4169:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 547,
												"id": 553,
												"nodeType": "Return",
												"src": "4162:42:2"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3994:57:2",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4066:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4091:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4083:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4083:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4106:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4098:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4098:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4082:33:2"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4145:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4145:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4144:6:2"
									},
									"scope": 1293,
									"src": "4057:155:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "4359:508:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 565,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "4374:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4388:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4380:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4380:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4380:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4374:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 579,
												"nodeType": "IfStatement",
												"src": "4370:89:2",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "4392:67:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4444:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4436:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 572,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4436:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4436:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 571,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "4414:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4414:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 577,
															"nodeType": "RevertStatement",
															"src": "4407:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4688:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 600,
														"src": "4680:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 580,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4680:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"arguments": [
														{
															"id": 583,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4712:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4716:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 585,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "4725:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4725:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 582,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "4704:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4704:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4680:58:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 589,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "4753:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 590,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "4770:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4753:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "IfStatement",
												"src": "4749:111:2",
												"trueBody": {
													"id": 598,
													"nodeType": "Block",
													"src": "4776:84:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 593,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 558,
																		"src": "4819:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 562,
																		"src": "4825:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 595,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "4834:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "4798:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4798:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 597,
															"nodeType": "RevertStatement",
															"src": "4791:57:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "4220:53:2",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4288:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4309:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4301:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4301:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4323:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4315:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4315:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4335:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4327:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4300:43:2"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4359:0:2"
									},
									"scope": 1293,
									"src": "4279:588:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1365
									],
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "5014:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 612,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "5042:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 613,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "5048:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "5052:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5061:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 611,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															619,
															645
														],
														"referencedDeclaration": 645,
														"src": "5025:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5025:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "5025:39:2"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "4875:57:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4947:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4972:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4964:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4964:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4986:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4978:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4998:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4990:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:43:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5014:0:2"
									},
									"scope": 1293,
									"src": "4938:134:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1355
									],
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "5246:108:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5270:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "5276:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5280:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "5257:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5257:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "5257:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5322:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "5328:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5332:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 641,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "5341:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 637,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "5299:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5299:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "5299:47:2"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "5080:57:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5152:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5177:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5169:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5191:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5183:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5183:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5203:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5195:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5195:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5225:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5212:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5212:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5168:62:2"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5246:0:2"
									},
									"scope": 1293,
									"src": "5143:211:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "5953:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 653,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "5971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 655,
													"indexExpression": {
														"id": 654,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "5979:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5971:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 652,
												"id": 656,
												"nodeType": "Return",
												"src": "5964:23:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "5362:510:2",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5887:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5904:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5896:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5896:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5895:17:2"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5944:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5943:9:2"
									},
									"scope": 1293,
									"src": "5878:117:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6195:50:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 666,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "6213:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 668,
													"indexExpression": {
														"id": 667,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "6229:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6213:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 665,
												"id": 669,
												"nodeType": "Return",
												"src": "6206:31:2"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "6003:107:2",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "6125:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6146:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6138:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6138:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6137:17:2"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6186:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6186:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6185:9:2"
									},
									"scope": 1293,
									"src": "6116:129:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "6674:167:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 683,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "6705:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6724:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6716:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 684,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6716:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6716:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6705:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 689,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 674,
																			"src": "6744:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 690,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 676,
																			"src": "6753:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6744:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 693,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 674,
																				"src": "6781:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 694,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 676,
																				"src": "6788:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 692,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "6764:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6764:32:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6744:52:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 698,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 678,
																				"src": "6813:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 697,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 671,
																			"src": "6800:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6800:21:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 700,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "6825:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6800:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6744:88:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 703,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6743:90:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6705:128:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 682,
												"id": 705,
												"nodeType": "Return",
												"src": "6685:148:2"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6253:306:2",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6574:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6596:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6588:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6588:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6611:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6603:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6628:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6620:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6620:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6587:49:2"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6668:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:2"
									},
									"scope": 1293,
									"src": "6565:276:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "7382:279:2",
										"statements": [
											{
												"condition": {
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7397:39:2",
													"subExpression": {
														"arguments": [
															{
																"id": 718,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "7412:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 719,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 712,
																"src": "7419:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 720,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "7428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 717,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "7398:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7398:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 742,
												"nodeType": "IfStatement",
												"src": "7393:261:2",
												"trueBody": {
													"id": 741,
													"nodeType": "Block",
													"src": "7438:216:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 723,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "7457:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7474:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7466:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 724,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7466:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7466:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7457:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 739,
																"nodeType": "Block",
																"src": "7557:86:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 735,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 712,
																					"src": "7610:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 736,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 714,
																					"src": "7619:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 734,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 226,
																				"src": "7583:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7583:44:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 738,
																		"nodeType": "RevertStatement",
																		"src": "7576:51:2"
																	}
																]
															},
															"id": 740,
															"nodeType": "IfStatement",
															"src": "7453:190:2",
															"trueBody": {
																"id": 733,
																"nodeType": "Block",
																"src": "7478:73:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 730,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 714,
																					"src": "7527:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 729,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "7504:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7504:31:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 732,
																		"nodeType": "RevertStatement",
																		"src": "7497:38:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "6849:430:2",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7294:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7319:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7311:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7351:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7343:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7310:49:2"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7382:0:2"
									},
									"scope": 1293,
									"src": "7285:376:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "8390:82:2",
										"statements": [
											{
												"id": 758,
												"nodeType": "UncheckedBlock",
												"src": "8401:64:2",
												"statements": [
													{
														"expression": {
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 752,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "8426:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 754,
																"indexExpression": {
																	"id": 753,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "8436:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8426:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 755,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "8448:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8426:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 757,
														"nodeType": "ExpressionStatement",
														"src": "8426:27:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "7669:640:2",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8324:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8349:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "8341:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8341:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8366:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "8358:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 748,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8358:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:32:2"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8390:0:2"
									},
									"scope": 1293,
									"src": "8315:157:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "9173:729:2",
										"statements": [
											{
												"assignments": [
													773
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "9192:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "9184:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 772,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9184:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"arguments": [
														{
															"id": 775,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "9208:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 774,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "9199:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9199:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9184:32:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 778,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "9279:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9295:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9287:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 779,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9287:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9287:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9279:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 791,
												"nodeType": "IfStatement",
												"src": "9275:88:2",
												"trueBody": {
													"id": 790,
													"nodeType": "Block",
													"src": "9299:64:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 785,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 773,
																		"src": "9331:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 786,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 767,
																		"src": "9337:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 787,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9343:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 784,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "9314:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9314:37:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 789,
															"nodeType": "ExpressionStatement",
															"src": "9314:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 792,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "9410:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9426:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9418:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 793,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9418:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9418:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9410:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 819,
												"nodeType": "IfStatement",
												"src": "9406:263:2",
												"trueBody": {
													"id": 818,
													"nodeType": "Block",
													"src": "9430:239:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9545:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9537:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 799,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9537:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9537:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 803,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9549:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9566:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9558:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 804,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9558:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9558:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9570:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 798,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1096,
																		1162
																	],
																	"referencedDeclaration": 1162,
																	"src": "9528:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9528:48:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 810,
															"nodeType": "ExpressionStatement",
															"src": "9528:48:2"
														},
														{
															"id": 817,
															"nodeType": "UncheckedBlock",
															"src": "9593:65:2",
															"statements": [
																{
																	"expression": {
																		"id": 815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 811,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "9622:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 813,
																			"indexExpression": {
																				"id": 812,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 773,
																				"src": "9632:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9622:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9641:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9622:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 816,
																	"nodeType": "ExpressionStatement",
																	"src": "9622:20:2"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9685:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9699:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9691:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 821,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9691:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9691:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9685:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "9681:111:2",
												"trueBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "9703:89:2",
													"statements": [
														{
															"id": 832,
															"nodeType": "UncheckedBlock",
															"src": "9718:63:2",
															"statements": [
																{
																	"expression": {
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 826,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "9747:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 828,
																			"indexExpression": {
																				"id": 827,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "9757:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9747:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9764:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9747:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 831,
																	"nodeType": "ExpressionStatement",
																	"src": "9747:18:2"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 835,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "9804:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 837,
														"indexExpression": {
															"id": 836,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "9812:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9804:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 838,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9823:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9804:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "9804:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 842,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "9852:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 843,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "9858:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 844,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "9862:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 841,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "9843:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9843:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "EmitStatement",
												"src": "9838:32:2"
											},
											{
												"expression": {
													"id": 847,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 773,
													"src": "9890:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 771,
												"id": 848,
												"nodeType": "Return",
												"src": "9883:11:2"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "8480:592:2",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "9087:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9103:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "9095:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9095:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9115:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "9107:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9107:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "9132:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "9124:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9124:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9094:43:2"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "9164:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9164:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9163:9:2"
									},
									"scope": 1293,
									"src": "9078:824:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "10291:282:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 858,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "10306:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10320:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10312:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 859,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10312:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10312:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10306:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 872,
												"nodeType": "IfStatement",
												"src": "10302:89:2",
												"trueBody": {
													"id": 871,
													"nodeType": "Block",
													"src": "10324:67:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10376:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10368:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 865,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10368:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10368:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 864,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "10346:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10346:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 870,
															"nodeType": "RevertStatement",
															"src": "10339:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													874
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10409:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 899,
														"src": "10401:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 873,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10401:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 883,
												"initialValue": {
													"arguments": [
														{
															"id": 876,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "10433:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 877,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "10437:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10454:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10446:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 878,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10446:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10446:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 875,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "10425:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10425:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10401:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 884,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "10472:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10497:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10489:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 885,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10489:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10489:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10472:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 898,
												"nodeType": "IfStatement",
												"src": "10468:98:2",
												"trueBody": {
													"id": 897,
													"nodeType": "Block",
													"src": "10501:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10543:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 891,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10543:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10543:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 890,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "10523:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10523:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 896,
															"nodeType": "RevertStatement",
															"src": "10516:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "9910:322:2",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10247:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10261:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "10253:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10253:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10273:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "10265:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10265:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10252:29:2"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10291:0:2"
									},
									"scope": 1293,
									"src": "10238:335:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "10993:45:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "11014:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "11018:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11027:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 908,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															915,
															941
														],
														"referencedDeclaration": 941,
														"src": "11004:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11004:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "11004:26:2"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "10581:349:2",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10945:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10963:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10955:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10955:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10975:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10967:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10967:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10954:29:2"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10993:0:2"
									},
									"scope": 1293,
									"src": "10936:102:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "11349:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 926,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "11366:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "11370:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 925,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "11360:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11360:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "11360:18:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11420:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11412:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 931,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11412:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11412:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "11424:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "11428:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 937,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "11437:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 930,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "11389:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11389:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "11389:53:2"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "11046:213:2",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "11274:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11292:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "11284:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11284:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11304:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "11296:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11296:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11326:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "11313:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 921,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11313:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11283:48:2"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11349:0:2"
									},
									"scope": 1293,
									"src": "11265:185:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "11830:191:2",
										"statements": [
											{
												"assignments": [
													948
												],
												"declarations": [
													{
														"constant": false,
														"id": 948,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11849:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 973,
														"src": "11841:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 947,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11841:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11881:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11873:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 950,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11873:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11873:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 954,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "11885:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11902:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11894:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 955,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11894:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11894:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 949,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "11865:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11865:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11841:64:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 961,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "11920:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11945:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11937:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 962,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11937:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11937:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11920:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 972,
												"nodeType": "IfStatement",
												"src": "11916:98:2",
												"trueBody": {
													"id": 971,
													"nodeType": "Block",
													"src": "11949:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 968,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "11994:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 967,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "11971:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11971:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 970,
															"nodeType": "RevertStatement",
															"src": "11964:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "11458:325:2",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11798:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11812:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "11804:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11804:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11803:17:2"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11830:0:2"
									},
									"scope": 1293,
									"src": "11789:232:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "12429:399:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 984,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "12444:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12458:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12450:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 985,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12450:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12450:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12444:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 998,
												"nodeType": "IfStatement",
												"src": "12440:89:2",
												"trueBody": {
													"id": 997,
													"nodeType": "Block",
													"src": "12462:67:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 993,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12514:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12506:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 991,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12506:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12506:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 990,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "12484:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12484:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 996,
															"nodeType": "RevertStatement",
															"src": "12477:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12547:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 1033,
														"src": "12539:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 999,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12539:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": {
													"arguments": [
														{
															"id": 1002,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "12571:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "12575:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12592:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12584:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1004,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12584:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12584:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1001,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "12563:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12563:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12539:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1010,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "12610:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12635:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12627:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1011,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12627:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12627:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12610:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1021,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "12714:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1022,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "12731:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12714:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1031,
													"nodeType": "IfStatement",
													"src": "12710:111:2",
													"trueBody": {
														"id": 1030,
														"nodeType": "Block",
														"src": "12737:84:2",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1025,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 977,
																			"src": "12780:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1026,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "12786:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1027,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "12795:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1024,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "12759:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12759:50:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1029,
																"nodeType": "RevertStatement",
																"src": "12752:57:2"
															}
														]
													}
												},
												"id": 1032,
												"nodeType": "IfStatement",
												"src": "12606:215:2",
												"trueBody": {
													"id": 1020,
													"nodeType": "Block",
													"src": "12639:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1017,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "12684:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1016,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "12661:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12661:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1019,
															"nodeType": "RevertStatement",
															"src": "12654:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "12029:323:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12367:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12385:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12377:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12377:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12399:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12391:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12391:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12411:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12403:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12403:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12376:43:2"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12429:0:2"
									},
									"scope": 1293,
									"src": "12358:470:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "13857:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "13882:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "13888:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "13892:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13901:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1044,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1052,
															1078
														],
														"referencedDeclaration": 1078,
														"src": "13868:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13868:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "13868:36:2"
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "12836:940:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13791:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13813:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13805:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13827:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13819:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13819:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13839:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13831:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13831:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13804:43:2"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13857:0:2"
									},
									"scope": 1293,
									"src": "13782:130:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "14257:105:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1065,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "14278:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1066,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "14284:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "14288:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1064,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "14268:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14268:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "14268:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1071,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "14330:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1072,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "14336:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "14340:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1074,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "14349:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1070,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "14307:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14307:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "14307:47:2"
											}
										]
									},
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "13920:229:2",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "14164:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14186:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "14178:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14178:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14200:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "14192:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14192:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14212:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "14204:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14204:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14234:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "14221:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1060,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14221:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14177:62:2"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14257:0:2"
									},
									"scope": 1293,
									"src": "14155:207:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "14887:52:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1089,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "14907:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1090,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "14911:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1091,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "14920:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14926:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1088,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1096,
															1162
														],
														"referencedDeclaration": 1162,
														"src": "14898:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14898:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "14898:33:2"
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "14370:441:2",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14826:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14843:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14835:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14835:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14855:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14847:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14847:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14872:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14864:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14864:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14834:43:2"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14887:0:2"
									},
									"scope": 1293,
									"src": "14817:122:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "15221:584:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "15289:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1109,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "15302:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15318:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15310:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1110,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15310:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15310:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "15302:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15289:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1154,
												"nodeType": "IfStatement",
												"src": "15285:471:2",
												"trueBody": {
													"id": 1153,
													"nodeType": "Block",
													"src": "15322:434:2",
													"statements": [
														{
															"assignments": [
																1117
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1117,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "15345:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1153,
																	"src": "15337:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1116,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15337:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1121,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1119,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "15367:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1118,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1228,
																	"src": "15353:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15353:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15337:38:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1122,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "15506:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15522:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15514:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1123,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15514:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15514:10:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15506:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1128,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "15528:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1129,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "15537:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15528:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15506:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15545:30:2",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1133,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1117,
																				"src": "15563:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1134,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1103,
																				"src": "15570:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1132,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "15546:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15546:29:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15506:69:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1143,
															"nodeType": "IfStatement",
															"src": "15502:144:2",
															"trueBody": {
																"id": 1142,
																"nodeType": "Block",
																"src": "15577:69:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1139,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1103,
																					"src": "15625:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1138,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 231,
																				"src": "15603:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15603:27:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1141,
																		"nodeType": "RevertStatement",
																		"src": "15596:34:2"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1144,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "15666:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1152,
															"nodeType": "IfStatement",
															"src": "15662:83:2",
															"trueBody": {
																"id": 1151,
																"nodeType": "Block",
																"src": "15677:68:2",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1146,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "15710:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1147,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1099,
																					"src": "15717:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1148,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1101,
																					"src": "15721:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1145,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "15701:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15701:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1150,
																		"nodeType": "EmitStatement",
																		"src": "15696:33:2"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1155,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "15768:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1157,
														"indexExpression": {
															"id": 1156,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "15784:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15768:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1158,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "15795:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15768:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "15768:29:2"
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "14947:174:2",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "15136:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15153:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "15145:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15145:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15165:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "15157:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15157:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "15182:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "15174:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15174:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "15193:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "15188:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15188:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15144:59:2"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15221:0:2"
									},
									"scope": 1293,
									"src": "15127:678:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "16117:225:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "16132:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16152:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16144:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1173,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16144:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16144:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16132:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1183,
												"nodeType": "IfStatement",
												"src": "16128:93:2",
												"trueBody": {
													"id": 1182,
													"nodeType": "Block",
													"src": "16156:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1179,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "16200:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1178,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "16178:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16178:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1181,
															"nodeType": "RevertStatement",
															"src": "16171:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1184,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "16231:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1187,
															"indexExpression": {
																"id": 1185,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "16250:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16231:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1188,
														"indexExpression": {
															"id": 1186,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "16257:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16231:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1189,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "16269:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16231:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "16231:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1193,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "16308:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1194,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "16315:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1195,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "16325:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1192,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "16293:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16293:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "EmitStatement",
												"src": "16288:46:2"
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "15813:205:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "16033:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16060:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "16052:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16052:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16075:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "16067:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16067:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "16090:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "16085:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16085:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16051:48:2"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16117:0:2"
									},
									"scope": 1293,
									"src": "16024:318:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "16657:175:2",
										"statements": [
											{
												"assignments": [
													1208
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16676:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "16668:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1207,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16668:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1212,
												"initialValue": {
													"arguments": [
														{
															"id": 1210,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "16693:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1209,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "16684:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16684:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16668:33:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1213,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "16716:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16725:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1214,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16725:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16725:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16716:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1224,
												"nodeType": "IfStatement",
												"src": "16712:90:2",
												"trueBody": {
													"id": 1223,
													"nodeType": "Block",
													"src": "16737:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1220,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "16782:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1219,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "16759:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16759:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1222,
															"nodeType": "RevertStatement",
															"src": "16752:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1225,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1208,
													"src": "16819:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1226,
												"nodeType": "Return",
												"src": "16812:12:2"
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "16350:229:2",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16594:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16616:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "16608:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16608:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16607:17:2"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "16648:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16648:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16647:9:2"
									},
									"scope": 1293,
									"src": "16585:247:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "17484:697:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1240,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "17499:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17502:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17499:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17507:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17499:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17516:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17499:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "17495:679:2",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "17519:655:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1269,
																		"nodeType": "Block",
																		"src": "17634:166:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1262,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1258,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1256,
																						"src": "17657:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1259,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1428,
																								"src": "17667:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1428_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1260,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17683:16:2",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1427,
																							"src": "17667:32:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1261,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17700:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17667:41:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17657:51:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1268,
																				"nodeType": "IfStatement",
																				"src": "17653:132:2",
																				"trueBody": {
																					"id": 1267,
																					"nodeType": "Block",
																					"src": "17710:75:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1264,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1233,
																										"src": "17762:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1263,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17740:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1265,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17740:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1266,
																							"nodeType": "RevertStatement",
																							"src": "17733:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1270,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1257,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1256,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17626:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1270,
																				"src": "17619:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1255,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17619:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17618:15:2"
																	},
																	"src": "17610:190:2"
																},
																{
																	"block": {
																		"id": 1286,
																		"nodeType": "Block",
																		"src": "17829:334:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1277,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1274,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1272,
																							"src": "17852:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1275,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17859:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17852:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1276,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17869:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17852:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1284,
																					"nodeType": "Block",
																					"src": "17953:195:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "18041:88:2",
																								"nodeType": "YulBlock",
																								"src": "18041:88:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "18079:2:2",
																															"nodeType": "YulLiteral",
																															"src": "18079:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "18083:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "18083:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "18075:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "18075:3:2"
																													},
																													"nativeSrc": "18075:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "18075:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "18098:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "18098:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "18092:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "18092:5:2"
																													},
																													"nativeSrc": "18092:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "18092:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "18068:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "18068:6:2"
																											},
																											"nativeSrc": "18068:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "18068:38:2"
																										},
																										"nativeSrc": "18068:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "18068:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1272,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "18083:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1272,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "18098:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1283,
																							"nodeType": "InlineAssembly",
																							"src": "18032:97:2"
																						}
																					]
																				},
																				"id": 1285,
																				"nodeType": "IfStatement",
																				"src": "17848:300:2",
																				"trueBody": {
																					"id": 1282,
																					"nodeType": "Block",
																					"src": "17872:75:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1279,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1233,
																										"src": "17924:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1278,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17902:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1280,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17902:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1281,
																							"nodeType": "RevertStatement",
																							"src": "17895:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1287,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1273,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1272,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17821:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1287,
																				"src": "17808:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1271,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17808:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17807:21:2"
																	},
																	"src": "17801:362:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1249,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "17575:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17575:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1251,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "17589:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1252,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "17595:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1253,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "17604:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1246,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1233,
																				"src": "17554:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1245,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "17538:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1428_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17538:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1428",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17558:16:2",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1427,
																	"src": "17538:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17538:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1288,
															"nodeType": "TryStatement",
															"src": "17534:629:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "16840:536:2",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "17391:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17422:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "17414:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17414:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17436:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "17428:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17428:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17448:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "17440:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17440:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17470:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "17457:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17457:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17413:62:2"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17484:0:2"
									},
									"scope": 1293,
									"src": "17382:799:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1294,
							"src": "794:17390:2",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "110:18076:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1777
						],
						"IERC721": [
							1410
						]
					},
					"id": 1411,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1295,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "111:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1411,
							"sourceUnit": 1778,
							"src": "139:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1296,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1777,
										"src": "147:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1299,
										"name": "IERC165",
										"nameLocations": [
											"297:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1777,
										"src": "297:7:3"
									},
									"id": 1300,
									"nodeType": "InheritanceSpecifier",
									"src": "297:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1298,
								"nodeType": "StructuredDocumentation",
								"src": "205:69:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1410,
							"linearizedBaseContracts": [
								1410,
								1777
							],
							"name": "IERC721",
							"nameLocation": "286:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "312:90:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1309,
									"name": "Transfer",
									"nameLocation": "414:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "439:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "423:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "461:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "445:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "465:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:67:3"
									},
									"src": "408:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "498:96:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1318,
									"name": "Approval",
									"nameLocation": "606:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "631:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "615:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "654:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "638:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "680:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "664:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "614:74:3"
									},
									"src": "600:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "697:119:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1327,
									"name": "ApprovalForAll",
									"nameLocation": "828:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "859:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "843:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "882:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "866:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "897:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "892:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "892:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "842:64:3"
									},
									"src": "822:85:3"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "915:78:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1008:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1026:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1018:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:15:3"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1064:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1056:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1055:17:3"
									},
									"scope": 1410,
									"src": "999:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "1081:137:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1233:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1249:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1241:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:17:3"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1289:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1281:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1280:15:3"
									},
									"scope": 1410,
									"src": "1224:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "1304:578:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1897:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1922:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1914:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1936:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1928:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1948:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1940:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1940:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1972:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1957:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1957:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:64:3"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1986:0:3"
									},
									"scope": 1410,
									"src": "1888:99:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "1995:720:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2730:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2755:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2747:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2747:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2769:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2761:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2781:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2773:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2773:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:43:3"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2798:0:3"
									},
									"scope": 1410,
									"src": "2721:78:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "2807:747:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3569:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3590:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3582:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3604:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3596:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3616:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3608:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3608:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3581:43:3"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3633:0:3"
									},
									"scope": 1410,
									"src": "3560:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "3642:464:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4121:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4137:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4129:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4149:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4141:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4141:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4128:29:3"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4166:0:3"
									},
									"scope": 1410,
									"src": "4112:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "4175:324:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4514:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4540:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4532:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4532:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4555:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4550:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4550:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4531:33:3"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4573:0:3"
									},
									"scope": 1410,
									"src": "4505:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "4582:145:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4742:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4762:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "4754:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4754:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4753:17:3"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4802:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "4794:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4794:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4793:18:3"
									},
									"scope": 1410,
									"src": "4733:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "4820:142:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4977:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5002:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4994:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5017:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "5009:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5009:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4993:33:3"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "5050:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5050:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5049:6:3"
									},
									"scope": 1410,
									"src": "4968:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1411,
							"src": "276:4783:3",
							"usedErrors": [],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "111:4950:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1428
						]
					},
					"id": 1429,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1412,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "119:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1413,
								"nodeType": "StructuredDocumentation",
								"src": "147:156:4",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1428,
							"linearizedBaseContracts": [
								1428
							],
							"name": "IERC721Receiver",
							"nameLocation": "315:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "338:509:4",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "862:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "897:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "889:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "924:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "916:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "947:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "939:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "980:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "965:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "965:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:113:4"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "1010:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1424,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1010:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1009:8:4"
									},
									"scope": 1428,
									"src": "853:165:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1429,
							"src": "305:716:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "119:904:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1410
						],
						"IERC721Metadata": [
							1456
						]
					},
					"id": 1457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1430,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "130:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1432,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1457,
							"sourceUnit": 1411,
							"src": "158:39:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1431,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1410,
										"src": "166:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1434,
										"name": "IERC721",
										"nameLocations": [
											"368:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1410,
										"src": "368:7:5"
									},
									"id": 1435,
									"nodeType": "InheritanceSpecifier",
									"src": "368:7:5"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1433,
								"nodeType": "StructuredDocumentation",
								"src": "201:136:5",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1456,
							"linearizedBaseContracts": [
								1456,
								1410,
								1777
							],
							"name": "IERC721Metadata",
							"nameLocation": "349:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1436,
										"nodeType": "StructuredDocumentation",
										"src": "383:60:5",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "458:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "462:2:5"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "488:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "488:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "487:15:5"
									},
									"scope": 1456,
									"src": "449:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "511:62:5",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "588:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "594:2:5"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "620:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "620:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "619:15:5"
									},
									"scope": 1456,
									"src": "579:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "643:92:5",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "750:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "767:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "759:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:17:5"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "799:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1452,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "799:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:15:5"
									},
									"scope": 1456,
									"src": "741:73:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1457,
							"src": "339:478:5",
							"usedErrors": [],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "130:689:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1486
						]
					},
					"id": 1487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1459,
								"nodeType": "StructuredDocumentation",
								"src": "132:505:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1486,
							"linearizedBaseContracts": [
								1486
							],
							"name": "Context",
							"nameLocation": "657:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "734:36:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1464,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "752:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "756:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "752:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1463,
												"id": 1466,
												"nodeType": "Return",
												"src": "745:17:6"
											}
										]
									},
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "681:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:2:6"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "725:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:9:6"
									},
									"scope": 1486,
									"src": "672:98:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "845:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1473,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "863:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "867:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "863:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1472,
												"id": 1475,
												"nodeType": "Return",
												"src": "856:15:6"
											}
										]
									},
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "787:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:6"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "829:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "829:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:16:6"
									},
									"scope": 1486,
									"src": "778:101:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "959:27:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "977:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1481,
												"id": 1483,
												"nodeType": "Return",
												"src": "970:8:6"
											}
										]
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "896:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:2:6"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "950:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "949:9:6"
									},
									"scope": 1486,
									"src": "887:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1487,
							"src": "639:350:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "104:887:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2831
						],
						"SignedMath": [
							2936
						],
						"Strings": [
							1741
						]
					},
					"id": 1742,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1490,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1742,
							"sourceUnit": 2832,
							"src": "132:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1489,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2831,
										"src": "140:4:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1492,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1742,
							"sourceUnit": 2937,
							"src": "171:49:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1491,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2936,
										"src": "179:10:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1493,
								"nodeType": "StructuredDocumentation",
								"src": "224:36:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1741,
							"linearizedBaseContracts": [
								1741
							],
							"name": "Strings",
							"nameLocation": "270:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1496,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "310:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "285:56:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1494,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "285:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1495,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "323:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1499,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "371:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "348:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1497,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "348:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1498,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "388:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1500,
										"nodeType": "StructuredDocumentation",
										"src": "399:83:7",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1506,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "494:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "531:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "523:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "546:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "538:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:31:7"
									},
									"src": "488:66:7"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "731:647:7",
										"statements": [
											{
												"id": 1552,
												"nodeType": "UncheckedBlock",
												"src": "742:629:7",
												"statements": [
													{
														"assignments": [
															1515
														],
														"declarations": [
															{
																"constant": false,
																"id": 1515,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "775:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1552,
																"src": "767:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1514,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "767:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1522,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1518,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1509,
																		"src": "795:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1516,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2831,
																		"src": "784:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2831_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "789:5:7",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2651,
																	"src": "784:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "784:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "804:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "784:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "767:38:7"
													},
													{
														"assignments": [
															1524
														],
														"declarations": [
															{
																"constant": false,
																"id": 1524,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "834:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1552,
																"src": "820:20:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1523,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "820:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1529,
														"initialValue": {
															"arguments": [
																{
																	"id": 1527,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1515,
																	"src": "854:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "843:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1525,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "847:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "843:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "820:41:7"
													},
													{
														"assignments": [
															1531
														],
														"declarations": [
															{
																"constant": false,
																"id": 1531,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "884:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 1552,
																"src": "876:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1530,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "876:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1532,
														"nodeType": "VariableDeclarationStatement",
														"src": "876:11:7"
													},
													{
														"AST": {
															"nativeSrc": "959:69:7",
															"nodeType": "YulBlock",
															"src": "959:69:7",
															"statements": [
																{
																	"nativeSrc": "978:35:7",
																	"nodeType": "YulAssignment",
																	"src": "978:35:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "989:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "989:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1001:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1001:2:7",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1005:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1005:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "997:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "997:3:7"
																				},
																				"nativeSrc": "997:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "997:15:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "985:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "985:3:7"
																		},
																		"nativeSrc": "985:28:7",
																		"nodeType": "YulFunctionCall",
																		"src": "985:28:7"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "978:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "978:3:7"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1524,
																"isOffset": false,
																"isSlot": false,
																"src": "989:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1515,
																"isOffset": false,
																"isSlot": false,
																"src": "1005:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1531,
																"isOffset": false,
																"isSlot": false,
																"src": "978:3:7",
																"valueSize": 1
															}
														],
														"id": 1533,
														"nodeType": "InlineAssembly",
														"src": "950:78:7"
													},
													{
														"body": {
															"id": 1548,
															"nodeType": "Block",
															"src": "1055:277:7",
															"statements": [
																{
																	"expression": {
																		"id": 1536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1074:5:7",
																		"subExpression": {
																			"id": 1535,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1531,
																			"src": "1074:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1537,
																	"nodeType": "ExpressionStatement",
																	"src": "1074:5:7"
																},
																{
																	"AST": {
																		"nativeSrc": "1159:88:7",
																		"nodeType": "YulBlock",
																		"src": "1159:88:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1190:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1190:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1204:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "1204:5:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1211:2:7",
																											"nodeType": "YulLiteral",
																											"src": "1211:2:7",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1200:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "1200:3:7"
																									},
																									"nativeSrc": "1200:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "1200:14:7"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1216:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "1216:10:7"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1195:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "1195:4:7"
																							},
																							"nativeSrc": "1195:32:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1195:32:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1182:7:7",
																						"nodeType": "YulIdentifier",
																						"src": "1182:7:7"
																					},
																					"nativeSrc": "1182:46:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1182:46:7"
																				},
																				"nativeSrc": "1182:46:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "1182:46:7"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1496,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1216:10:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1531,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1190:3:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1509,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1204:5:7",
																			"valueSize": 1
																		}
																	],
																	"id": 1538,
																	"nodeType": "InlineAssembly",
																	"src": "1150:97:7"
																},
																{
																	"expression": {
																		"id": 1541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1539,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "1265:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1274:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1265:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1542,
																	"nodeType": "ExpressionStatement",
																	"src": "1265:11:7"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1543,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "1299:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1308:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1299:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1547,
																	"nodeType": "IfStatement",
																	"src": "1295:21:7",
																	"trueBody": {
																		"id": 1546,
																		"nodeType": "Break",
																		"src": "1311:5:7"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1049:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1549,
														"nodeType": "WhileStatement",
														"src": "1042:290:7"
													},
													{
														"expression": {
															"id": 1550,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "1353:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1513,
														"id": 1551,
														"nodeType": "Return",
														"src": "1346:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1507,
										"nodeType": "StructuredDocumentation",
										"src": "562:92:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "669:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "686:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "678:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "677:15:7"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "716:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1511,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "716:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "715:15:7"
									},
									"scope": 1741,
									"src": "660:718:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "1559:94:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1565,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1557,
																	"src": "1591:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1599:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1591:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1609:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1591:20:7",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1603:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1574,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1557,
																			"src": "1637:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1572,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2936,
																			"src": "1622:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2936_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1633:3:7",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2935,
																		"src": "1622:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1622:21:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1571,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "1613:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1613:31:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1577:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1562,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1577:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1584:6:7",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1577:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1577:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1561,
												"id": 1578,
												"nodeType": "Return",
												"src": "1570:75:7"
											}
										]
									},
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "1386:91:7",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1492:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1514:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "1507:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1556,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1507:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1506:14:7"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "1544:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:15:7"
									},
									"scope": 1741,
									"src": "1483:170:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1599,
										"nodeType": "Block",
										"src": "1837:104:7",
										"statements": [
											{
												"id": 1598,
												"nodeType": "UncheckedBlock",
												"src": "1848:86:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1589,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "1892:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1592,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1583,
																				"src": "1911:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1590,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2831,
																				"src": "1899:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2831_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1904:6:7",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2773,
																			"src": "1899:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1899:18:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1920:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1899:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1588,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1600,
																	1683,
																	1703
																],
																"referencedDeclaration": 1683,
																"src": "1880:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1880:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1587,
														"id": 1597,
														"nodeType": "Return",
														"src": "1873:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1581,
										"nodeType": "StructuredDocumentation",
										"src": "1661:96:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1772:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1792:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "1784:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1784:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1783:15:7"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "1822:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1585,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1822:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1821:15:7"
									},
									"scope": 1741,
									"src": "1763:178:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "2159:448:7",
										"statements": [
											{
												"assignments": [
													1611
												],
												"declarations": [
													{
														"constant": false,
														"id": 1611,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2178:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1682,
														"src": "2170:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1610,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2170:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1613,
												"initialValue": {
													"id": 1612,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1603,
													"src": "2191:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2170:26:7"
											},
											{
												"assignments": [
													1615
												],
												"declarations": [
													{
														"constant": false,
														"id": 1615,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2220:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1682,
														"src": "2207:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1614,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2207:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1624,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2239:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1619,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1605,
																	"src": "2243:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2239:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2252:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2239:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1617,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2229:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1616,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2233:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2229:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2207:47:7"
											},
											{
												"expression": {
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1625,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "2265:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1627,
														"indexExpression": {
															"hexValue": "30",
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2272:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2265:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2277:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2265:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "2265:15:7"
											},
											{
												"expression": {
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1631,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "2291:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1633,
														"indexExpression": {
															"hexValue": "31",
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2298:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2291:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2303:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2291:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1636,
												"nodeType": "ExpressionStatement",
												"src": "2291:15:7"
											},
											{
												"body": {
													"id": 1665,
													"nodeType": "Block",
													"src": "2362:98:7",
													"statements": [
														{
															"expression": {
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1651,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1615,
																		"src": "2377:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1653,
																	"indexExpression": {
																		"id": 1652,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1638,
																		"src": "2384:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2377:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1654,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1496,
																		"src": "2389:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1658,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1655,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1611,
																			"src": "2400:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2413:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2400:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2389:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2377:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1660,
															"nodeType": "ExpressionStatement",
															"src": "2377:40:7"
														},
														{
															"expression": {
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1661,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1611,
																	"src": "2432:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2447:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2432:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1664,
															"nodeType": "ExpressionStatement",
															"src": "2432:16:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1645,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "2350:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1646,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2354:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2350:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1666,
												"initializationExpression": {
													"assignments": [
														1638
													],
													"declarations": [
														{
															"constant": false,
															"id": 1638,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2330:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1666,
															"src": "2322:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1637,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2322:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1644,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2334:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1640,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "2338:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2334:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2347:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2334:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2322:26:7"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2357:3:7",
														"subExpression": {
															"id": 1648,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "2359:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1650,
													"nodeType": "ExpressionStatement",
													"src": "2357:3:7"
												},
												"nodeType": "ForStatement",
												"src": "2317:143:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1667,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "2474:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2488:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2474:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1676,
												"nodeType": "IfStatement",
												"src": "2470:98:7",
												"trueBody": {
													"id": 1675,
													"nodeType": "Block",
													"src": "2491:77:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1671,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1603,
																		"src": "2542:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1672,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1605,
																		"src": "2549:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1670,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1506,
																	"src": "2513:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2513:43:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1674,
															"nodeType": "RevertStatement",
															"src": "2506:50:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1679,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "2592:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2585:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1677,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2585:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2585:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1609,
												"id": 1681,
												"nodeType": "Return",
												"src": "2578:21:7"
											}
										]
									},
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "1949:114:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2078:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2098:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "2090:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2113:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "2105:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2105:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:31:7"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "2144:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1607,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:7"
									},
									"scope": 1741,
									"src": "2069:538:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1702,
										"nodeType": "Block",
										"src": "2845:77:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1696,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1686,
																			"src": "2891:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2883:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1694,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2883:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2883:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2875:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1692,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2875:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2875:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1699,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "2899:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1691,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1600,
															1683,
															1703
														],
														"referencedDeclaration": 1683,
														"src": "2863:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2863:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1690,
												"id": 1701,
												"nodeType": "Return",
												"src": "2856:58:7"
											}
										]
									},
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "2615:151:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2781:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2801:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "2793:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2793:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2792:14:7"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "2830:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1688,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2830:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:15:7"
									},
									"scope": 1741,
									"src": "2772:150:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "3082:106:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1715,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "3106:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3100:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1713,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3100:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3100:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3109:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3100:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1720,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "3125:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3119:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1718,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3119:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3119:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3128:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3119:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3100:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1727,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1706,
																			"src": "3154:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3148:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1725,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3148:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3148:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1724,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3138:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3138:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1733,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1708,
																			"src": "3177:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3171:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1731,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3171:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3171:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1730,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3161:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3161:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3138:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3100:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1712,
												"id": 1738,
												"nodeType": "Return",
												"src": "3093:87:7"
											}
										]
									},
									"documentation": {
										"id": 1704,
										"nodeType": "StructuredDocumentation",
										"src": "2930:68:7",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "3013:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3033:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "3019:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1705,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3019:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3050:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "3036:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1707,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3036:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3018:34:7"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "3076:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1710,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3076:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3075:6:7"
									},
									"scope": 1741,
									"src": "3004:184:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1742,
							"src": "262:2929:7",
							"usedErrors": [
								1506
							],
							"usedEvents": []
						}
					],
					"src": "104:3089:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1765
						],
						"IERC165": [
							1777
						]
					},
					"id": 1766,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1743,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "117:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1745,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1766,
							"sourceUnit": 1778,
							"src": "145:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1744,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1777,
										"src": "153:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1747,
										"name": "IERC165",
										"nameLocations": [
											"706:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1777,
										"src": "706:7:8"
									},
									"id": 1748,
									"nodeType": "InheritanceSpecifier",
									"src": "706:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1746,
								"nodeType": "StructuredDocumentation",
								"src": "187:489:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1765,
							"linearizedBaseContracts": [
								1765,
								1777
							],
							"name": "ERC165",
							"nameLocation": "696:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1776
									],
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "867:66:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1756,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "885:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1758,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "905:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1777_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1777_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1757,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "900:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "900:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1777",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "914:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "900:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "885:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1755,
												"id": 1762,
												"nodeType": "Return",
												"src": "878:47:8"
											}
										]
									},
									"documentation": {
										"id": 1749,
										"nodeType": "StructuredDocumentation",
										"src": "721:58:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "812:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1750,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:8"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1753,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 1765,
									"src": "785:148:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1766,
							"src": "678:258:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "117:821:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1777
						]
					},
					"id": 1778,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1767,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1768,
								"nodeType": "StructuredDocumentation",
								"src": "146:287:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1777,
							"linearizedBaseContracts": [
								1777
							],
							"name": "IERC165",
							"nameLocation": "445:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1769,
										"nodeType": "StructuredDocumentation",
										"src": "460:347:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "822:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "847:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "840:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1770,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "840:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:20:9"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "883:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "883:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:6:9"
									},
									"scope": 1777,
									"src": "813:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1778,
							"src": "435:457:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:776:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2831
						]
					},
					"id": 2832,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1779,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1780,
								"nodeType": "StructuredDocumentation",
								"src": "134:75:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2831,
							"linearizedBaseContracts": [
								2831
							],
							"name": "Math",
							"nameLocation": "219:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "231:52:10",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1783,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "295:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "315:2:10"
									},
									"src": "289:29:10"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1788,
									"members": [
										{
											"id": 1784,
											"name": "Floor",
											"nameLocation": "351:5:10",
											"nodeType": "EnumValue",
											"src": "351:5:10"
										},
										{
											"id": 1785,
											"name": "Ceil",
											"nameLocation": "395:4:10",
											"nodeType": "EnumValue",
											"src": "395:4:10"
										},
										{
											"id": 1786,
											"name": "Trunc",
											"nameLocation": "438:5:10",
											"nodeType": "EnumValue",
											"src": "438:5:10"
										},
										{
											"id": 1787,
											"name": "Expand",
											"nameLocation": "469:6:10",
											"nodeType": "EnumValue",
											"src": "469:6:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "331:8:10",
									"nodeType": "EnumDefinition",
									"src": "326:174:10"
								},
								{
									"body": {
										"id": 1819,
										"nodeType": "Block",
										"src": "685:146:10",
										"statements": [
											{
												"id": 1818,
												"nodeType": "UncheckedBlock",
												"src": "696:128:10",
												"statements": [
													{
														"assignments": [
															1801
														],
														"declarations": [
															{
																"constant": false,
																"id": 1801,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "729:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1818,
																"src": "721:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1800,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "721:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1805,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1802,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "733:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1803,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1793,
																"src": "737:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "733:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "721:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1806,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "757:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1807,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "761:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "757:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1813,
														"nodeType": "IfStatement",
														"src": "753:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "772:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "779:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1811,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "771:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1799,
															"id": 1812,
															"nodeType": "Return",
															"src": "764:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "804:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1815,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "810:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1816,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "803:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1799,
														"id": 1817,
														"nodeType": "Return",
														"src": "796:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1789,
										"nodeType": "StructuredDocumentation",
										"src": "508:95:10",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "618:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "633:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "625:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "644:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "636:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "624:22:10"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "670:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1795,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "670:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "676:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:15:10"
									},
									"scope": 2831,
									"src": "609:222:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1847,
										"nodeType": "Block",
										"src": "1019:118:10",
										"statements": [
											{
												"id": 1846,
												"nodeType": "UncheckedBlock",
												"src": "1030:100:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1832,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "1059:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1833,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "1063:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1059:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1839,
														"nodeType": "IfStatement",
														"src": "1055:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1074:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1081:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1837,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1073:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1831,
															"id": 1838,
															"nodeType": "Return",
															"src": "1066:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1106:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1841,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1823,
																		"src": "1112:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1842,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1825,
																		"src": "1116:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1112:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1844,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1105:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1831,
														"id": 1845,
														"nodeType": "Return",
														"src": "1098:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1821,
										"nodeType": "StructuredDocumentation",
										"src": "839:98:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "952:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "967:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "959:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "978:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "970:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:22:10"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "1004:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1004:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "1010:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:15:10"
									},
									"scope": 2831,
									"src": "943:194:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "1328:427:10",
										"statements": [
											{
												"id": 1888,
												"nodeType": "UncheckedBlock",
												"src": "1339:409:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1860,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1851,
																"src": "1601:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1606:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1601:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1867,
														"nodeType": "IfStatement",
														"src": "1597:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1617:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1623:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1865,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1616:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1859,
															"id": 1866,
															"nodeType": "Return",
															"src": "1609:16:10"
														}
													},
													{
														"assignments": [
															1869
														],
														"declarations": [
															{
																"constant": false,
																"id": 1869,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1648:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1888,
																"src": "1640:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1868,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1640:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1873,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1870,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1851,
																"src": "1652:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1871,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "1656:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1652:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1640:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1874,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1869,
																	"src": "1676:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1875,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1851,
																	"src": "1680:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1676:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1877,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "1685:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1676:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1883,
														"nodeType": "IfStatement",
														"src": "1672:33:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1696:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1703:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1881,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1695:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1859,
															"id": 1882,
															"nodeType": "Return",
															"src": "1688:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1728:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1885,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1869,
																	"src": "1734:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1886,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1727:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1859,
														"id": 1887,
														"nodeType": "Return",
														"src": "1720:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1849,
										"nodeType": "StructuredDocumentation",
										"src": "1145:101:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1261:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1276:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1268:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1287:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1279:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:22:10"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1313:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1313:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1319:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1312:15:10"
									},
									"scope": 2831,
									"src": "1252:503:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "1947:119:10",
										"statements": [
											{
												"id": 1916,
												"nodeType": "UncheckedBlock",
												"src": "1958:101:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1902,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1895,
																"src": "1987:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1992:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1987:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1909,
														"nodeType": "IfStatement",
														"src": "1983:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2003:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2010:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1907,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2002:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1901,
															"id": 1908,
															"nodeType": "Return",
															"src": "1995:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2035:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1911,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1893,
																		"src": "2041:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1912,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1895,
																		"src": "2045:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2041:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1914,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2034:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1901,
														"id": 1915,
														"nodeType": "Return",
														"src": "2027:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1891,
										"nodeType": "StructuredDocumentation",
										"src": "1763:102:10",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1880:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1895:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1887:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1906:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1898:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1898:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1886:22:10"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1932:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1897,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1932:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1938:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1931:15:10"
									},
									"scope": 2831,
									"src": "1871:195:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1945,
										"nodeType": "Block",
										"src": "2268:119:10",
										"statements": [
											{
												"id": 1944,
												"nodeType": "UncheckedBlock",
												"src": "2279:101:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1930,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1923,
																"src": "2308:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2313:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2308:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1937,
														"nodeType": "IfStatement",
														"src": "2304:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2324:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2331:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1935,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2323:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1929,
															"id": 1936,
															"nodeType": "Return",
															"src": "2316:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2356:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1939,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1921,
																		"src": "2362:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1940,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1923,
																		"src": "2366:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2362:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1942,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2355:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1929,
														"id": 1943,
														"nodeType": "Return",
														"src": "2348:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "2074:112:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2201:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2216:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2208:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2227:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2219:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2219:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:22:10"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2253:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1925,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2253:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2259:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2259:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2252:15:10"
									},
									"scope": 2831,
									"src": "2192:195:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1963,
										"nodeType": "Block",
										"src": "2529:39:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1956,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1949,
															"src": "2547:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1957,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "2551:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2547:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1960,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1951,
														"src": "2559:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2547:13:10",
													"trueExpression": {
														"id": 1959,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1949,
														"src": "2555:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1955,
												"id": 1962,
												"nodeType": "Return",
												"src": "2540:20:10"
											}
										]
									},
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "2395:61:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2471:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2483:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2475:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2475:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2494:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2486:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2486:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2474:22:10"
									},
									"returnParameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2520:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2520:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2519:9:10"
									},
									"scope": 2831,
									"src": "2462:106:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "2711:39:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1974,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1967,
															"src": "2729:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1975,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1969,
															"src": "2733:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2729:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1978,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1969,
														"src": "2741:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2729:13:10",
													"trueExpression": {
														"id": 1977,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1967,
														"src": "2737:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1973,
												"id": 1980,
												"nodeType": "Return",
												"src": "2722:20:10"
											}
										]
									},
									"documentation": {
										"id": 1965,
										"nodeType": "StructuredDocumentation",
										"src": "2576:62:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2653:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2665:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "2657:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2676:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "2668:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2656:22:10"
									},
									"returnParameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "2702:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2701:9:10"
									},
									"scope": 2831,
									"src": "2644:106:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2004,
										"nodeType": "Block",
										"src": "2940:85:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1992,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1985,
																	"src": "2997:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1993,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1987,
																	"src": "3001:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2997:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1995,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2996:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1996,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1985,
																		"src": "3007:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1997,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1987,
																		"src": "3011:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3007:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1999,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3006:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3016:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3006:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2996:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1991,
												"id": 2003,
												"nodeType": "Return",
												"src": "2989:28:10"
											}
										]
									},
									"documentation": {
										"id": 1983,
										"nodeType": "StructuredDocumentation",
										"src": "2758:105:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2878:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2894:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "2886:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2886:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2905:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "2897:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2897:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2885:22:10"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "2931:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2931:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:9:10"
									},
									"scope": 2831,
									"src": "2869:156:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2038,
										"nodeType": "Block",
										"src": "3325:268:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2015,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2010,
														"src": "3340:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3345:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3340:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2023,
												"nodeType": "IfStatement",
												"src": "3336:130:10",
												"trueBody": {
													"id": 2022,
													"nodeType": "Block",
													"src": "3348:118:10",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2018,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "3449:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2019,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2010,
																	"src": "3453:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3449:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2014,
															"id": 2021,
															"nodeType": "Return",
															"src": "3442:12:10"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2024,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "3557:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3562:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3557:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2028,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2008,
																			"src": "3571:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3575:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3571:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2031,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3570:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2032,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2010,
																"src": "3580:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3570:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3584:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3570:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3557:28:10",
													"trueExpression": {
														"hexValue": "30",
														"id": 2027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3566:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2014,
												"id": 2037,
												"nodeType": "Return",
												"src": "3550:35:10"
											}
										]
									},
									"documentation": {
										"id": 2006,
										"nodeType": "StructuredDocumentation",
										"src": "3033:215:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3263:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3279:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "3271:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3271:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3290:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "3282:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3282:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3270:22:10"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "3316:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:10"
									},
									"scope": 2831,
									"src": "3254:339:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2164,
										"nodeType": "Block",
										"src": "4023:4097:10",
										"statements": [
											{
												"id": 2163,
												"nodeType": "UncheckedBlock",
												"src": "4034:4079:10",
												"statements": [
													{
														"assignments": [
															2052
														],
														"declarations": [
															{
																"constant": false,
																"id": 2052,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4367:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2163,
																"src": "4359:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2051,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4359:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2056,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2053,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2042,
																"src": "4375:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2054,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2044,
																"src": "4379:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4375:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4359:21:10"
													},
													{
														"assignments": [
															2058
														],
														"declarations": [
															{
																"constant": false,
																"id": 2058,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4448:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2163,
																"src": "4440:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2057,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4440:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2059,
														"nodeType": "VariableDeclarationStatement",
														"src": "4440:13:10"
													},
													{
														"AST": {
															"nativeSrc": "4521:125:10",
															"nodeType": "YulBlock",
															"src": "4521:125:10",
															"statements": [
																{
																	"nativeSrc": "4540:30:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4557:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4557:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4560:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4560:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4567:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4567:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4563:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4563:3:10"
																				},
																				"nativeSrc": "4563:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4563:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4550:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4550:6:10"
																		},
																		"nativeSrc": "4550:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4550:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4544:2:10",
																			"nodeType": "YulTypedName",
																			"src": "4544:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4588:43:10",
																	"nodeType": "YulAssignment",
																	"src": "4588:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4605:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4605:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4609:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4609:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4601:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4601:3:10"
																				},
																				"nativeSrc": "4601:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4601:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4620:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4620:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4624:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4624:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4617:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "4617:2:10"
																				},
																				"nativeSrc": "4617:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4617:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4597:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4597:3:10"
																		},
																		"nativeSrc": "4597:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4597:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4588:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4588:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "4609:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "4624:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2058,
																"isOffset": false,
																"isSlot": false,
																"src": "4588:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2042,
																"isOffset": false,
																"isSlot": false,
																"src": "4557:1:10",
																"valueSize": 1
															},
															{
																"declaration": 2044,
																"isOffset": false,
																"isSlot": false,
																"src": "4560:1:10",
																"valueSize": 1
															}
														],
														"id": 2060,
														"nodeType": "InlineAssembly",
														"src": "4512:134:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2061,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2058,
																"src": "4730:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4739:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4730:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2069,
														"nodeType": "IfStatement",
														"src": "4726:373:10",
														"trueBody": {
															"id": 2068,
															"nodeType": "Block",
															"src": "4742:357:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2064,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2052,
																			"src": "5064:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2065,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2046,
																			"src": "5072:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5064:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2050,
																	"id": 2067,
																	"nodeType": "Return",
																	"src": "5057:26:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2070,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2046,
																"src": "5208:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2071,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2058,
																"src": "5223:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5208:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2077,
														"nodeType": "IfStatement",
														"src": "5204:90:10",
														"trueBody": {
															"id": 2076,
															"nodeType": "Block",
															"src": "5230:64:10",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2073,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1783,
																			"src": "5256:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5256:22:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2075,
																	"nodeType": "RevertStatement",
																	"src": "5249:29:10"
																}
															]
														}
													},
													{
														"assignments": [
															2079
														],
														"declarations": [
															{
																"constant": false,
																"id": 2079,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5564:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 2163,
																"src": "5556:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2078,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5556:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2080,
														"nodeType": "VariableDeclarationStatement",
														"src": "5556:17:10"
													},
													{
														"AST": {
															"nativeSrc": "5597:298:10",
															"nodeType": "YulBlock",
															"src": "5597:298:10",
															"statements": [
																{
																	"nativeSrc": "5668:38:10",
																	"nodeType": "YulAssignment",
																	"src": "5668:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5688:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5688:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5691:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5691:1:10"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5694:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "5694:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5681:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5681:6:10"
																		},
																		"nativeSrc": "5681:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5681:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5668:9:10",
																			"nodeType": "YulIdentifier",
																			"src": "5668:9:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5791:41:10",
																	"nodeType": "YulAssignment",
																	"src": "5791:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5804:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5804:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5814:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5814:9:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5825:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5825:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5811:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "5811:2:10"
																				},
																				"nativeSrc": "5811:20:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5811:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5800:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5800:3:10"
																		},
																		"nativeSrc": "5800:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5800:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5791:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5791:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5850:30:10",
																	"nodeType": "YulAssignment",
																	"src": "5850:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5863:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5863:5:10"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5870:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5870:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5859:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5859:3:10"
																		},
																		"nativeSrc": "5859:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5859:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5850:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5850:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2046,
																"isOffset": false,
																"isSlot": false,
																"src": "5694:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "5825:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "5850:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "5863:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2058,
																"isOffset": false,
																"isSlot": false,
																"src": "5791:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2058,
																"isOffset": false,
																"isSlot": false,
																"src": "5804:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "5668:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "5814:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "5870:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2042,
																"isOffset": false,
																"isSlot": false,
																"src": "5688:1:10",
																"valueSize": 1
															},
															{
																"declaration": 2044,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:1:10",
																"valueSize": 1
															}
														],
														"id": 2081,
														"nodeType": "InlineAssembly",
														"src": "5588:307:10"
													},
													{
														"assignments": [
															2083
														],
														"declarations": [
															{
																"constant": false,
																"id": 2083,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "6112:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 2163,
																"src": "6104:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2082,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6104:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2090,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2084,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2046,
																"src": "6119:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6134:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2086,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2046,
																			"src": "6138:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6134:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2088,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6133:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6119:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6104:46:10"
													},
													{
														"AST": {
															"nativeSrc": "6174:371:10",
															"nodeType": "YulBlock",
															"src": "6174:371:10",
															"statements": [
																{
																	"nativeSrc": "6241:37:10",
																	"nodeType": "YulAssignment",
																	"src": "6241:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6260:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "6260:11:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6273:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6273:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6256:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6256:3:10"
																		},
																		"nativeSrc": "6256:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6256:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6241:11:10",
																			"nodeType": "YulIdentifier",
																			"src": "6241:11:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6348:25:10",
																	"nodeType": "YulAssignment",
																	"src": "6348:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6361:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6361:5:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6368:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6368:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6357:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6357:3:10"
																		},
																		"nativeSrc": "6357:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6357:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6348:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "6348:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6491:39:10",
																	"nodeType": "YulAssignment",
																	"src": "6491:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6511:1:10",
																								"nodeType": "YulLiteral",
																								"src": "6511:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6514:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "6514:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6507:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "6507:3:10"
																						},
																						"nativeSrc": "6507:12:10",
																						"nodeType": "YulFunctionCall",
																						"src": "6507:12:10"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6521:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "6521:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6503:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6503:3:10"
																				},
																				"nativeSrc": "6503:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6503:23:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6528:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6528:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6499:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6499:3:10"
																		},
																		"nativeSrc": "6499:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6499:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6491:4:10",
																			"nodeType": "YulIdentifier",
																			"src": "6491:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2046,
																"isOffset": false,
																"isSlot": false,
																"src": "6241:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2046,
																"isOffset": false,
																"isSlot": false,
																"src": "6260:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "6348:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "6361:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6273:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6368:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6491:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6514:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6521:4:10",
																"valueSize": 1
															}
														],
														"id": 2091,
														"nodeType": "InlineAssembly",
														"src": "6165:380:10"
													},
													{
														"expression": {
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2092,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2052,
																"src": "6614:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2093,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "6623:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2094,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2083,
																	"src": "6631:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6623:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6614:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2097,
														"nodeType": "ExpressionStatement",
														"src": "6614:21:10"
													},
													{
														"assignments": [
															2099
														],
														"declarations": [
															{
																"constant": false,
																"id": 2099,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6966:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 2163,
																"src": "6958:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2098,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6958:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2106,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6977:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2101,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2046,
																			"src": "6981:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6977:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6976:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6996:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6976:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6958:39:10"
													},
													{
														"expression": {
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2107,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7218:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7229:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2109,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7233:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2110,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7247:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7233:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7229:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7218:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2114,
														"nodeType": "ExpressionStatement",
														"src": "7218:36:10"
													},
													{
														"expression": {
															"id": 2121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2115,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7288:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7299:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2117,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7303:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2118,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7317:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7303:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7299:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7288:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2122,
														"nodeType": "ExpressionStatement",
														"src": "7288:36:10"
													},
													{
														"expression": {
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2123,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7359:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7370:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2125,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7374:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2126,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7388:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7374:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7370:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7359:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2130,
														"nodeType": "ExpressionStatement",
														"src": "7359:36:10"
													},
													{
														"expression": {
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2131,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7430:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7441:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2133,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7445:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2134,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7459:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7445:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7441:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7430:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2138,
														"nodeType": "ExpressionStatement",
														"src": "7430:36:10"
													},
													{
														"expression": {
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2139,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7501:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7512:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2141,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7516:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2142,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7530:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7516:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7512:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7501:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2146,
														"nodeType": "ExpressionStatement",
														"src": "7501:36:10"
													},
													{
														"expression": {
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2147,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7573:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7584:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2149,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7588:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2150,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7602:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7588:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7584:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7573:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2154,
														"nodeType": "ExpressionStatement",
														"src": "7573:36:10"
													},
													{
														"expression": {
															"id": 2159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2155,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2049,
																"src": "8049:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2156,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2052,
																	"src": "8058:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2157,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "8066:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8058:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8049:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2160,
														"nodeType": "ExpressionStatement",
														"src": "8049:24:10"
													},
													{
														"expression": {
															"id": 2161,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "8095:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2050,
														"id": 2162,
														"nodeType": "Return",
														"src": "8088:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2040,
										"nodeType": "StructuredDocumentation",
										"src": "3601:318:10",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3934:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3949:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "3941:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3941:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3960:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "3952:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3952:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3971:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "3963:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3963:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3940:43:10"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4015:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "4007:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4007:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4006:16:10"
									},
									"scope": 2831,
									"src": "3925:4195:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2207,
										"nodeType": "Block",
										"src": "8367:198:10",
										"statements": [
											{
												"assignments": [
													2181
												],
												"declarations": [
													{
														"constant": false,
														"id": 2181,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8386:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2207,
														"src": "8378:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2180,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8378:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2187,
												"initialValue": {
													"arguments": [
														{
															"id": 2183,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "8402:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2184,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2170,
															"src": "8405:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2185,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "8408:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2182,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2165,
															2208
														],
														"referencedDeclaration": 2165,
														"src": "8395:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8395:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8378:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2189,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2175,
																"src": "8452:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1788",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1788",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2188,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2830,
															"src": "8435:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1788_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8435:26:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2192,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2168,
																	"src": "8472:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2193,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "8475:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2194,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2172,
																	"src": "8478:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2191,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8465:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8465:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8493:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8465:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8435:59:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2204,
												"nodeType": "IfStatement",
												"src": "8431:103:10",
												"trueBody": {
													"id": 2203,
													"nodeType": "Block",
													"src": "8496:38:10",
													"statements": [
														{
															"expression": {
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2199,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2181,
																	"src": "8511:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8521:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8511:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2202,
															"nodeType": "ExpressionStatement",
															"src": "8511:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2205,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2181,
													"src": "8551:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2179,
												"id": 2206,
												"nodeType": "Return",
												"src": "8544:13:10"
											}
										]
									},
									"documentation": {
										"id": 2166,
										"nodeType": "StructuredDocumentation",
										"src": "8128:123:10",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8266:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8281:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "8273:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8273:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8292:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "8284:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8284:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8303:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "8295:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8295:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8325:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "8316:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2174,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2173,
														"name": "Rounding",
														"nameLocations": [
															"8316:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "8316:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "8316:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8272:62:10"
									},
									"returnParameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "8358:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8358:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8357:9:10"
									},
									"scope": 2831,
									"src": "8257:308:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2319,
										"nodeType": "Block",
										"src": "8864:1616:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2216,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "8879:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8884:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8879:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2222,
												"nodeType": "IfStatement",
												"src": "8875:47:10",
												"trueBody": {
													"id": 2221,
													"nodeType": "Block",
													"src": "8887:35:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8909:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2215,
															"id": 2220,
															"nodeType": "Return",
															"src": "8902:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													2224
												],
												"declarations": [
													{
														"constant": false,
														"id": 2224,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9621:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2319,
														"src": "9613:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2223,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9613:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2233,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9630:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2227,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2211,
																			"src": "9641:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2226,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2487,
																			2522
																		],
																		"referencedDeclaration": 2487,
																		"src": "9636:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9636:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9647:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9636:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2231,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9635:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9630:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9613:36:10"
											},
											{
												"id": 2318,
												"nodeType": "UncheckedBlock",
												"src": "10056:417:10",
												"statements": [
													{
														"expression": {
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2234,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "10081:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2235,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "10091:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2236,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10100:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2237,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10104:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10100:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10091:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2240,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10090:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10115:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10090:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10081:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2244,
														"nodeType": "ExpressionStatement",
														"src": "10081:35:10"
													},
													{
														"expression": {
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2245,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "10131:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2246,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "10141:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2247,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10150:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2248,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10154:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10150:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10141:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2251,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10140:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10165:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10140:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10131:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2255,
														"nodeType": "ExpressionStatement",
														"src": "10131:35:10"
													},
													{
														"expression": {
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2256,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "10181:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2257,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "10191:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2260,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2258,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10200:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2259,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10204:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10200:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10191:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2262,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10190:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10215:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10190:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10181:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2266,
														"nodeType": "ExpressionStatement",
														"src": "10181:35:10"
													},
													{
														"expression": {
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2267,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "10231:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2268,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "10241:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2271,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2269,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10250:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2270,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10254:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10250:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10241:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2273,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10240:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10265:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10240:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10231:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2277,
														"nodeType": "ExpressionStatement",
														"src": "10231:35:10"
													},
													{
														"expression": {
															"id": 2287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2278,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "10281:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2279,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "10291:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2282,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2280,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10300:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2281,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10304:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10300:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10291:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2284,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10290:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10315:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10290:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10281:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2288,
														"nodeType": "ExpressionStatement",
														"src": "10281:35:10"
													},
													{
														"expression": {
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2289,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "10331:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2290,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "10341:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2293,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2291,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10350:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2292,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10354:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10350:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10341:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2295,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10340:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10365:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10340:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10331:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2299,
														"nodeType": "ExpressionStatement",
														"src": "10331:35:10"
													},
													{
														"expression": {
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2300,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "10381:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2301,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "10391:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2304,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2302,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10400:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2303,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10404:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10400:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10391:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2306,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10390:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10415:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10390:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10381:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2310,
														"nodeType": "ExpressionStatement",
														"src": "10381:35:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2312,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2224,
																	"src": "10442:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2313,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2211,
																		"src": "10450:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2314,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2224,
																		"src": "10454:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10450:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2311,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1982,
																"src": "10438:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10438:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2215,
														"id": 2317,
														"nodeType": "Return",
														"src": "10431:30:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2209,
										"nodeType": "StructuredDocumentation",
										"src": "8573:228:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8816:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8829:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "8821:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8821:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8820:11:10"
									},
									"returnParameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "8855:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:9:10"
									},
									"scope": 2831,
									"src": "8807:1673:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2354,
										"nodeType": "Block",
										"src": "10661:169:10",
										"statements": [
											{
												"id": 2353,
												"nodeType": "UncheckedBlock",
												"src": "10672:151:10",
												"statements": [
													{
														"assignments": [
															2332
														],
														"declarations": [
															{
																"constant": false,
																"id": 2332,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10705:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2353,
																"src": "10697:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2331,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10697:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2336,
														"initialValue": {
															"arguments": [
																{
																	"id": 2334,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2323,
																	"src": "10719:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2333,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2320,
																	2355
																],
																"referencedDeclaration": 2320,
																"src": "10714:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10714:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10697:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2337,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2332,
																"src": "10743:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2339,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2326,
																						"src": "10770:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2338,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2830,
																					"src": "10753:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1788_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2340,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10753:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2343,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2341,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2332,
																						"src": "10783:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2342,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2332,
																						"src": "10792:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10783:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2344,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2323,
																					"src": "10801:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10783:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10753:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10809:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10753:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10805:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2350,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10752:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10743:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2330,
														"id": 2352,
														"nodeType": "Return",
														"src": "10736:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2321,
										"nodeType": "StructuredDocumentation",
										"src": "10488:91:10",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10594:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10607:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "10599:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10599:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10619:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "10610:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2325,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2324,
														"name": "Rounding",
														"nameLocations": [
															"10610:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "10610:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "10610:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10598:30:10"
									},
									"returnParameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "10652:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:9:10"
									},
									"scope": 2831,
									"src": "10585:245:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2486,
										"nodeType": "Block",
										"src": "11027:958:10",
										"statements": [
											{
												"assignments": [
													2364
												],
												"declarations": [
													{
														"constant": false,
														"id": 2364,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11046:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2486,
														"src": "11038:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2363,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11038:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2366,
												"initialValue": {
													"hexValue": "30",
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11055:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11038:18:10"
											},
											{
												"id": 2483,
												"nodeType": "UncheckedBlock",
												"src": "11067:887:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2367,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11096:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11105:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11096:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11111:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11096:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2381,
														"nodeType": "IfStatement",
														"src": "11092:102:10",
														"trueBody": {
															"id": 2380,
															"nodeType": "Block",
															"src": "11114:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2372,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11133:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11143:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11133:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2375,
																	"nodeType": "ExpressionStatement",
																	"src": "11133:13:10"
																},
																{
																	"expression": {
																		"id": 2378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2376,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11165:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11175:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11165:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2379,
																	"nodeType": "ExpressionStatement",
																	"src": "11165:13:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2382,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11212:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11221:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11212:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11226:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11212:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2396,
														"nodeType": "IfStatement",
														"src": "11208:99:10",
														"trueBody": {
															"id": 2395,
															"nodeType": "Block",
															"src": "11229:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2387,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11248:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11258:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11248:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2390,
																	"nodeType": "ExpressionStatement",
																	"src": "11248:12:10"
																},
																{
																	"expression": {
																		"id": 2393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2391,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11279:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11289:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11279:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2394,
																	"nodeType": "ExpressionStatement",
																	"src": "11279:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2397,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11325:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11334:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11325:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11339:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11325:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2411,
														"nodeType": "IfStatement",
														"src": "11321:99:10",
														"trueBody": {
															"id": 2410,
															"nodeType": "Block",
															"src": "11342:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2402,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11361:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11371:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11361:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2405,
																	"nodeType": "ExpressionStatement",
																	"src": "11361:12:10"
																},
																{
																	"expression": {
																		"id": 2408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2406,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11392:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11402:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11392:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2409,
																	"nodeType": "ExpressionStatement",
																	"src": "11392:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2412,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11438:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11447:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11438:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11452:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11438:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2426,
														"nodeType": "IfStatement",
														"src": "11434:99:10",
														"trueBody": {
															"id": 2425,
															"nodeType": "Block",
															"src": "11455:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2417,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11474:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11484:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11474:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2420,
																	"nodeType": "ExpressionStatement",
																	"src": "11474:12:10"
																},
																{
																	"expression": {
																		"id": 2423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2421,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11505:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11515:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11505:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2424,
																	"nodeType": "ExpressionStatement",
																	"src": "11505:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2427,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11551:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11560:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11551:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11564:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11551:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2441,
														"nodeType": "IfStatement",
														"src": "11547:96:10",
														"trueBody": {
															"id": 2440,
															"nodeType": "Block",
															"src": "11567:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2432,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11586:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11596:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11586:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2435,
																	"nodeType": "ExpressionStatement",
																	"src": "11586:11:10"
																},
																{
																	"expression": {
																		"id": 2438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2436,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11616:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11626:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11616:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2439,
																	"nodeType": "ExpressionStatement",
																	"src": "11616:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2442,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11661:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11670:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11661:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11674:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11661:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2456,
														"nodeType": "IfStatement",
														"src": "11657:96:10",
														"trueBody": {
															"id": 2455,
															"nodeType": "Block",
															"src": "11677:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2447,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11696:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11706:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11696:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2450,
																	"nodeType": "ExpressionStatement",
																	"src": "11696:11:10"
																},
																{
																	"expression": {
																		"id": 2453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2451,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11726:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11736:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11726:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2454,
																	"nodeType": "ExpressionStatement",
																	"src": "11726:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2457,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11771:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11780:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11771:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11784:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11771:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2471,
														"nodeType": "IfStatement",
														"src": "11767:96:10",
														"trueBody": {
															"id": 2470,
															"nodeType": "Block",
															"src": "11787:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2462,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11806:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11816:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11806:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2465,
																	"nodeType": "ExpressionStatement",
																	"src": "11806:11:10"
																},
																{
																	"expression": {
																		"id": 2468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2466,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11836:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11846:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11836:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2469,
																	"nodeType": "ExpressionStatement",
																	"src": "11836:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2472,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11881:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11890:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11881:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11894:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11881:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2482,
														"nodeType": "IfStatement",
														"src": "11877:66:10",
														"trueBody": {
															"id": 2481,
															"nodeType": "Block",
															"src": "11897:46:10",
															"statements": [
																{
																	"expression": {
																		"id": 2479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2477,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11916:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11926:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11916:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2480,
																	"nodeType": "ExpressionStatement",
																	"src": "11916:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2484,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2364,
													"src": "11971:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2362,
												"id": 2485,
												"nodeType": "Return",
												"src": "11964:13:10"
											}
										]
									},
									"documentation": {
										"id": 2356,
										"nodeType": "StructuredDocumentation",
										"src": "10838:122:10",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10975:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10988:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "10980:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10980:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10979:15:10"
									},
									"returnParameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "11018:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11018:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11017:9:10"
									},
									"scope": 2831,
									"src": "10966:1019:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2521,
										"nodeType": "Block",
										"src": "12224:173:10",
										"statements": [
											{
												"id": 2520,
												"nodeType": "UncheckedBlock",
												"src": "12235:155:10",
												"statements": [
													{
														"assignments": [
															2499
														],
														"declarations": [
															{
																"constant": false,
																"id": 2499,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12268:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2520,
																"src": "12260:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2498,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12260:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2503,
														"initialValue": {
															"arguments": [
																{
																	"id": 2501,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2490,
																	"src": "12282:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2500,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2487,
																	2522
																],
																"referencedDeclaration": 2487,
																"src": "12277:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12277:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12260:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2504,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2499,
																"src": "12310:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2506,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2493,
																						"src": "12337:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2505,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2830,
																					"src": "12320:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1788_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12320:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2510,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2508,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12350:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2509,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2499,
																						"src": "12355:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12350:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2511,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2490,
																					"src": "12364:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12350:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12320:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12376:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12320:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12372:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2517,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12319:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12310:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2497,
														"id": 2519,
														"nodeType": "Return",
														"src": "12303:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2488,
										"nodeType": "StructuredDocumentation",
										"src": "11993:145:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "12153:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12166:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "12158:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12158:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12182:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "12173:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2492,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2491,
														"name": "Rounding",
														"nameLocations": [
															"12173:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "12173:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "12173:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12157:34:10"
									},
									"returnParameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "12215:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12215:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12214:9:10"
									},
									"scope": 2831,
									"src": "12144:253:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2650,
										"nodeType": "Block",
										"src": "12596:886:10",
										"statements": [
											{
												"assignments": [
													2531
												],
												"declarations": [
													{
														"constant": false,
														"id": 2531,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12615:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2650,
														"src": "12607:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2530,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12607:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2533,
												"initialValue": {
													"hexValue": "30",
													"id": 2532,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12624:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12607:18:10"
											},
											{
												"id": 2647,
												"nodeType": "UncheckedBlock",
												"src": "12636:815:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2534,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "12665:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12674:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12680:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12674:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12665:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2550,
														"nodeType": "IfStatement",
														"src": "12661:106:10",
														"trueBody": {
															"id": 2549,
															"nodeType": "Block",
															"src": "12684:83:10",
															"statements": [
																{
																	"expression": {
																		"id": 2543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2539,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "12703:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12712:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12718:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12712:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12703:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2544,
																	"nodeType": "ExpressionStatement",
																	"src": "12703:17:10"
																},
																{
																	"expression": {
																		"id": 2547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2545,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "12739:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12749:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12739:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2548,
																	"nodeType": "ExpressionStatement",
																	"src": "12739:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2551,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "12785:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12794:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12800:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12794:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12785:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2567,
														"nodeType": "IfStatement",
														"src": "12781:106:10",
														"trueBody": {
															"id": 2566,
															"nodeType": "Block",
															"src": "12804:83:10",
															"statements": [
																{
																	"expression": {
																		"id": 2560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2556,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "12823:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12832:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12838:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12832:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12823:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2561,
																	"nodeType": "ExpressionStatement",
																	"src": "12823:17:10"
																},
																{
																	"expression": {
																		"id": 2564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2562,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "12859:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12869:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12859:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2565,
																	"nodeType": "ExpressionStatement",
																	"src": "12859:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2568,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "12905:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12914:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12920:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12914:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12905:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2584,
														"nodeType": "IfStatement",
														"src": "12901:106:10",
														"trueBody": {
															"id": 2583,
															"nodeType": "Block",
															"src": "12924:83:10",
															"statements": [
																{
																	"expression": {
																		"id": 2577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2573,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "12943:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12952:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2575,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12952:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12943:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2578,
																	"nodeType": "ExpressionStatement",
																	"src": "12943:17:10"
																},
																{
																	"expression": {
																		"id": 2581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2579,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "12979:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12989:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12979:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2582,
																	"nodeType": "ExpressionStatement",
																	"src": "12979:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2585,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "13025:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13034:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13040:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "13034:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "13025:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2601,
														"nodeType": "IfStatement",
														"src": "13021:103:10",
														"trueBody": {
															"id": 2600,
															"nodeType": "Block",
															"src": "13043:81:10",
															"statements": [
																{
																	"expression": {
																		"id": 2594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2590,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "13062:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13071:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2592,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13077:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "13071:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "13062:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2595,
																	"nodeType": "ExpressionStatement",
																	"src": "13062:16:10"
																},
																{
																	"expression": {
																		"id": 2598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2596,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "13097:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13107:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "13097:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2599,
																	"nodeType": "ExpressionStatement",
																	"src": "13097:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2602,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "13142:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13151:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13157:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "13151:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "13142:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2618,
														"nodeType": "IfStatement",
														"src": "13138:103:10",
														"trueBody": {
															"id": 2617,
															"nodeType": "Block",
															"src": "13160:81:10",
															"statements": [
																{
																	"expression": {
																		"id": 2611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2607,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "13179:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2608,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13188:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13194:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "13188:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "13179:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2612,
																	"nodeType": "ExpressionStatement",
																	"src": "13179:16:10"
																},
																{
																	"expression": {
																		"id": 2615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2613,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "13214:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13224:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "13214:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2616,
																	"nodeType": "ExpressionStatement",
																	"src": "13214:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2619,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "13259:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13268:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13274:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "13268:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "13259:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2635,
														"nodeType": "IfStatement",
														"src": "13255:103:10",
														"trueBody": {
															"id": 2634,
															"nodeType": "Block",
															"src": "13277:81:10",
															"statements": [
																{
																	"expression": {
																		"id": 2628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2624,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "13296:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2625,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13305:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2626,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13311:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "13305:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "13296:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2629,
																	"nodeType": "ExpressionStatement",
																	"src": "13296:16:10"
																},
																{
																	"expression": {
																		"id": 2632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2630,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "13331:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13341:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "13331:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2633,
																	"nodeType": "ExpressionStatement",
																	"src": "13331:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2636,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "13376:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13385:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13391:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13385:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13376:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2646,
														"nodeType": "IfStatement",
														"src": "13372:68:10",
														"trueBody": {
															"id": 2645,
															"nodeType": "Block",
															"src": "13394:46:10",
															"statements": [
																{
																	"expression": {
																		"id": 2643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2641,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "13413:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13423:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13413:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2644,
																	"nodeType": "ExpressionStatement",
																	"src": "13413:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2648,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2531,
													"src": "13468:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2529,
												"id": 2649,
												"nodeType": "Return",
												"src": "13461:13:10"
											}
										]
									},
									"documentation": {
										"id": 2523,
										"nodeType": "StructuredDocumentation",
										"src": "12405:123:10",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12543:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12557:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "12549:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12549:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12548:15:10"
									},
									"returnParameters": {
										"id": 2529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "12587:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12587:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12586:9:10"
									},
									"scope": 2831,
									"src": "12534:948:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2685,
										"nodeType": "Block",
										"src": "13723:175:10",
										"statements": [
											{
												"id": 2684,
												"nodeType": "UncheckedBlock",
												"src": "13734:157:10",
												"statements": [
													{
														"assignments": [
															2663
														],
														"declarations": [
															{
																"constant": false,
																"id": 2663,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13767:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2684,
																"src": "13759:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2662,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13759:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2667,
														"initialValue": {
															"arguments": [
																{
																	"id": 2665,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2654,
																	"src": "13782:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2664,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2651,
																	2686
																],
																"referencedDeclaration": 2651,
																"src": "13776:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13776:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13759:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2668,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2663,
																"src": "13810:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2670,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2657,
																						"src": "13837:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2669,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2830,
																					"src": "13820:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1788_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2671,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13820:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2676,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2674,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2672,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13850:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2673,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2663,
																						"src": "13856:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13850:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2675,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2654,
																					"src": "13865:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13850:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13820:50:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13877:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13820:58:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13873:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2681,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13819:60:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13810:69:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2661,
														"id": 2683,
														"nodeType": "Return",
														"src": "13803:76:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2652,
										"nodeType": "StructuredDocumentation",
										"src": "13490:146:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13651:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13665:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "13657:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13657:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13681:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "13672:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2656,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2655,
														"name": "Rounding",
														"nameLocations": [
															"13672:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "13672:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "13672:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13656:34:10"
									},
									"returnParameters": {
										"id": 2661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "13714:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13714:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13713:9:10"
									},
									"scope": 2831,
									"src": "13642:256:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2772,
										"nodeType": "Block",
										"src": "14226:624:10",
										"statements": [
											{
												"assignments": [
													2695
												],
												"declarations": [
													{
														"constant": false,
														"id": 2695,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "14245:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2772,
														"src": "14237:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2694,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14237:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2697,
												"initialValue": {
													"hexValue": "30",
													"id": 2696,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14254:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14237:18:10"
											},
											{
												"id": 2769,
												"nodeType": "UncheckedBlock",
												"src": "14266:553:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2698,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "14295:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14304:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "14295:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14310:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14295:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2712,
														"nodeType": "IfStatement",
														"src": "14291:101:10",
														"trueBody": {
															"id": 2711,
															"nodeType": "Block",
															"src": "14313:79:10",
															"statements": [
																{
																	"expression": {
																		"id": 2705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2703,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "14332:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14342:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "14332:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2706,
																	"nodeType": "ExpressionStatement",
																	"src": "14332:13:10"
																},
																{
																	"expression": {
																		"id": 2709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2707,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "14364:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14374:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14364:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2710,
																	"nodeType": "ExpressionStatement",
																	"src": "14364:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2713,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "14410:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14419:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14410:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14424:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14410:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2727,
														"nodeType": "IfStatement",
														"src": "14406:98:10",
														"trueBody": {
															"id": 2726,
															"nodeType": "Block",
															"src": "14427:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2718,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "14446:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14456:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14446:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2721,
																	"nodeType": "ExpressionStatement",
																	"src": "14446:12:10"
																},
																{
																	"expression": {
																		"id": 2724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2722,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "14477:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14487:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14477:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2725,
																	"nodeType": "ExpressionStatement",
																	"src": "14477:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2728,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "14522:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14531:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14522:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14536:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14522:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2742,
														"nodeType": "IfStatement",
														"src": "14518:98:10",
														"trueBody": {
															"id": 2741,
															"nodeType": "Block",
															"src": "14539:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2733,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "14558:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14568:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14558:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2736,
																	"nodeType": "ExpressionStatement",
																	"src": "14558:12:10"
																},
																{
																	"expression": {
																		"id": 2739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2737,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "14589:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14599:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14589:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2740,
																	"nodeType": "ExpressionStatement",
																	"src": "14589:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2743,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "14634:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14643:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14634:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14648:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14634:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2757,
														"nodeType": "IfStatement",
														"src": "14630:98:10",
														"trueBody": {
															"id": 2756,
															"nodeType": "Block",
															"src": "14651:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2748,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "14670:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14680:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14670:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2751,
																	"nodeType": "ExpressionStatement",
																	"src": "14670:12:10"
																},
																{
																	"expression": {
																		"id": 2754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2752,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "14701:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14711:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14701:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2755,
																	"nodeType": "ExpressionStatement",
																	"src": "14701:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2758,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "14746:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14755:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14746:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14759:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14746:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2768,
														"nodeType": "IfStatement",
														"src": "14742:66:10",
														"trueBody": {
															"id": 2767,
															"nodeType": "Block",
															"src": "14762:46:10",
															"statements": [
																{
																	"expression": {
																		"id": 2765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2763,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "14781:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14791:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14781:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2766,
																	"nodeType": "ExpressionStatement",
																	"src": "14781:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2770,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2695,
													"src": "14836:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2693,
												"id": 2771,
												"nodeType": "Return",
												"src": "14829:13:10"
											}
										]
									},
									"documentation": {
										"id": 2687,
										"nodeType": "StructuredDocumentation",
										"src": "13906:251:10",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14172:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14187:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "14179:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14179:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14178:15:10"
									},
									"returnParameters": {
										"id": 2693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "14217:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14217:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14216:9:10"
									},
									"scope": 2831,
									"src": "14163:687:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2810,
										"nodeType": "Block",
										"src": "15093:182:10",
										"statements": [
											{
												"id": 2809,
												"nodeType": "UncheckedBlock",
												"src": "15104:164:10",
												"statements": [
													{
														"assignments": [
															2785
														],
														"declarations": [
															{
																"constant": false,
																"id": 2785,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "15137:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2809,
																"src": "15129:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2784,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15129:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2789,
														"initialValue": {
															"arguments": [
																{
																	"id": 2787,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2776,
																	"src": "15153:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2786,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2773,
																	2811
																],
																"referencedDeclaration": 2773,
																"src": "15146:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15146:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15129:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2790,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2785,
																"src": "15181:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2792,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2779,
																						"src": "15208:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2791,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2830,
																					"src": "15191:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1788_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2793,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15191:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2799,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2794,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15221:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2797,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2795,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2785,
																									"src": "15227:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2796,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "15237:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "15227:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2798,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "15226:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15221:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2800,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2776,
																					"src": "15242:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15221:26:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "15191:56:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15254:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "15191:64:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15250:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2806,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15190:66:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "15181:75:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2783,
														"id": 2808,
														"nodeType": "Return",
														"src": "15174:82:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2774,
										"nodeType": "StructuredDocumentation",
										"src": "14858:147:10",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "15020:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15035:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2811,
												"src": "15027:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15027:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2779,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15051:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2811,
												"src": "15042:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2778,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2777,
														"name": "Rounding",
														"nameLocations": [
															"15042:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "15042:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "15042:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15026:34:10"
									},
									"returnParameters": {
										"id": 2783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2811,
												"src": "15084:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15084:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15083:9:10"
									},
									"scope": 2831,
									"src": "15011:264:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2829,
										"nodeType": "Block",
										"src": "15478:50:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2822,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2815,
																	"src": "15502:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1788",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1788",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15496:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2820,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15496:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15496:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15514:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15496:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15519:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15496:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2819,
												"id": 2828,
												"nodeType": "Return",
												"src": "15489:31:10"
											}
										]
									},
									"documentation": {
										"id": 2812,
										"nodeType": "StructuredDocumentation",
										"src": "15283:115:10",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15413:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15439:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "15430:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2814,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2813,
														"name": "Rounding",
														"nameLocations": [
															"15430:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "15430:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "15430:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15429:19:10"
									},
									"returnParameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "15472:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15472:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15471:6:10"
									},
									"scope": 2831,
									"src": "15404:124:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2832,
							"src": "211:15320:10",
							"usedErrors": [
								1783
							],
							"usedEvents": []
						}
					],
					"src": "106:15427:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2936
						]
					},
					"id": 2937,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2833,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2834,
								"nodeType": "StructuredDocumentation",
								"src": "140:82:11",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2936,
							"linearizedBaseContracts": [
								2936
							],
							"name": "SignedMath",
							"nameLocation": "232:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2851,
										"nodeType": "Block",
										"src": "388:39:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2844,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2837,
															"src": "406:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2845,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2839,
															"src": "410:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "406:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2848,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2839,
														"src": "418:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "406:13:11",
													"trueExpression": {
														"id": 2847,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2837,
														"src": "414:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2843,
												"id": 2850,
												"nodeType": "Return",
												"src": "399:20:11"
											}
										]
									},
									"documentation": {
										"id": 2835,
										"nodeType": "StructuredDocumentation",
										"src": "250:68:11",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "333:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2837,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "344:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2852,
												"src": "337:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2836,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "354:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2852,
												"src": "347:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2838,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "347:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:20:11"
									},
									"returnParameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2852,
												"src": "380:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2841,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "380:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:8:11"
									},
									"scope": 2936,
									"src": "324:103:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2869,
										"nodeType": "Block",
										"src": "574:39:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2862,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2855,
															"src": "592:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2863,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2857,
															"src": "596:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "592:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2866,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2857,
														"src": "604:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "592:13:11",
													"trueExpression": {
														"id": 2865,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2855,
														"src": "600:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2861,
												"id": 2868,
												"nodeType": "Return",
												"src": "585:20:11"
											}
										]
									},
									"documentation": {
										"id": 2853,
										"nodeType": "StructuredDocumentation",
										"src": "435:69:11",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "519:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2855,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "530:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "523:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2854,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "523:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "540:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "533:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2856,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "533:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:20:11"
									},
									"returnParameters": {
										"id": 2861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "566:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2859,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "566:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "565:8:11"
									},
									"scope": 2936,
									"src": "510:103:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2913,
										"nodeType": "Block",
										"src": "824:166:11",
										"statements": [
											{
												"assignments": [
													2881
												],
												"declarations": [
													{
														"constant": false,
														"id": 2881,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "895:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 2913,
														"src": "888:8:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2880,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "888:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2894,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2882,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2873,
																	"src": "900:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2883,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2875,
																	"src": "904:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "900:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2885,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "899:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2886,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2873,
																				"src": "911:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2887,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2875,
																				"src": "915:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "911:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2889,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "910:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "921:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "910:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2892,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "909:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "899:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "888:35:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2895,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2881,
														"src": "941:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2900,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2881,
																						"src": "961:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2899,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "953:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2898,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "953:7:11",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2901,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "953:10:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2902,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "967:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "953:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "946:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2896,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "946:6:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "946:25:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2905,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2873,
																				"src": "975:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2906,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2875,
																				"src": "979:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "975:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2908,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "974:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "946:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2910,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "945:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "941:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2879,
												"id": 2912,
												"nodeType": "Return",
												"src": "934:48:11"
											}
										]
									},
									"documentation": {
										"id": 2871,
										"nodeType": "StructuredDocumentation",
										"src": "621:129:11",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "765:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "780:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "773:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2872,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "773:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "790:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "783:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2874,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "783:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:20:11"
									},
									"returnParameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "816:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2877,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "816:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "815:8:11"
									},
									"scope": 2936,
									"src": "756:234:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2934,
										"nodeType": "Block",
										"src": "1139:163:11",
										"statements": [
											{
												"id": 2933,
												"nodeType": "UncheckedBlock",
												"src": "1150:145:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2924,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2917,
																			"src": "1267:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1272:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1267:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1280:2:11",
																		"subExpression": {
																			"id": 2928,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2917,
																			"src": "1281:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1267:15:11",
																	"trueExpression": {
																		"id": 2927,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2917,
																		"src": "1276:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1259:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2922,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1259:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1259:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2921,
														"id": 2932,
														"nodeType": "Return",
														"src": "1252:31:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2915,
										"nodeType": "StructuredDocumentation",
										"src": "998:80:11",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1093:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2917,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1104:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2935,
												"src": "1097:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2916,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1097:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:10:11"
									},
									"returnParameters": {
										"id": 2921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2935,
												"src": "1130:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:9:11"
									},
									"scope": 2936,
									"src": "1084:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2937,
							"src": "224:1081:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:1195:11"
				},
				"id": 11
			},
			"contracts/tokenize.sol": {
				"ast": {
					"absolutePath": "contracts/tokenize.sol",
					"exportedSymbols": {
						"Context": [
							1486
						],
						"ERC165": [
							1765
						],
						"ERC721": [
							1293
						],
						"IERC165": [
							1777
						],
						"IERC721": [
							1410
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1456
						],
						"IERC721Receiver": [
							1428
						],
						"Ownable": [
							147
						],
						"Strings": [
							1741
						],
						"TitleDeedTokenization": [
							3065
						]
					},
					"id": 3066,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2938,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3066,
							"sourceUnit": 1294,
							"src": "61:57:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2940,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3066,
							"sourceUnit": 148,
							"src": "120:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2941,
										"name": "ERC721",
										"nameLocations": [
											"210:6:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1293,
										"src": "210:6:12"
									},
									"id": 2942,
									"nodeType": "InheritanceSpecifier",
									"src": "210:6:12"
								},
								{
									"baseName": {
										"id": 2943,
										"name": "Ownable",
										"nameLocations": [
											"218:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "218:7:12"
									},
									"id": 2944,
									"nodeType": "InheritanceSpecifier",
									"src": "218:7:12"
								}
							],
							"canonicalName": "TitleDeedTokenization",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3065,
							"linearizedBaseContracts": [
								3065,
								147,
								1293,
								237,
								1456,
								1410,
								1765,
								1777,
								1486
							],
							"name": "TitleDeedTokenization",
							"nameLocation": "185:21:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "75794a3c",
									"id": 2946,
									"mutability": "mutable",
									"name": "nextTokenId",
									"nameLocation": "248:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 3065,
									"src": "233:26:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2945,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "233:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "80964805",
									"id": 2950,
									"mutability": "mutable",
									"name": "tokenDocumentHashes",
									"nameLocation": "300:19:12",
									"nodeType": "VariableDeclaration",
									"scope": 3065,
									"src": "266:53:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 2949,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2947,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "274:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "266:26:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2948,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "285:6:12",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1fd8293f",
									"id": 2952,
									"mutability": "mutable",
									"name": "connectedWallet",
									"nameLocation": "341:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 3065,
									"src": "326:30:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2951,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "326:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2964,
										"nodeType": "Block",
										"src": "453:82:12",
										"statements": []
									},
									"id": 2965,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5469746c6544656564546f6b656e",
													"id": 2957,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "406:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_88f8df98ead48bb37bb4eef14defa5afb3cb73bbdf9a67d4e9733667f2801940",
														"typeString": "literal_string \"TitleDeedToken\""
													},
													"value": "TitleDeedToken"
												},
												{
													"hexValue": "544454",
													"id": 2958,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "424:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_1704b82c57cad252ae2ae014b178afce8e403189d3d12e098e6e949b0ca3b2bc",
														"typeString": "literal_string \"TDT\""
													},
													"value": "TDT"
												}
											],
											"id": 2959,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2956,
												"name": "ERC721",
												"nameLocations": [
													"399:6:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1293,
												"src": "399:6:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "399:31:12"
										},
										{
											"arguments": [
												{
													"id": 2961,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2954,
													"src": "439:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2962,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2960,
												"name": "Ownable",
												"nameLocations": [
													"431:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "431:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "431:21:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2954,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "385:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2965,
												"src": "377:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "377:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:22:12"
									},
									"returnParameters": {
										"id": 2963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "453:0:12"
									},
									"scope": 3065,
									"src": "365:170:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2974,
										"nodeType": "Block",
										"src": "597:51:12",
										"statements": [
											{
												"expression": {
													"id": 2972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2970,
														"name": "connectedWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2952,
														"src": "608:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2971,
														"name": "_walletAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2967,
														"src": "626:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "608:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2973,
												"nodeType": "ExpressionStatement",
												"src": "608:32:12"
											}
										]
									},
									"functionSelector": "d7d0df2a",
									"id": 2975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "connectWallet",
									"nameLocation": "552:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2967,
												"mutability": "mutable",
												"name": "_walletAddress",
												"nameLocation": "574:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2975,
												"src": "566:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "565:24:12"
									},
									"returnParameters": {
										"id": 2969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "597:0:12"
									},
									"scope": 3065,
									"src": "543:105:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3002,
										"nodeType": "Block",
										"src": "786:157:12",
										"statements": [
											{
												"assignments": [
													2985
												],
												"declarations": [
													{
														"constant": false,
														"id": 2985,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "805:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 3002,
														"src": "797:15:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2984,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "797:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2987,
												"initialValue": {
													"id": 2986,
													"name": "nextTokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2946,
													"src": "815:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "797:29:12"
											},
											{
												"expression": {
													"id": 2989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "837:13:12",
													"subExpression": {
														"id": 2988,
														"name": "nextTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2946,
														"src": "837:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2990,
												"nodeType": "ExpressionStatement",
												"src": "837:13:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2992,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2977,
															"src": "869:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2993,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2985,
															"src": "873:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2991,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "863:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "863:18:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2995,
												"nodeType": "ExpressionStatement",
												"src": "863:18:12"
											},
											{
												"expression": {
													"id": 3000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2996,
															"name": "tokenDocumentHashes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2950,
															"src": "892:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 2998,
														"indexExpression": {
															"id": 2997,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2985,
															"src": "912:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "892:28:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2999,
														"name": "documentHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2979,
														"src": "923:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "892:43:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3001,
												"nodeType": "ExpressionStatement",
												"src": "892:43:12"
											}
										]
									},
									"functionSelector": "3d02d0c9",
									"id": 3003,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2982,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2981,
												"name": "onlyOwner",
												"nameLocations": [
													"776:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "776:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "776:9:12"
										}
									],
									"name": "mintToken",
									"nameLocation": "719:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2977,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "737:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 3003,
												"src": "729:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2979,
												"mutability": "mutable",
												"name": "documentHash",
												"nameLocation": "755:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 3003,
												"src": "741:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2978,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "741:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:40:12"
									},
									"returnParameters": {
										"id": 2983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "786:0:12"
									},
									"scope": 3065,
									"src": "710:233:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3020,
										"nodeType": "Block",
										"src": "1064:63:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3012,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3005,
																"src": "1097:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 3010,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "1082:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1293_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 3011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1089:7:12",
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 426,
															"src": "1082:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 3013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1082:23:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1117:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1109:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3014,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1109:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 3017,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1109:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1082:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3009,
												"id": 3019,
												"nodeType": "Return",
												"src": "1075:44:12"
											}
										]
									},
									"functionSelector": "00923f9e",
									"id": 3021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenExists",
									"nameLocation": "1008:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3005,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1028:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 3021,
												"src": "1020:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:17:12"
									},
									"returnParameters": {
										"id": 3009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3021,
												"src": "1058:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3007,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1058:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1057:6:12"
									},
									"scope": 3065,
									"src": "999:128:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3039,
										"nodeType": "Block",
										"src": "1266:119:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3030,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3023,
																	"src": "1297:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3029,
																"name": "tokenExists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3021,
																"src": "1285:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 3031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1285:20:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20646f6573206e6f74206578697374",
															"id": 3032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1307:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726",
																"typeString": "literal_string \"Token does not exist\""
															},
															"value": "Token does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726",
																"typeString": "literal_string \"Token does not exist\""
															}
														],
														"id": 3028,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1277:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1277:53:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3034,
												"nodeType": "ExpressionStatement",
												"src": "1277:53:12"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 3035,
														"name": "tokenDocumentHashes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2950,
														"src": "1349:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 3037,
													"indexExpression": {
														"id": 3036,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3023,
														"src": "1369:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1349:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 3027,
												"id": 3038,
												"nodeType": "Return",
												"src": "1342:35:12"
											}
										]
									},
									"functionSelector": "8796ec86",
									"id": 3040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDocumentHash",
									"nameLocation": "1197:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3023,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1221:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 3040,
												"src": "1213:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1212:17:12"
									},
									"returnParameters": {
										"id": 3027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3040,
												"src": "1251:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3025,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1251:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:15:12"
									},
									"scope": 3065,
									"src": "1188:197:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3063,
										"nodeType": "Block",
										"src": "1479:144:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3049,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3042,
																	"src": "1510:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3048,
																"name": "tokenExists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3021,
																"src": "1498:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 3050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1498:20:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20646f6573206e6f74206578697374",
															"id": 3051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1520:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726",
																"typeString": "literal_string \"Token does not exist\""
															},
															"value": "Token does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726",
																"typeString": "literal_string \"Token does not exist\""
															}
														],
														"id": 3047,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1490:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1490:53:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3053,
												"nodeType": "ExpressionStatement",
												"src": "1490:53:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3055,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3042,
															"src": "1561:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3054,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "1555:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1555:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3057,
												"nodeType": "ExpressionStatement",
												"src": "1555:14:12"
											},
											{
												"expression": {
													"id": 3061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1580:35:12",
													"subExpression": {
														"baseExpression": {
															"id": 3058,
															"name": "tokenDocumentHashes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2950,
															"src": "1587:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 3060,
														"indexExpression": {
															"id": 3059,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3042,
															"src": "1607:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1587:28:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3062,
												"nodeType": "ExpressionStatement",
												"src": "1580:35:12"
											}
										]
									},
									"functionSelector": "7b47ec1a",
									"id": 3064,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3045,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3044,
												"name": "onlyOwner",
												"nameLocations": [
													"1469:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1469:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1469:9:12"
										}
									],
									"name": "burnToken",
									"nameLocation": "1435:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3042,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1453:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "1445:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1445:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1444:17:12"
									},
									"returnParameters": {
										"id": 3046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1479:0:12"
									},
									"scope": 3065,
									"src": "1426:197:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3066,
							"src": "176:1450:12",
							"usedErrors": [
								13,
								18,
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								24,
								1309,
								1318,
								1327
							]
						}
					],
					"src": "33:1593:12"
				},
				"id": 12
			}
		}
	}
}